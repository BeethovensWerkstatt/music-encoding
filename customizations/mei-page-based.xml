<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  © 2018 by the Music Encoding Initiative (MEI).
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://opensource.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"
    xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Music Encoding Initiative Guidelines: <title type="sub">Page-based customization</title></title>
                <respStmt>
                    <resp>Authored by</resp>
                    <name xml:id="LP">Laurent Pugin</name>
                    <name xml:id="AH">Andrew Hankinson</name>
                    <name xml:id="PR">Perry Roland</name>
                    <name xml:id="JK">Johannes Kepper</name>
                </respStmt>
            </titleStmt>
            <publicationStmt>
                <p/>
            </publicationStmt>
            <sourceDesc>
                <p/>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <front>
            <divGen type="toc"/>
        </front>
        <body>
            
            <!-- Limit the set of possible start elements -->
            <schemaSpec ident="mei" ns="http://www.music-encoding.org/ns/mei" prefix="mei_"
                start="mei meiHead meiCorpus music">
                
                <!-- Declare MEI and XLink namespaces for use in Schematron -->
                <constraintSpec ident="set_ns" scheme="isoschematron" mode="add">
                    <constraint>
                        <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mei"
                            uri="http://www.music-encoding.org/ns/mei"/>
                        <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="xlink"
                            uri="http://www.w3.org/1999/xlink"/>
                    </constraint>
                </constraintSpec>
                
                <!-- Include all modules -->
                <!-- Deactivate the mensural and neumes modules -->
                <moduleRef key="MEI"/>
                <moduleRef key="MEI.analytical"/>
                <moduleRef key="MEI.cmn"/>
                <moduleRef key="MEI.cmnOrnaments"/>
                <moduleRef key="MEI.corpus"/>
                <moduleRef key="MEI.critapp"/>
                <moduleRef key="MEI.drama"/>
                <moduleRef key="MEI.edittrans"/>
                <moduleRef key="MEI.externalsymbols"/>
                <moduleRef key="MEI.facsimile"/>
                <moduleRef key="MEI.figtable"/>
                <moduleRef key="MEI.fingering"/>
                <moduleRef key="MEI.frbr"/>
                <moduleRef key="MEI.genetic"/>
                <moduleRef key="MEI.gestural"/>
                <moduleRef key="MEI.harmony"/>
                <moduleRef key="MEI.header"/>
                <moduleRef key="MEI.lyrics"/>
                <moduleRef key="MEI.mensural"/>
                <moduleRef key="MEI.midi"/>
                <moduleRef key="MEI.msDesc"/>
                <moduleRef key="MEI.namesdates"/>
                <moduleRef key="MEI.neumes"/>
                <moduleRef key="MEI.performance"/>
                <moduleRef key="MEI.ptrref"/>
                <moduleRef key="MEI.shared"/>
                <moduleRef key="MEI.stringtab"/>
                <moduleRef key="MEI.text"/>
                <moduleRef key="MEI.usersymbols"/>
                <moduleRef key="MEI.visual"/>
                
                <!-- Include SVG -->
                <moduleRef url="https://www.tei-c.org/release/xml/tei/custom/schema/relaxng/svg11.rng"
                    prefix="svg_">
                    <content>
                        <rng:define name="mei_model.graphicLike" combine="choice">
                            <rng:ref name="svg_svg"/>
                        </rng:define>
                    </content>
                </moduleRef>
                
                <moduleSpec ident="MEI.pageBased" mode="add">
                    <desc/>
                </moduleSpec>
                
                <classSpec ident="model.pagesLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects pagesLike elements.</desc>
                </classSpec>
                
                <elementSpec ident="pages" module="MEI.pageBased" mode="add">
                    <desc>A set of pages in a page-based encoding</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.pagesLike"/>
                    </classes>
                    <content>
                        <rng:zeroOrMore>
                            <rng:ref name="model.pageLike"/>
                        </rng:zeroOrMore>
                    </content>
                </elementSpec>
                
                <classSpec ident="model.pageLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects pageLike elements.</desc>
                </classSpec>
                
                <elementSpec ident="page" module="MEI.pageBased" mode="add">
                    <desc>A page in a page-base encoding</desc>
                    <classes>
                        <memberOf key="att.pages"/>
                        <!-- was: att.scoreDef.vis -->
                        <memberOf key="att.common"/>
                        <memberOf key="att.pageRef"/>
                        <memberOf key="att.surface"/>
                        <memberOf key="model.pageLike"/>
                    </classes>
                    <content>
                        <rng:zeroOrMore>
                            <rng:choice>
                                <rng:ref name="model.systemLike"/>
                                <rng:ref name="model.msLike"/>
                                <rng:ref name="model.secbLike"/>
                                <rng:ref name="model.mdivbLike"/>
                                <rng:ref name="model.scoreLike"/>
                                <rng:ref name="model.partsLike"/>
                            </rng:choice>
                        </rng:zeroOrMore>
                    </content>
                </elementSpec>
                
                <!-- remove att.pages and att.systems from att.scoreDef.vis, 
                    as they go on other elements now -->
                <!--<classSpec ident="att.scoreDef.vis" module="MEI.visual" type="atts" mode="change">
                    <desc>Visual domain attributes for scoreDef in the CMN repertoire.</desc>
                    <classes mode="change">
                        <memberOf key="att.pages" mode="delete"/>
                        <memberOf key="att.systems" mode="delete"/>
                    </classes>
                </classSpec>-->
                
                <elementSpec ident="body" module="MEI.shared" mode="change">
                    <content>
                        <rng:oneOrMore>
                            <rng:choice>
                                <rng:ref name="model.divLike"/>
                                <rng:ref name="model.mdivLike"/>
                                <rng:ref name="model.pagesLike"/>
                            </rng:choice>
                        </rng:oneOrMore>
                    </content>
                    <!--<constraintSpec ident="page-atts-on-scoreDef" scheme="isoschematron" mode="add">
                        <constraint>
                            <sch:rule context="mei:scoreDef">
                                <sch:assert role="warning" test="@*[starts-with(local-name(),'page.')]">Page-related attributes should go on a page element.</sch:assert>
                                <sch:assert role="warning" test="@*[starts-with(local-name(),'system.')]">System-related attributes should go on a system element.</sch:assert>                                
                            </sch:rule>
                        </constraint>
                    </constraintSpec>       --> 
                </elementSpec>
                
                <classSpec ident="model.systemLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects systemLike elements.</desc>
                </classSpec>
                
                <elementSpec ident="system" module="MEI.pageBased" mode="add">
                    <desc>A system in a page-based encoding</desc>
                    <classes>
                        <memberOf key="att.systems"/>
                        <memberOf key="att.common"/>
                        <memberOf key="att.coordinated"/>
                        <memberOf key="model.systemLike"/>
                    </classes>
                    <content>
                        <!-- then the actual content of a system -->
                        <rng:zeroOrMore>
                            <rng:choice>
                                <!-- section are turned into milestones -->
                                <rng:ref name="model.secbLike"/>
                                <!-- measures for measured music -->
                                <rng:ref name="model.measureLike"/>
                                <!-- staves for un-measured music -->
                                <rng:ref name="model.staffLike"/>
                                <!-- scoreDef for redefinition -->
                                <rng:ref name="model.scoreDefLike"/>
                                <rng:ref name="model.msLike"/>
                                <!-- anything else? -->
                            </rng:choice>
                        </rng:zeroOrMore>
                    </content>
                </elementSpec>
                
                <classSpec ident="model.secbLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects secbLike (section beginning) elements.</desc>
                </classSpec>
                
                <!-- because the hierarchy is flipped, &lt;section&gt; has to become a milestone -->
                <elementSpec ident="secb" module="MEI.pageBased" mode="add">
                    <desc>(section beginning) – A milestone element indicating the start of a new section in page-based MEI.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.secbLike"/>
                    </classes>
                    <content>
                        <rng:empty/>
                    </content>
                </elementSpec>
                
                <classSpec ident="model.mdivbLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects mdivbLike (mdiv beginning) elements.</desc>
                </classSpec>
                
                <elementSpec ident="mdivb" module="MEI.pageBased" mode="add">
                    <desc>(mdiv beginning) – A milestone element indicating the start of a new mdiv in page-based MEI.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.mdivbLike"/>
                    </classes>
                    <content>
                        <rng:empty/>
                    </content>
                </elementSpec>
                
                <classSpec ident="model.scorebLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects scorebLike (score beginning) elements.</desc>
                </classSpec>
                
                <elementSpec ident="scoreb" module="MEI.pageBased" mode="add">
                    <desc>(score beginning) – A milestone element indicating the start of a new score in page-based MEI.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.scorebLike"/>
                    </classes>
                    <content>
                        <rng:optional>
                            <rng:ref name="model.scoreDefLike"/>
                        </rng:optional>
                    </content>
                    <remarks>
                        <p>This element is necessary to allow round-tripping between page-based and score-based (regular) MEI.</p>
                    </remarks>
                </elementSpec>
                
                <classSpec ident="model.partsbLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects partsbLike (parts beginning) elements.</desc>
                </classSpec>
                
                <elementSpec ident="partsb" module="MEI.pageBased" mode="add">
                    <desc>(parts beginning) – A milestone element indicating the start of new parts in page-based MEI.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.scorebLike"/>
                    </classes>
                    <content>
                        <rng:empty/>
                    </content>
                    <remarks>
                        <p>This element is necessary to allow round-tripping between page-based and score-based (regular) MEI.</p>
                    </remarks>
                </elementSpec>
                
                <classSpec ident="model.partbLike" type="model" module="MEI.pageBased" mode="add">
                    <desc>Collects partbLike (part beginning) elements.</desc>
                </classSpec>
                
                <elementSpec ident="partb" module="MEI.pageBased" mode="add">
                    <desc>(part beginning) – A milestone element indicating the start of a new part in page-based MEI.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.partbLike"/>
                    </classes>
                    <content>
                        <rng:optional>
                            <rng:ref name="model.scoreDefLike"/>
                        </rng:optional>
                    </content>
                    <remarks>
                        <p>This element is necessary to allow round-tripping between page-based and score-based (regular) MEI.</p>
                    </remarks>
                </elementSpec>
                
                <classSpec ident="model.msLike" type="model" module="MEI.ptrref" mode="add">
                    <desc>Collects milestone like elements.</desc>
                </classSpec>
                
                <elementSpec ident="ms" module="MEI.ptrref" mode="add">
                    <desc>(milestone) – A generic milestone element that can be used as anchor in an MEI file.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="model.msLike"/>
                        <!-- the following two will allow ms to appear in many places -->
                        <memberOf key="model.annotLike"/>
                        <memberOf key="model.eventLike"/>
                    </classes>
                    <content>
                        <rng:empty/>
                    </content>
                </elementSpec>
                
                <elementSpec ident="msEnd" module="MEI.ptrref" mode="add">
                    <desc>(milestone end) – A milestone element that can be used to indicate the end of an arbitrary feature in MEI.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="att.startId"/>
                        <memberOf key="model.msLike"/>
                        <!-- the following two will allow ms to appear in many places -->
                        <memberOf key="model.annotLike"/>
                        <memberOf key="model.eventLike"/>
                    </classes>
                    <content>
                        <rng:empty/>
                    </content>
                    <constraintSpec ident="check_msEnd" scheme="isoschematron">
                        <constraint>
                            <sch:rule context="mei:msEnd">
                                <sch:assert role="error" test="exists(@startid)">msEnd needs a @startid attribute.</sch:assert>                                                                
                            </sch:rule>
                        </constraint>
                    </constraintSpec>        
                    <remarks>
                        <p>The @startid attribute should be used to point to the element starting the feature that is ended by an msEnd.</p>
                    </remarks>
                </elementSpec>
                
                <classSpec ident="att.coord.x1" module="MEI.shared" type="atts">
                    <desc>Attributes that record the x coordinate of the left side of a feature.</desc>
                    <attList>
                        <attDef ident="coord.x1" usage="opt">
                            <desc>gives coordinates for the left side of a feature.</desc>
                            <datatype>
                                <rng:data type="decimal">
                                    <rng:param name="minInclusive">0</rng:param>
                                </rng:data>
                            </datatype>
                        </attDef>
                    </attList>
                </classSpec>
                <classSpec ident="att.coord.x2" module="MEI.shared" type="atts">
                    <desc>Attributes that record the x coordinate of the right side of a feature.</desc>
                    <attList>
                        <attDef ident="coord.x2" usage="opt">
                            <desc>gives coordinates for the right side of a feature.</desc>
                            <datatype>
                                <rng:data type="decimal">
                                    <rng:param name="minInclusive">0</rng:param>
                                </rng:data>
                            </datatype>
                        </attDef>
                    </attList>
                </classSpec>
                <classSpec ident="att.coord.y1" module="MEI.shared" type="atts">
                    <desc>Attributes that record the y coordinate of the top left of a feature.</desc>
                    <attList>
                        <attDef ident="coord.y1" usage="opt">
                            <desc>gives y coordinates for the top left of a feature.</desc>
                            <datatype>
                                <rng:data type="decimal">
                                    <rng:param name="minInclusive">0</rng:param>
                                </rng:data>
                            </datatype>
                        </attDef>
                    </attList>
                </classSpec>
                <classSpec ident="att.coord.y2" module="MEI.shared" type="atts">
                    <desc>Attributes that record the y coordinate of the top right of a feature.</desc>
                    <attList>
                        <attDef ident="coord.y1" usage="opt">
                            <desc>gives y coordinates for the top right of a feature.</desc>
                            <datatype>
                                <rng:data type="decimal">
                                    <rng:param name="minInclusive">0</rng:param>
                                </rng:data>
                            </datatype>
                        </attDef>
                    </attList>
                </classSpec>
                
                <classSpec ident="att.coord.lr" module="MEI.shared" type="atts">
                    <desc>Attributes for left/right coordinates.</desc>
                    <classes>
                        <memberOf key="att.coord.x1"/>
                        <memberOf key="att.coord.x2"/>
                    </classes>
                </classSpec>
                
                <elementSpec ident="measure" module="MEI.cmn" mode="change">
                    <classes mode="change">
                        <memberOf key="att.coord.lr" mode="add"/>
                    </classes>
                </elementSpec>
                
                <elementSpec ident="staff" module="MEI.shared" mode="change">
                    <classes mode="change">
                        <memberOf key="att.coord.y1" mode="add"/>
                    </classes>
                </elementSpec>
                        
                <classSpec ident="att.xy" module="MEI.shared" type="atts" mode="change">
                    <classes mode="change">
                        <memberOf key="att.coord.x1"/>
                    </classes>
                </classSpec>
                
                <!-- Making att.facsimile a member of att.coordinated -->
                <!-- is this necessary? -->
                <!--<classSpec ident="att.facsimile" module="MEI.facsimile" type="atts" mode="change">
                    <desc>Attributes that associate a feature corresponding with all or part of an image.</desc>
                    <classes mode="change">
                        <memberOf key="att.coordinated" mode="add"/>
                    </classes>
                </classSpec>-->
                
                
                <!-- todos down here -->
                
                
                
                <classSpec ident="att.surface" module="MEI.pageBased" type="atts" mode="add">
                    <desc>This attribute is used to point to a surface.</desc>
                    <attList>
                        <attDef ident="surface" usage="opt">
                            <desc>contains a reference to a surface element</desc>
                            <datatype>
                                <rng:ref name="data.URI"/>
                            </datatype>
                        </attDef>
                    </attList>
                </classSpec>
                
            </schemaSpec>
        </body>
    </text>
</TEI>
