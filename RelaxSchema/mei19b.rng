<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns="http://relaxng.org/ns/structure/1.0" xmlns:xhtml="http://www.w3.org/1000/xhtml"
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

  <include href="datatypes.rng"/>

  <div xml:id="att.alignment">
    <xhtml:div>
      <xhtml:h1 class="name">att.alignment</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The when attribute indicates a particular kind, i.e., temporal,
          correspondence. It should be used to point to when elements in one or more
          timeline elements. This class of attributes is unavailable unless the
          meiLinkAlign module is INCLUDEd.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.alignment">
      <empty/>
    </define>
  </div>

  <div xml:id="att.bibl">
    <xhtml:div>
      <xhtml:h1 class="name">att.bibl</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Bibliographic attributes: The analog attribute contains a reference to a
          field or element in another descriptive encoding system to which an MEI element
          is comparable. Mapping elements from one system to another may help a repository
          harvest selected data from the MEI file to build a basic catalog record. The
          encoding system from which fields are taken must be specified. When possible,
          subfields as well as fields should be specified, e.g., subfields within MARC
          fields.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.bibl">
      <optional>
        <attribute name="analog"/>
      </optional>
    </define>
  </div>

  <div xml:id="att.color">
    <xhtml:div>
      <xhtml:h1 class="name">att.color</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The color attribute is used to indicate visual appearance. Do not confuse
          this with the musical term 'color' as used in pre-CMN notation.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.color">
      <optional>
        <attribute name="color">
          <ref name="data.COLOR"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.common.anl">
    <xhtml:div>
      <xhtml:h1 class="name">att.common.anl</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Common analytical attributes: corresp may be used to point to other
          events or control events that correspond to this event in some fashion. When the
          meiLinkAlign module is INCLUDEd, the when attribute is also a member of this
          attribute class.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.common.anl">
      <optional>
        <attribute name="corresp">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <ref name="att.alignment"/>
    </define>
  </div>

  <div xml:id="att.common">
    <xhtml:div>
      <xhtml:h1 class="name">att.common</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Common attributes: Each id attribute within a document must have a unique
          value. The id attribute regularizes the naming of the element and thus
          facilitates building links between it and other resources. The n attribute may
          be used to provide a label (name or number) for the element. While its value
          need not be unique, it is required to be a single token.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.common">
      <optional>
        <attribute name="id">
          <data type="ID"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="n">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.controlevent">
    <xhtml:div>
      <xhtml:h1 class="name">att.controlevent</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Events which rely on other events for their existence: For example, a
          slur/phrase marking must be drawn between or over a group of notes. The slur is
          therefore a control event. The layer and staff attributes allow the control
          event to express its scope of influence. The plist (participant list) attribute
          may contain ID references or xPointer fragment identifiers (depending on how %
          PLIST is configured) that identify logical events that participate in the
          control event, e.g., notes under a phrase mark. The tstamp attribute encodes the
          onset time of a musical feature in terms of musical time, i.e., beats. The
          tstamp.ges attribute may be used to record the onset time in pulses per quarter
          note (ppq, MusicXML divisions, or MIDI clicks) since the start of the measure,
          while the tstamp.real attribute records the onset time as a real-time offset,
          i.e., HH:MM:SS.ss, since the beginning of the file.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.controlevent">
      <optional>
        <attribute name="layer">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="next">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="plist">
          <ref name="data.PLIST"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="prev">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <attribute name="staff">
        <ref name="data.INTEGERPOSITIVE"/>
      </attribute>
      <optional>
        <attribute name="tstamp">
          <ref name="data.BEAT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp.ges">
          <ref name="data.INTEGERNONNEGATIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp.real">
          <ref name="data.ISOTIME"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.date">
    <xhtml:div>
      <xhtml:h1 class="name">att.date</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes common to dates: calendar indicates the system or calendar to
          which the date belongs, for example, Gregorian, Julian, Roman, Mosaic,
          Revolutionary, Islamic; cert indicates the degree of precision to be attributed
          to the date. from contains the starting point of a date range; notafter should
          contain an upper boundary for an uncertain date while notbefore should contain a
          lower boundary, e.g, &lt;date notbefore='1957' notafter='1960'&gt;Feb.
          5&lt;/date&gt;; reg gives the value of the date in standard ISO form; to
          contains the end point of a date range.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.date">
      <optional>
        <attribute name="calendar">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="cert">
          <ref name="data.CERTAINTY"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="from">
          <ref name="data.ISODATE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="notafter">
          <ref name="data.ISODATE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="notbefore">
          <ref name="data.ISODATE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="reg">
          <ref name="data.ISODATE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="to">
          <ref name="data.ISODATE"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.edit">
    <xhtml:div>
      <xhtml:h1 class="name">att.edit</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes describing the nature of an encoded scholarly intervention or
          interpretation: cert signifies the degree of certainty associated with the
          intervention or interpretation. evidence indicates the nature of the evidence
          supporting the reliability or accuracy of the intervention or interpretation.
          Suggested values include: 'internal', 'external', 'conjecture'. The resp
          attribute indicates responsibility for the identification or content within the
          element to which it is attached. It must point to one or more of the identifiers
          declared in the document header, associated with a person asserted as
          responsible for some aspect of the text's creation, transcription, editing, or
          encoding. The source attribute contains a list of one or more pointers
          indicating the sources which support the given reading.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.edit">
      <optional>
        <attribute name="cert">
          <ref name="data.CERTAINTY"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="evidence">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="resp">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="source">
          <data type="IDREFS"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.event">
    <xhtml:div>
      <xhtml:h1 class="name">att.event</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes that apply to all written events, e.g., beam, beatrpt, chord,
          note, etc. The tstamp attribute encodes the onset time of a musical feature in
          terms of musical time, i.e., beats. The tstamp.ges attribute may be used to
          record the onset time in pulses per quarter note (ppq, MusicXML divisions, or
          MIDI clicks) since the start of the measure, while the tstamp.real attribute
          records the onset time as a real-time offset, i.e., in HH:MM:SS.ss format, since
          the beginning of the file.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.event">
      <optional>
        <attribute name="layer">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="next">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="prev">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="staff">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp">
          <ref name="data.BEAT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp.ges">
          <ref name="data.INTEGERNONNEGATIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp.real">
          <ref name="data.ISOTIME"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.facsimile">
    <xhtml:div>
      <xhtml:h1 class="name">att.facsimile</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>All elements subscribing to this class may include one or more ID
          references to an image or to an image zone which corresponds to the element.
          This attribute class is unavailable unless the meiFacsimile module is
          INCLUDEd.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.facsimile">
      <empty/>
    </define>
  </div>

  <div xml:id="att.link.common">
    <xhtml:div>
      <xhtml:h1 class="name">att.link.common</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes common to all linking elements: actuate defines whether a link
          occurs automatically or must be requested by the user. It is used in conjunction
          with the show attribute to determine link behavior. show defines whether a
          remote resource that is the target of a link appears at the point of the link,
          replaces the existing link, or appears in a new window. The targettype attribute
          allows the target resource to be characterized, using any convenient
          classification scheme or typology.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.link.common">
      <optional>
        <attribute name="actuate">
          <choice>
            <value>onLoad</value>
            <value>onRequest</value>
            <value>other</value>
            <value>none</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="arcrole"/>
      </optional>
      <optional>
        <attribute name="role"/>
      </optional>
      <optional>
        <attribute name="show">
          <choice>
            <value>new</value>
            <value>replace</value>
            <value>other</value>
            <value>none</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="targettype">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="title"/>
      </optional>
    </define>
  </div>

  <div xml:id="att.link.external">
    <xhtml:div>
      <xhtml:h1 class="name">att.link.external</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Linking attributes for external referencing elements: entityref
          references a previously-declared entity which represents a complete document.
          The href attribute allows the use of an previously- undeclared URI. The fragment
          attribute allows one to identify one or more sub-parts within the document being
          pointed to.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.link.external">
      <optional>
        <attribute name="entityref">
          <data type="ENTITY"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="fragment">
          <ref name="data.FRAGMENT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="href">
          <ref name="data.URI"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.link.internal">
    <xhtml:div>
      <xhtml:h1 class="name">att.link.internal</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Linking attributes for internal referencing elements: plist contains an
          ID reference for each of the participants in a collection of elements.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.link.internal">
      <optional>
        <attribute name="plist">
          <ref name="data.PLIST"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.name">
    <xhtml:div>
      <xhtml:h1 class="name">att.name</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes shared by names: The authority attribute should contain the
          name of the list from which a controlled value is taken, such as the Thesaurus
          of Geographic Names (TGN), etc. The key attribute may be used to record a value
          which serves as a primary key in an external database. The reg attribute may be
          used to record a regularized form of the name.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.name">
      <optional>
        <attribute name="authority"/>
      </optional>
      <optional>
        <attribute name="key">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="reg"/>
      </optional>
    </define>
  </div>

  <div xml:id="att.nextprev">
    <xhtml:div>
      <xhtml:h1 class="name">att.nextprev</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The next attribute may be used to point to the next control event(s) in a
          user-defined collection, while the prev attribute may point to the previous
          event(s).</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.nextprev">
      <optional>
        <attribute name="next">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="prev">
          <data type="IDREFS"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.startendid">
    <xhtml:div>
      <xhtml:h1 class="name">att.startendid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>These attributes record the IDs of a sequence of elements to which the
          current element is associated. startid holds a reference to the first element in
          the sequence, while endid indicates the final element in the sequence.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.startendid">
      <optional>
        <attribute name="endid">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="startid">
          <data type="IDREF"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.lang">
    <xhtml:div>
      <xhtml:h1 class="name">att.lang</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes common to text elements: The lang attribute should be used to
          identify the language of the word or text phrase marked. Its value must be the
          identifier of a language element supplied in the MEI header of the current
          document.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.lang">
      <optional>
        <attribute name="lang">
          <data type="IDREF"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.trans">
    <xhtml:div>
      <xhtml:h1 class="name">att.trans</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes for elements encoding authorial or scribal intervention when
          transcribing manuscript or similar sources: The hand attribute signifies the
          hand of the agent which made the intervention. Its value must be the ID of a
          hand element declared in the header. The seq attribute may be used to assign a
          sequence number related to the order in which the encoded features carrying this
          attribute are believed to have occurred.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.trans">
      <optional>
        <attribute name="hand">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="seq">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.typed">
    <xhtml:div>
      <xhtml:h1 class="name">att.typed</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Attributes which can be used to classify or subclassify elements in any
          way: type characterizes the element in some sense, using any convenient
          classification scheme or typology. The subtype attribute may be used to provide
          any sub-classification for the element, additional to that given by its type
          attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.typed">
      <optional>
        <attribute name="subtype">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="type">
          <data type="NMTOKEN"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.typography">
    <xhtml:div>
      <xhtml:h1 class="name">att.typography</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Typographical attributes: fontfam contains the name of a font- family.
          fontname records the name of the font. fontsize indicates the size of the font
          in points. fontstyle records the style of the font, i.e, italic, oblique, or
          normal. fontweight may be used to indicate bold type.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.typography">
      <optional>
        <attribute name="fontfam">
          <ref name="data.FONTFAMILY"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="fontname">
          <ref name="data.FONTNAME"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="fontsize">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="fontstyle">
          <ref name="data.FONTSTYLE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="fontweight">
          <ref name="data.FONTWEIGHT"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.xy">
    <xhtml:div>
      <xhtml:h1 class="name">att.xy</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Output coordinate attributes: Some elements may have their exact *output*
          coordinates recorded. x and y indicate where to place the rendered output.
          Recording the coordinates of a feature in a facsimile requires the use of the
          facs attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.xy">
      <optional>
        <attribute name="x">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="y">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.xy.required">
    <xhtml:div>
      <xhtml:h1 class="name">att.xy.required</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Output coordinate attributes: Some elements must have their exact
          *output* coordinates recorded. x and y indicate where to place the rendered
          output. Recording the coordinates of a feature in a facsimile requires the use
          of the facs attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.xy.required">
      <attribute name="x">
        <ref name="data.NUMBER"/>
      </attribute>
      <attribute name="y">
        <ref name="data.NUMBER"/>
      </attribute>
    </define>
  </div>

  <div xml:id="att.anl.barline">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.barline</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: barline uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.barline">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.barline">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.barline</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.barline">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.barline">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.barline</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The complete attribute allows the encoding of
          whether the measure preceding this barline matches the prevailing meter: a value
          of 'c' indicates a metrically complete measure, 'i' indicates a measure with not
          enough beats, while 'o' is for measures with too many beats. The control
          attribute indicates whether or not the barline is "controlling"; that is, if it
          indicates a point of alignment across all the parts. Barlines within a score are
          usually controlling' that is, they "line up". Barlines within parts may or may
          not be controlling. When the preceding measure contents indicate a repetition of
          a earlier measure's contents, the measref attribute may be employed to reference
          the barline preceding the contents of this earlier measure. The rend attribute
          records the appearance of the barline.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.barline">
      <optional>
        <attribute name="complete">
          <choice>
            <value>c</value>
            <value>i</value>
            <value>o</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="control">
          <ref name="data.BOOLEAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="rend">
          <ref name="data.BARRENDITION"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="measref">
          <data type="IDREF"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.barline">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.barline</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The barplace attribute records the location of
          the barline. If takt barlines are to be used, then the taktplace attribute may
          be used to denote the staff location of the shortened barline. For rendering
          purposes, some music data systems rely on measure width data. The width
          attribute allows for the capture of this data in MEI for output back to these
          systems.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.barline">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.clef">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.clef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: clef uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.clef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.clef">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.clef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.clef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.clef">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.clef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The shape and line attributes capture the clef
          symbol and its location on the staff. The default octave, used when the first
          note of a measure provides no oct attribute, is set by the octave.default
          attribute. trans encodes any octave offset included in the clef symbol, such as
          an '8' above or below the clef.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.clef">
      <attribute name="line">
        <ref name="data.CLEFLINE"/>
      </attribute>
      <optional>
        <attribute name="octave.default">
          <ref name="data.OCTAVE"/>
        </attribute>
      </optional>
      <attribute name="shape">
        <ref name="data.CLEFSHAPE"/>
      </attribute>
      <optional>
        <attribute name="trans">
          <ref name="data.CLEFTRAN"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.clef">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.clef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.clef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.custos">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.custos</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The pname and oct attributes identify the
          location where the custos appears. This is usually, but not always, the same as
          the target pitch. The target pitch may be referenced using the target
          attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.custos">
      <attribute name="oct">
        <ref name="data.OCTAVE"/>
      </attribute>
      <attribute name="pname">
        <ref name="data.PITCHNAME"/>
      </attribute>
      <optional>
        <attribute name="source">
          <data type="IDREF"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="target">
          <data type="IDREF"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.custos">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.custos</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.custos">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.dot">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.dot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: dot uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.dot">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.dot">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.dot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.dot">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.dot">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.dot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The form attribute records the function of the
          dot; that is dot of augmentation or dot of division. loc encodes the staff
          location of the dot.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.dot">
      <optional>
        <attribute name="form">
          <choice>
            <value>aug</value>
            <value>div</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="loc">
          <ref name="data.STAFFLOC"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.dot">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.dot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.dot">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.ending">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.ending</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: ending uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.ending">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.ending">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.ending</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.ending">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.ending">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.ending</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.ending">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.ending">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.ending</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.ending">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.grpsym">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.grpsym</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: grpsym uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.grpsym">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.grpsym">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.grpsym</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.grpsym">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.grpsym">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.grpsym</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: symbol specifies the symbol used to group a
          set of staves.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.grpsym">
      <attribute name="symbol">
        <choice>
          <value>brace</value>
          <value>bracket</value>
          <value>line</value>
        </choice>
      </attribute>
    </define>
  </div>

  <div xml:id="att.vis.grpsym">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.grpsym</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.grpsym">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.layer">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.layer</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: layer uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.layer">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.layer">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.layer</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.layer">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.layer">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.layer</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.layer">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.layer">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.layer</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: visible determines if the entire layer is to be
          displayed.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.layer">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.layerdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.layerdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: Since the layer element carries analytical
          attributes for the layer, no analysis attributes are defined for
          layerdef.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.layerdef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.layerdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.layerdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: Setting the grace attribute here provides the
          possibility of changing all the grace attribute values in a given layer without
          having to individually change each note's grace attribute value. The midi.*
          attributes function as default values when creating sounding output:
          midi.channel sets the default MIDI channel, midi.duty specifies the 'on' part of
          the duty cycle as a percentage, midi.instr sets the default MIDI instrument
          number, midi.instrname provides a label for the MIDI instrument, midi.port sets
          the default MIDI port value, and midi.track sets the default MIDI track
          number.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.layerdef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.layerdef.mensural">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.layerdef.mensural</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The beam.group attribute contains an example
          of how beaming (including secondary beams) is to be carried out, e.g.
          '(4.,4.,4.)' indicates one outer beam per measure with secondary beams broken at
          each dotted quarter duration. beam.rests determines whether rests are allowed
          under a beam. A default duration is captured by dur.default for those situations
          when the first note, rest, chord, etc. in a measure does not have a duration
          specified. The octave.default attribute behaves in a similar fashion.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.layerdef.mensural">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.layerdef.base">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.layerdef.base</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.layerdef.base">
      <optional>
        <attribute name="beam.group"/>
      </optional>
      <optional>
        <attribute name="beam.rests">
          <ref name="data.BOOLEAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="dur.default">
          <ref name="data.DURATIONS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="octave.default">
          <ref name="data.OCTAVE"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.log.layerdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.layerdef</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.layerdef">
      <ref name="att.log.layerdef.base"/>
      <ref name="att.log.layerdef.mensural"/>
    </define>
  </div>

  <div xml:id="att.vis.layerdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.layerdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The beam.rend attribute captures whether a beam
          is feathered and in which direction - 'acc' indicates that the secondary beams
          get progressively closer together, coming together at the end of the beam, while
          'rit' means that the secondary beams start at the same point and get
          progressively more distant. The default value for the slope of beams is recorded
          in beam.slope. The slur.rend and tie.rend attributes provide default values for
          the appearance of slurs and ties when this information is not provided on the
          individual elements. Similarly, the text.* attributes provide default values for
          text associated with the layer.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.layerdef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.ligature">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.ligature</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: ligature uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.ligature">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.ligature">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.ligature</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.ligature">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.ligature">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.ligature</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The form attribute provides an indication of
          the function of the ligature.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.ligature">
      <optional>
        <attribute name="form">
          <ref name="data.LIGATUREFORM"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.ligature">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.ligature</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.ligature">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.mensur">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.mensur</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: mensur uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.mensur">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.mensur">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.mensur</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.mensur">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.mensur">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.mensur</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The tempus, prolatio, modusmaior, and
          modusminor attributes specify the relationship between the four principle levels
          of note value, i.e., the long, breve, semibreve and minim, in mensural notation.
          Modusminor describes the long-breve relationship, while tempus describes the
          breve-semibreve, and prolatio the semibreve-minim relationship, respectively.
          Modusmaior is for the maxima-long relationship.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.mensur">
      <optional>
        <attribute name="modusmaior">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="modusminor">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="num">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="numbase">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="prolatio">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="tempus">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.mensur">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.mensur</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: These attributes describe the physical
          appearance of the mensuration sign/time signature of mensural notation. Sign is
          the base symbol, while the dot, form, loc (location), orient, size, and slash
          attributes describe the attributes of the sign. Dot records if a dot is added to
          the base symbol, form indicates whether the base symbol is written vertically or
          horizontally, and loc specifies the placement of the base symbol on the staff.
          Orient describes the rotation or reflection of the base symbol, size its
          relative size, and slash indicates the number of lines added to it, for example,
          one slash is added for what we now call 'alla breve'.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.mensur">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.proport">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.proport</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: proport uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.proport">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.proport">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.proport</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.proport">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.proport">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.proport</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: These attributes describe augmentation or
          diminution of the normal value of the notes in mensural notation. Together, num
          and numbase specify the change as a ratio, e.g., 1:3. Numbase is for the first
          value in the ratio and numbase the second.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.proport">
      <attribute name="num">
        <ref name="data.INTEGERPOSITIVE"/>
      </attribute>
      <attribute name="numbase">
        <ref name="data.INTEGERPOSITIVE"/>
      </attribute>
    </define>
  </div>

  <div xml:id="att.vis.proport">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.proport</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.proport">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.part">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.part</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: part uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.part">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.part">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.part</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.part">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.part">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.part</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.part">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.part">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.part</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.part">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.parts">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.parts</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: parts uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.parts">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.parts">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.parts</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.parts">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.parts">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.parts</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.parts">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.parts">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.parts</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.parts">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.sb">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.sb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: sb uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.sb">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.sb">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.sb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.sb">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.sb">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.sb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: Source descriptions in the header may be
          pointed to by putting their IDs in the source attribute. This allows system
          breaks from multiple sources to be encoded.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.sb">
      <optional>
        <attribute name="source">
          <data type="IDREFS"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.sb">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.sb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The rend attribute indicates whether hash marks
          should be rendered between systems. See Read, p. 436, ex. 26-3.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.sb">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.score">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.score</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: score uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.score">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.score">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.score</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.score">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.score">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.score</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.score">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.score">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.score</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.score">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.scoredef">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.scoredef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.scoredef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.scoredef">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.scoredef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: The values set in these attributes act as
          score-wide defaults for attributes that are not set in descendant elements. For
          example, the grace attribute value here applies to all the grace attribute
          values in the score (or, more accurately, until the next scoredef element)
          without having to individually set each note's grace attribute value. The midi.*
          attributes function as default values when creating sounding output:
          midi.channel sets the default MIDI channel, midi.duty specifies the 'on' part of
          the duty cycle as a percentage, midi.instr sets the default MIDI instrument
          number, midi.instrname provides a label for the MIDI instrument, midi.port sets
          the default MIDI port value, and midi.track sets the default MIDI track number.
          Tempo in beats (meter signature denominator) per minute can be set using the
          tempo attribute. The tune.* attributes provide the capability of recording a
          tuning reference pitch. tune.pname holds the pitch name, such as 'a', while
          tune.Hz holds a value for cycles per second, i.e., Hertz, and tune.temper
          provides a label for the tuning system, 'just', for example. Suggested software
          default values are: grace - 'acc', midi.channel - '1', midi.div - '96',
          midi.duty - '80', midi.instr - '1' (General MIDI instrument number 1),
          midi.instrname - 'Acoustic Piano' (General MIDI instrument name), midi.port -
          '1', midi.tempo - '120', midi.track - '1', tempo - beats per minute '120',
          tune.pname - 'a', tune.Hz - '440', tune.temper - 'equal'</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.scoredef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.scoredef.mensural">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.scoredef.mensural</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The attributes in the class
          att.log.scoredef.mensural are provided for mensural notation. The tempus,
          prolatio, modusmaior, and modusminor attributes specify the relationship between
          the four principle levels of note value, i.e., the long, breve, semibreve and
          minim, in mensural notation. Modusminor describes the long-breve relationship,
          while tempus describes the breve- semibreve, and prolatio the semibreve-minim
          relationship, respectively. Modusmaior is for the maxima-long relationship. The
          proport.* attributes describe augmentation or diminution of the normal value of
          the notes in mensural notation. Together, proport.num and proport.numbase
          specify the change as a ratio, e.g., 1:3. Proport.numbase is for the first value
          in the ratio and proport.numbase the second. The attributes in the class
          att.log.scoredef.base are provided for common Western music notation. The values
          set in these attributes act as score-wide defaults for attributes that are not
          set in descendant elements. The beam.group attribute provides an example of how
          beaming (including secondary beams) is to be performed. It can be used to set a
          default beaming pattern to be used when no beaming is indicated at the event
          level. beam.group must contain a comma-separated list of time values that add up
          to a measure, e.g., in 4/4 time '4,4,4,4' indicates each quarter note worth of
          shorter notes would be beamed together. Parentheses can be used to indicate
          sub-groupings of secondary beams. For example, '(4.,4.,4.)' in 9/8 meter
          indicates one outer beam per measure with secondary beams broken at each dotted
          quarter duration, while a measure of 16th notes in 4/4 with beam.group equal to
          '(4,4),(4,4)' will result in a primary beam covering all the notes and secondary
          beams each group of 4 notes. This beaming "directive" can be overridden by using
          beam elements. If neither beam elements or the beam.group attribute is used,
          then no beaming is rendered. Beaming can be 'turned off' by setting beam.group
          to an empty string. The beam.rests attribute indicates whether beams should
          include rests shorter than a quarter note duration. clef.line contains a default
          value for the position of the clef, while clef.shape encodes a value for the
          clef symbol and clef.trans records an octave shift to be applied to the clef.
          The default duration is held by the dur.default attribute. The value here is
          used to determine the duration value of the first note in a layer if it has no
          dur attribute. The key.* attributes encode information regarding the key and key
          signature. key.pname holds the pitch name of the tonic key, e.g. 'c' for the key
          of C, while key.accid contains an accidental for the tonic key, if one is
          required, e.g., if key.pname equals 'c' and key.accid equals 's', then a tonic
          of C# is indicated. The mode in major-minor tonality is encoded in the key.mode
          attribute. Key signature is normally indicated by a value in key.sig showing
          where the key is in the circle of fifths. Mixed key signatures, e.g. those
          consisting of a mixture of flats and sharps (Read, p. 143, ex. 9-39), and key
          signatures with unorthodox placement of the accidentals (Read, p. 141) must be
          indicated by setting the key.sig attribute to 'mixed' and providing explicit
          keysig info in the key.sig.mixed attribute or in the keysig element. It is
          intended that key.sig.mixed contain a series of tokens with each token
          containing pitch name, accidental, and octave, such as 'As4 Cs5 Ef5' that
          indicate what key accidentals should be rendered and where they should be
          placed. The number of beats in a measure, that is, the top number of the meter
          signature, should be captured in the meter.count attribute and the beat unit,
          that is, the bottom number of the meter signature, should be placed in the
          meter.unit attribute. If rendering of a meter symbol, such as 'C' for common
          time, is desired instead of a numerical meter signature, the meter.sym attribute
          should be used. octave.default functions similarly to dur.default. If the oct
          attribute isn't given on the first note of a measure, then the value of
          octave.default is used. The trans.* attributes accommodate transposing scores.
          The amount of diatonic pitch shift, e.g. C to C# = 0, C to Db = 1, can be
          recorded in trans.diat, while trans.semi holds the amount of pitch shift in
          semitones, C to C# = 1, C to Db = 1. Transposition requires both trans.diat and
          trans.semi attributes in order to distinguish the difference, for example,
          between a transposition from C to C# and one from C to Db. Suggested software
          default values: beam.group - empty string, beam.rests - 'no', clef.line - '2',
          clef.shape - 'G', clef.trans - '0', dur.default - '4', key.accid -empty string,
          key.mode - 'major', key.pname - empty string, key.sig - empty string,
          key.sig.mixed - empty string, meter.count - empty string, meter.unit - empty
          string, meter.sym - empty string, octave.default - '4', trans.diat - '0',
          trans.semi -'0'.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.scoredef.mensural">
      <optional>
        <attribute name="modusmaior">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="modusminor">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="num">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="numbase">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="prolatio">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="proport.num">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="proport.numbase">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tempus">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.log.scoredef.base">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.scoredef.base</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.scoredef.base">
      <optional>
        <attribute name="beam.group"/>
      </optional>
      <optional>
        <attribute name="beam.rests">
          <ref name="data.BOOLEAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="clef.line">
          <ref name="data.CLEFLINE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="clef.shape">
          <ref name="data.CLEFSHAPE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="clef.trans">
          <ref name="data.CLEFTRAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="dur.default">
          <ref name="data.DURATIONS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.accid">
          <ref name="data.ACCIDENTAL.IMPLICIT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.mode">
          <ref name="data.MODE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.pname">
          <ref name="data.PITCHNAME"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.sig">
          <ref name="data.KEYSIGNATURE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.sig.mixed"/>
      </optional>
      <optional>
        <attribute name="meter.count">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="meter.sym">
          <ref name="data.METERSIGN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="meter.unit">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="octave.default">
          <ref name="data.OCTAVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="source">
          <data type="IDREFS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="trans.diat">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="trans.semi">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.log.scoredef">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.scoredef</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.scoredef">
      <ref name="att.log.scoredef.base"/>
      <ref name="att.log.scoredef.mensural"/>
    </define>
  </div>

  <div xml:id="att.vis.scoredef">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.scoredef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: Definitions and suggested software default
          values: bar.place placement of barlines, 'norm' beam.rend encodes whether a beam
          is feathered and in which direction, 'norm' beam.slope default beam slope, Mup
          uses '1.0, 25.0' clef.color hexadecimal RGB/name color value clef.visible are
          clefs visible?, 'yes' dynam.dist how far from staff to render dynamic marks, '2'
          ending.rend where to draw ending marks, 'top' grid.show display chord grids?,
          'no' harm.dist how far from staff to render harmony, '2' key.sig.show display
          key signature?, 'yes' key.sig.showchange display cautionary key signature
          change?, 'yes' lyric.align alignment of lyrics beneath notes, Mup uses '0.25'
          lyric.fam font family for lyrics, 'times' lyric.name font name for lyrics, 'rom'
          lyric.size point size of lyrics, '12' lyric.style font style, e.g., 'ital',
          'normal', 'oblique', no default lyric.weight weight value, e.g., 'bold', for
          lyrics, no default meter.rend display meter normally (3/4), with symbol as
          denom, or invis, 'norm' meter.sig.showchange display cautionary meter signature
          change?, 'yes' mnum.visible are measure numbers visible?, 'no' multi.number
          programmatically calculate number of consecutive measures of rest (mrest) and
          whole measure repeats (mrpt)?, 'no' ontheline governs display of notes on a
          1-line staff, 'yes' optimize display only those staves with notes?, 'no' **
          page.* attributes apply to the entire score/part page.height height of page,
          '11' page.width width of page, '8.5' page.units real-world measurement (inches,
          centimeters, millimeters), 'in' page.topmar top page margin, '1' page.botmar
          bottom page margin, '1' page.leftmar left page margin, '.5' page.rightmar right
          page margin, '.5' page.panels number of logical pages to place on physical page,
          '1' page.scale scale printed output by the specified percentage, '100'
          pedal.rend are piano pedal marks drawn as lines or as terms (e.g. 'Ped.'
          &amp;amp; '*'), 'term' reh.enclose default look of rehearsal
          letters/numbers, 'box' slur.rend default look of slurs, 'medium' spacing.packexp
          note spacing relative to its time value, '0.8' spacing.packfact note spacing of
          output, '1' spacing.staff minimum amount of space between staves in the same
          system, '2' spacing.system minimum and maximum amount of space between systems,
          '12, 20' system.leftmar left system margin relative to page.leftmar, '0'
          system.rightmar right system margin relative to page.rightmar, '0' system.topmar
          distance from page's top edge to the first system, used for first page only
          text.dist how far from staff to render text, '2' text.fam font family for text,
          'times' text.nam font name for text, 'rom' text.size point size of text, '12'
          text.style font style, e.g., 'ital', 'normal', 'oblique', no default text.weight
          weight value, e.g., 'bold', for text other than lyrics, no default tie.rend
          default look of ties, 'medium'</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.scoredef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.section">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.section</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: section uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.section">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.section">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.section</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: The expan attribute contains a list of ids of
          child section, ending or app elements. This 'expansion list' indicates how the
          section should be expanded into its 'through- composed' form. See Read, p. 226
          (ex. 12-10), 228-229 (ex. 12-16).</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.section">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.section">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.section</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.section">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.section">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.section</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.section">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.staff">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.staff</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: staff uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.staff">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.staff">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.staff</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.staff">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.staff">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.staff</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.staff">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.staff">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.staff</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The visible attribute may be used to indicate
          if a staff should be displayed when the score is rendered. A staff with this
          attribute set to 'false' should not be included in a sounded
          rendition.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.staff">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.staffdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.staffdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: Since the staff element carries analytical
          attributes for the staff, no analysis attributes are defined for
          staffdef.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.staffdef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.staffdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.staffdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: Setting the grace attribute here provides the
          possibility of changing all the grace attribute values in a given layer without
          having to individually change each note's grace attribute value. The tab.strings
          attribute lists a written pitch and octave for each open string, e.g. "e3 a3 d4
          g4 b4 e5" for standard guitar tuning. It should contain the number of tokens
          indicated by the lines attribute. Chromatic alteration may be indicated with '-'
          (flat) and '#' (sharp). Double sharps and flats are not permitted. Adding
          tune.pname, tune.Hz, and tune.temper attributes here would allow each staff to
          establish its own tuning standard.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.staffdef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.staffdef.mensural">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.staffdef.mensural</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The attributes in the class
          att.log.scoredef.mensural are provided for mensural notation. The attributes in
          the class att.log.scoredef.base are provided for common Western music notation.
          For descriptions of the individual attributes in these classes, see the comments
          associated with % att.log.scoredef.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.staffdef.mensural">
      <optional>
        <attribute name="mensur.sign">
          <ref name="data.MENSURATIONSIGN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="mensur.dot">
          <ref name="data.BOOLEAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="mensur.slash">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="modusmaior">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="modusminor">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="num">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="numbase">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="prolatio">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="proport.num">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="proport.numbase">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tempus">
          <choice>
            <value>2</value>
            <value>3</value>
          </choice>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.log.staffdef.base">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.staffdef.base</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.staffdef.base">
      <optional>
        <attribute name="beam.group"/>
      </optional>
      <optional>
        <attribute name="beam.rests">
          <ref name="data.BOOLEAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="clef.line">
          <ref name="data.CLEFLINE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="clef.shape">
          <ref name="data.CLEFSHAPE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="clef.trans">
          <ref name="data.CLEFTRAN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="dur.default">
          <ref name="data.DURATIONS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.accid">
          <ref name="data.ACCIDENTAL.IMPLICIT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.mode">
          <ref name="data.MODE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.pname">
          <ref name="data.PITCHNAME"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.sig">
          <ref name="data.KEYSIGNATURE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="key.sig.mixed"/>
      </optional>
      <optional>
        <attribute name="meter.count">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="meter.sym">
          <ref name="data.METERSIGN"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="meter.unit">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="octave.default">
          <ref name="data.OCTAVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="trans.diat">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="trans.semi">
          <ref name="data.NUMBER"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.log.staffdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.staffdef</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.staffdef">
      <ref name="att.log.staffdef.base"/>
      <ref name="att.log.staffdef.mensural"/>
    </define>
  </div>

  <div xml:id="att.vis.staffdef">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.staffdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: It is a semantic error if the clef.shape,
          clef.line, key.sig, meter.count, and meter.unit attributes are not supplied or
          are not available from a scoredef ancestor. The layerscheme attribute indicates
          the number of layers and the stem direction. The lines attribute indicates the
          number of stafflines. The lines.color attribute is structured; that is, it
          should have the same number of space-separated RGB values as indicated by the
          lines attribute. A line can be made invisible by assigning it the same RGB value
          as the background, usually white. The spacing attribute should be used to record
          the absolute distance (as opposed to the relative distances recorded in scoredef
          elements) between this staff and the preceding one in the same system. This
          value is meaningless for the first staff in a system since the spacing.system
          attribute indicates the spacing between systems.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.staffdef">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.staffgrp">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.staffgrp</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: staffgrp uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.staffgrp">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.staffgrp">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.staffgrp</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.staffgrp">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.staffgrp">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.staffgrp</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.staffgrp">
      <empty/>
    </define>
  </div>

  <div xml:id="att.vis.staffgrp">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.staffgrp</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: barthru indicates whether barlines go across
          the space between staves (yes) or are only drawn across the stafflines of each
          staff (no), label.full is used on the first page while label.abbr is used
          thereafter, symbol indicates the left-hand connecting symbol for the group, and
          the visible attribute indicates whether this group is to be printed. The brace
          and bracket attributes may be used (instead of additional staffgrp sub-elements)
          to indicate sub-groupings of staves.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.staffgrp">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.accid">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.accid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: accid uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.accid">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.accid">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.accid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.accid">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.accid">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.accid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: If an accidental has an editorial or
          cautionary function, its function may be captured in the func attribute. The
          value attribute records the accidental.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.accid">
      <optional>
        <attribute name="func">
          <choice>
            <value>caution</value>
            <value>edit</value>
          </choice>
        </attribute>
      </optional>
      <attribute name="value">
        <ref name="data.ACCIDENTAL.EXPLICIT"/>
      </attribute>
    </define>
  </div>

  <div xml:id="att.vis.accid">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.accid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The enclose attribute records the characters
          often used to mark the accidental as having an cautionary or editorial function.
          The placement of the accidental, either above the staff, below the staff, or in
          its usual place on the staff, is captured in the place attribute. The ho and vo
          attributes encode the visual placement of the accidental in terms of interline
          distance.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.accid">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.annot">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.annot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: The dur.anl attribute records the
          durational scope of the annotation when it differs from the written values of
          the participants. The dur.ges attribute (performed duration) may be expressed in
          several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum
          *recip values, or MusicXML 'divisions', etc.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.annot">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.annot">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.annot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.annot">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.annot">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.annot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: % att.controlevent is expanded here in order
          to allow staff to be IMPLIED. Values for the type attribute can be taken from
          any convenient typology of annotation suitable to the work in hand; e.g.
          annotation, gloss, citation, digression, preliminary, temporary, etc. The tstamp
          attribute encodes the onset time of a musical feature in terms of musical time,
          i.e., beats. The tstamp.ges attribute may be used to record the onset time in
          pulses per quarter note (ppq, MusicXML divisions, or MIDI clicks) since the
          start of the measure, while the tstamp.real attribute records the onset time as
          a real-time offset, i.e., HH:MM:SS.ss, since the beginning of the
          file.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.annot">
      <ref name="att.nextprev"/>
      <optional>
        <attribute name="layer">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="staff">
          <ref name="data.INTEGERPOSITIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp">
          <ref name="data.BEAT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp.ges">
          <ref name="data.INTEGERNONNEGATIVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tstamp.real">
          <ref name="data.ISOTIME"/>
        </attribute>
      </optional>
      <ref name="att.startendid"/>
    </define>
  </div>

  <div xml:id="att.vis.annot">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.annot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.annot">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.artic">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.artic</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: artic uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.artic">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.artic">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.artic</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.artic">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.artic">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.artic</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The value attribute records the name of the
          articulation symbol.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.artic">
      <attribute name="value">
        <ref name="data.ARTICULATION"/>
      </attribute>
    </define>
  </div>

  <div xml:id="att.vis.artic">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.artic</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The character used to enclose an accidental may
          be recorded in the enclose attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.artic">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.clefchange">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.clefchange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: clefchange uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.clefchange">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.clefchange">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.clefchange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.clefchange">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.clefchange.base">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.clefchange.base</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The line attribute records a value for the
          position of the clef, while shape encodes a value for the clef symbol and trans
          records an octave shift to be applied to the clef. If the oct attribute isn't
          given on the first note following the clef change, then the value of
          octave.default is used.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.clefchange.base">
      <optional>
        <attribute name="line">
          <ref name="data.CLEFLINE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="octave.default">
          <ref name="data.OCTAVE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="shape">
          <ref name="data.CLEFSHAPE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="trans">
          <ref name="data.CLEFTRAN"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.log.clefchange">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.clefchange</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="att.log.clefchange">
      <ref name="att.log.clefchange.base"/>
    </define>
  </div>

  <div xml:id="att.vis.clefchange">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.clefchange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.clefchange">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.dir">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.dir</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: dir uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.dir">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.dir">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.dir</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: The dur.ges attribute encodes the gestural
          duration of the directive when it differs from the logical and visual durations.
          It may be expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq
          (MIDI clicks), Humdrum *recip values, or MusicXML 'divisions', etc.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.dir">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.dir">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.dir</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: Currently, the dur attribute encodes the
          logical and visual durations of the directive. If cases arise where the logical
          and visual durations differ, it may be necessary to add a dur.vis attribute.
          Please note that the dur attribute is not a true duration, but rather a time
          stamp for the end point of the directive.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.dir">
      <ref name="att.controlevent"/>
      <ref name="att.startendid"/>
      <optional>
        <attribute name="dur">
          <ref name="data.MEASUREBEAT"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.dir">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.dir</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.dir">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.dynam">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.dynam</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: dynam uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.dynam">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.dynam">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.dynam</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: The dur.ges attribute encodes the gestural
          duration of the dynamic marking when it differs from the logical and visual
          durations. It may be expressed in several forms, such as measures[s]+
          beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip values, or MusicXML
          'divisions', etc.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.dynam">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.dynam">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.dynam</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the dynamic symbol or text while the dur.ges attribute
          encodes the performed duration. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute is not
          a true duration, but rather a time stamp for the end point of the dynamic
          indication.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.dynam">
      <ref name="att.controlevent"/>
      <ref name="att.startendid"/>
      <optional>
        <attribute name="dur">
          <ref name="data.MEASUREBEAT"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.dynam">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.dynam</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.dynam">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.pad">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.pad</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: pad uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.pad">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.pad">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.pad</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.pad">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.pad">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.pad</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The num attribute is the amount of horizontal
          space to be added, expressed in one-half inter-line staff distance
          units.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.pad">
      <ref name="att.event"/>
      <attribute name="num">
        <ref name="data.NUMBER"/>
      </attribute>
    </define>
  </div>

  <div xml:id="att.vis.pad">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.pad</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.pad">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.phrase">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.phrase</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: The join attribute should be used for
          linking visually separate phrase marks, sometimes necessary due to system
          breaks, that form a single musical phrase.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.phrase">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.phrase">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.phrase</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.phrase">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.phrase">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.phrase</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: Phrase may either use tstamp and dur or
          startid and endid attributes. It is a semantic error not to specify one of these
          attribute combinations.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.phrase">
      <ref name="att.controlevent"/>
      <ref name="att.startendid"/>
      <optional>
        <attribute name="dur">
          <ref name="data.MEASUREBEAT"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.phrase">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.phrase</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The bulge or, alternatively, the bezier
          attribute, describes the shape of the phrase mark. The bulge attribute describes
          the curve as a set of distance values above or below an imaginary line
          connecting the endpoints of the curve while the bezier attribute records the
          placement of Bezier control points as a series of space-separated xy
          coordinates, eg. 19 45 -32 118. The bulge attribute must contain one or more
          values of type %NUMBER. The vo attribute is the vertical offset (from its normal
          position) of the entire rendered phrase mark. The rend attribute captures the
          appearance of the phrase mark.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.phrase">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.space">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.space</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: space uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.space">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.space">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.space</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: The dur.ges attribute encodes the gestural
          duration of the space when it differs from the logical and visual durations. It
          may be expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq
          (MIDI clicks), Humdrum *recip values, or MusicXML 'divisions', etc.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.space">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.space">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.space</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The beam, fermata, and tuplet attributes may
          be used to indicate the participation of this element in a beam or tuplet or
          attachment of a fermata to this element. If visual information about these items
          needs to be recorded, then the elements corresponding to these attributes should
          be employed. The dots attribute records the number of augmentation dots required
          by a dotted duration. The duration (in musical terms) of the space may be
          recorded in the dur attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.space">
      <ref name="att.event"/>
      <optional>
        <attribute name="beam">
          <ref name="data.BEAMS"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="dots">
          <ref name="data.AUGMENTDOT"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="dur">
          <ref name="data.DURATION"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="fermata">
          <ref name="data.PLACE"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="tuplet">
          <ref name="data.TUPLET"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.space">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.space</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: If the space is 'compressable', i.e., it may be
          removed by processing software, then the compressable attribute may be
          used.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.space">
      <empty/>
    </define>
  </div>

  <div xml:id="att.anl.tempo">
    <xhtml:div>
      <xhtml:h1 class="name">att.anl.tempo</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Analytical domain attributes: tempo uses only common analysis
          attributes.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.anl.tempo">
      <empty/>
    </define>
  </div>

  <div xml:id="att.ges.tempo">
    <xhtml:div>
      <xhtml:h1 class="name">att.ges.tempo</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Gestural domain attributes: The midi attribute must contain the number of
          quarter notes per minute in the range from 10 to 1000. The value attribute is
          for a beats-per-minute value.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.ges.tempo">
      <empty/>
    </define>
  </div>

  <div xml:id="att.log.tempo">
    <xhtml:div>
      <xhtml:h1 class="name">att.log.tempo</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Logical domain attributes: The dur.vis attribute encodes visual duration.
          (Read, p. 276-281) If logical and visual durations differ, it may be necessary
          to add a dur attribute. Please note that the dur attribute here is expressed in
          musical time, i.e., beats or other time stamp. Therefore, it is not a true
          duration, but rather a time stamp for the end point of the directive. The
          a.startendid entity is expanded here in order to disallow the end
          attribute.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.log.tempo">
      <ref name="att.controlevent"/>
      <optional>
        <attribute name="startid">
          <data type="IDREF"/>
        </attribute>
      </optional>
    </define>
  </div>

  <div xml:id="att.vis.tempo">
    <xhtml:div>
      <xhtml:h1 class="name">att.vis.tempo</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Visual domain attributes: The dur.vis attribute should be used to record
          the visual duration of the tempo marking in the source.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="att.vis.tempo">
      <empty/>
    </define>
  </div>

  <div xml:id="model.addressLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.addressLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.addressLike">
      <ref name="address"/>
    </define>
  </div>

  <div xml:id="model.annotLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.annotLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.annotLike">
      <ref name="annot"/>
    </define>
  </div>

  <div xml:id="model.biblLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.biblLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.biblLike">
      <ref name="bibl"/>
    </define>
  </div>

  <div xml:id="model.dateLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.dateLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.dateLike">
      <ref name="date"/>
    </define>
  </div>

  <div xml:id="model.editionLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.editionLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.editionLike">
      <ref name="edition"/>
    </define>
  </div>

  <div xml:id="model.editorialLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.editorialLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.editorialLike">
      <choice>
        <ref name="abbr"/>
        <ref name="expan"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.identifierLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.identifierLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.identifierLike">
      <ref name="identifier"/>
    </define>
  </div>

  <div xml:id="model.lbLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.lbLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.lbLike">
      <ref name="lb"/>
    </define>
  </div>

  <div xml:id="model.milestoneLike.text">
    <xhtml:div>
      <xhtml:h1 class="name">model.milestoneLike.text</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.milestoneLike.text">
      <choice>
        <ref name="lb"/>
        <ref name="pb"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.nameLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.nameLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.nameLike">
      <ref name="name"/>
    </define>
  </div>

  <div xml:id="model.noteModifierLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.noteModifierLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.noteModifierLike">
      <choice>
        <ref name="accid"/>
        <ref name="artic"/>
        <ref name="dot"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.numLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.numLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.numLike">
      <ref name="num"/>
    </define>
  </div>

  <div xml:id="model.pLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.pLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.pLike">
      <ref name="p"/>
    </define>
  </div>

  <div xml:id="model.pbLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.pbLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.pbLike">
      <ref name="pb"/>
    </define>
  </div>

  <div xml:id="model.rendLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.rendLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.rendLike">
      <choice>
        <ref name="rend"/>
        <ref name="stack"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.repositoryLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.repositoryLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.repositoryLike">
      <ref name="repository"/>
    </define>
  </div>

  <div xml:id="model.titleLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.titleLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.titleLike">
      <ref name="title"/>
    </define>
  </div>

  <div xml:id="model.pgmetaLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.pgmetaLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.pgmetaLike">
      <zeroOrMore>
        <ref name="fw"/>
      </zeroOrMore>
      <optional>
        <ref name="pgdesc"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.pgmetaLike.score">
    <xhtml:div>
      <xhtml:h1 class="name">model.pgmetaLike.score</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.pgmetaLike.score">
      <optional>
        <ref name="pghead1"/>
      </optional>
      <optional>
        <ref name="pghead2"/>
      </optional>
      <optional>
        <ref name="pgfoot1"/>
      </optional>
      <optional>
        <ref name="pgfoot2"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.eventLike.common">
    <xhtml:div>
      <xhtml:h1 class="name">model.eventLike.common</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.eventLike.common">
      <choice>
        <ref name="clefchange"/>
        <ref name="custos"/>
        <ref name="pad"/>
        <ref name="space"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.eventLike.neume-mensural">
    <xhtml:div>
      <xhtml:h1 class="name">model.eventLike.neume-mensural</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.eventLike.neume-mensural">
      <choice>
        <ref name="ligature"/>
        <ref name="mensurchange"/>
        <ref name="proportchange"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.eventLike.mensural-cmn">
    <xhtml:div>
      <xhtml:h1 class="name">model.eventLike.mensural-cmn</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.eventLike.mensural-cmn">
      <choice>
        <ref name="barline"/>
        <ref name="keychange"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.controleventLike.common">
    <xhtml:div>
      <xhtml:h1 class="name">model.controleventLike.common</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.controleventLike.common">
      <choice>
        <ref name="dir"/>
        <ref name="dynam"/>
        <ref name="phrase"/>
        <ref name="tempo"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.keyaccidLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.keyaccidLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.keyaccidLike">
      <ref name="keyaccid"/>
    </define>
  </div>

  <div xml:id="model.keysigLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.keysigLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.keysigLike">
      <ref name="keysig"/>
    </define>
  </div>

  <div xml:id="model.labelLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.labelLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.labelLike">
      <ref name="label"/>
    </define>
  </div>

  <div xml:id="model.endingLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.endingLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.endingLike">
      <ref name="ending"/>
    </define>
  </div>

  <div xml:id="model.instrdefLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.instrdefLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.instrdefLike">
      <ref name="instrdef"/>
    </define>
  </div>

  <div xml:id="model.layerLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.layerLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.layerLike">
      <ref name="layer"/>
    </define>
  </div>

  <div xml:id="model.layerdefLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.layerdefLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.layerdefLike">
      <ref name="layerdef"/>
    </define>
  </div>

  <div xml:id="model.mdivLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.mdivLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.mdivLike">
      <ref name="mdiv"/>
    </define>
  </div>

  <div xml:id="model.milestoneLike.music">
    <xhtml:div>
      <xhtml:h1 class="name">model.milestoneLike.music</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.milestoneLike.music">
      <choice>
        <ref name="model.pbLike"/>
        <ref name="sb"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.musicPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.musicPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.musicPart">
      <optional>
        <ref name="_DUMMYmodel.frontLike"/>
      </optional>
      <optional>
        <choice>
          <ref name="body"/>
          <ref name="group"/>
        </choice>
      </optional>
      <optional>
        <ref name="_DUMMYmodel.backLike"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.partLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.partLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.partLike">
      <ref name="part"/>
    </define>
  </div>

  <div xml:id="model.partsLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.partsLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.partsLike">
      <ref name="parts"/>
    </define>
  </div>

  <div xml:id="model.scoreLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.scoreLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.scoreLike">
      <ref name="score"/>
    </define>
  </div>

  <div xml:id="model.sectionLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.sectionLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.sectionLike">
      <ref name="section"/>
    </define>
  </div>

  <div xml:id="model.staffLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.staffLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.staffLike">
      <ref name="staff"/>
    </define>
  </div>

  <div xml:id="model.staffdefLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.staffdefLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.staffdefLike">
      <ref name="staffdef"/>
    </define>
  </div>

  <div xml:id="model.staffgrpLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.staffgrpLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.staffgrpLike">
      <ref name="staffgrp"/>
    </define>
  </div>

  <div xml:id="model.nameLike.place">
    <xhtml:div>
      <xhtml:h1 class="name">model.nameLike.place</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.nameLike.place">
      <ref name="model.repositoryLike"/>
    </define>
  </div>

  <div xml:id="model.availabilityPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.availabilityPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.availabilityPart">
      <zeroOrMore>
        <ref name="acqsource"/>
        <zeroOrMore>
          <ref name="accessdesc"/>
          <optional>
            <ref name="price"/>
          </optional>
        </zeroOrMore>
      </zeroOrMore>
      <optional>
        <ref name="userestrict"/>
      </optional>
      <optional>
        <ref name="sysreq"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.biblPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.biblPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.biblPart">
      <ref name="model.editionLike"/>
    </define>
  </div>

  <div xml:id="model.editorialdeclPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.editorialdeclPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.editorialdeclPart">
      <choice>
        <ref name="correction"/>
        <ref name="interpretation"/>
        <ref name="normalization"/>
        <ref name="segmentation"/>
        <ref name="stdvals"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.encodingPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.encodingPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.encodingPart">
      <optional>
        <ref name="appinfo"/>
      </optional>
      <optional>
        <ref name="projectdesc"/>
      </optional>
      <optional>
        <ref name="samplingdecl"/>
      </optional>
      <optional>
        <ref name="editorialdecl"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.measurementLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.measurementLike</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Location/referencing elements. These entities must be declared before the
          model.textphraseLike and model.textphraseLike.limited entities.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.measurementLike">
      <ref name="model.numLike"/>
    </define>
  </div>

  <div xml:id="model.headerPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.headerPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.headerPart">
      <optional>
        <ref name="encodingdesc"/>
      </optional>
      <optional>
        <ref name="profiledesc"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.physdescPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.physdescPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.physdescPart">
      <choice>
        <ref name="condition"/>
        <ref name="dimensions"/>
        <ref name="exhibithist"/>
        <ref name="extent"/>
        <ref name="handlist"/>
        <ref name="inscription"/>
        <ref name="physmedium"/>
        <ref name="physloc"/>
        <ref name="provenance"/>
        <ref name="repository"/>
        <ref name="_DUMMYmodel.frontPart"/>
        <ref name="treatmenthist"/>
        <ref name="treatmentsched"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.profiledescPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.profiledescPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.profiledescPart">
      <optional>
        <ref name="creation"/>
      </optional>
      <optional>
        <ref name="langusage"/>
      </optional>
      <optional>
        <ref name="classification"/>
      </optional>
    </define>
  </div>

  <div xml:id="model.pubstmtPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.pubstmtPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.pubstmtPart">
      <choice>
        <ref name="_DUMMYmodel.nameLike.geogname"/>
        <ref name="model.addressLike"/>
        <ref name="respstmt"/>
        <ref name="model.dateLike"/>
        <ref name="identifier"/>
        <ref name="availability"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.textphraseLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.textphraseLike</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Phrase-level text elements.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.textphraseLike">
      <choice>
        <ref name="_DUMMYmodel.locrefLike"/>
        <ref name="model.addressLike"/>
        <ref name="model.annotLike"/>
        <ref name="model.biblLike"/>
        <ref name="model.editorialLike"/>
        <ref name="model.nameLike"/>
        <ref name="_DUMMYmodel.nameLike.agent"/>
        <ref name="model.nameLike.place"/>
        <ref name="_DUMMYmodel.nameLike.label"/>
        <ref name="model.dateLike"/>
        <ref name="model.rendLike"/>
        <ref name="model.measurementLike"/>
        <ref name="model.titleLike"/>
        <ref name="model.identifierLike"/>
        <ref name="_DUMMYmodel.figureLike"/>
        <ref name="model.milestoneLike.text"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.textphraseLike.limited">
    <xhtml:div>
      <xhtml:h1 class="name">model.textphraseLike.limited</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Anchored text sub-elements. These occur as part of the representation of
          the score, as opposed to the textual matter which accompanies it. %
          model.anchoredtext is equivalent to % model.textphraseLike without the pb
          element.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.textphraseLike.limited">
      <choice>
        <ref name="_DUMMYmodel.locrefLike"/>
        <ref name="model.addressLike"/>
        <ref name="model.biblLike"/>
        <ref name="model.editorialLike"/>
        <ref name="model.nameLike"/>
        <ref name="_DUMMYmodel.nameLike.agent"/>
        <ref name="model.nameLike.place"/>
        <ref name="_DUMMYmodel.nameLike.label"/>
        <ref name="model.dateLike"/>
        <ref name="model.rendLike"/>
        <ref name="model.measurementLike"/>
        <ref name="model.titleLike"/>
        <ref name="model.identifierLike"/>
        <ref name="_DUMMYmodel.figureLike"/>
        <ref name="model.lbLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.paracontentPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.paracontentPart</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Paragraph content model. A paragraph may contain inline elements and all
          the other block-level elements except lg and itself. The % model.textphrase and
          % model.edit entities must be declared prior to the model.paracontent
          entity.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.paracontentPart">
      <choice>
        <ref name="_DUMMYmodel.quoteLike"/>
        <ref name="_DUMMYmodel.listLike"/>
        <ref name="_DUMMYmodel.tableLike"/>
        <ref name="model.textphraseLike"/>
        <ref name="_DUMMYmodel.editLike"/>
        <ref name="_DUMMYmodel.transcriptionLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.textcomponentLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.textcomponentLike</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Block level text elements.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.textcomponentLike">
      <choice>
        <ref name="_DUMMYmodel.quoteLike"/>
        <ref name="_DUMMYmodel.listLike"/>
        <ref name="model.pLike"/>
        <ref name="_DUMMYmodel.tableLike"/>
        <ref name="_DUMMYmodel.lgLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.Incl">
    <xhtml:div>
      <xhtml:h1 class="name">model.Incl</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="model.Incl">
      <choice>
        <ref name="_DUMMYmodel.apparatusLike"/>
        <ref name="_DUMMYmodel.divLike"/>
        <ref name="model.milestoneLike.music"/>
        <ref name="scoredef"/>
        <ref name="staffdef"/>
        <ref name="staffgrp"/>
        <ref name="model.annotLike"/>
        <ref name="_DUMMYmodel.graphicprimitiveLike"/>
        <ref name="_DUMMYmodel.editLike"/>
        <ref name="_DUMMYmodel.transcriptionLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.clefchangePart">
    <xhtml:div>
      <xhtml:h1 class="name">model.clefchangePart</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>doc:</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.clefchangePart">
      <zeroOrMore>
        <ref name="clef"/>
      </zeroOrMore>
    </define>
  </div>

  <div xml:id="model.staffdefPart.multiplyDefinable">
    <xhtml:div>
      <xhtml:h1 class="name">model.staffdefPart.multiplyDefinable</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Multiple clefs</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.staffdefPart.multiplyDefinable">
      <choice>
        <ref name="clef"/>
        <ref name="mensur"/>
        <ref name="proport"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.eventLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.eventLike</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Notated events. Sometimes referred to as "logical" events. The mrest,
          mrpt, mspace, multirest, and multirpt elements are not included in this list
          since in the measure element's content model they are alternatives to the
          elements listed here. They are, however, part of the att.events class.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.eventLike">
      <choice>
        <ref name="model.eventLike.common"/>
        <ref name="_DUMMYmodel.eventLike.neume"/>
        <ref name="model.eventLike.neume-mensural"/>
        <ref name="_DUMMYmodel.eventLike.neume-cmn"/>
        <ref name="_DUMMYmodel.eventLike.mensural"/>
        <ref name="model.eventLike.mensural-cmn"/>
        <ref name="_DUMMYmodel.eventLike.cmn"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.controleventLike">
    <xhtml:div>
      <xhtml:h1 class="name">model.controleventLike</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Control events modify or otherwise depend on the existence of notated
          events.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.controleventLike">
      <choice>
        <ref name="model.controleventLike.common"/>
        <ref name="_DUMMYmodel.controleventLike.neume"/>
        <ref name="_DUMMYmodel.controleventLike.neume-mensural"/>
        <ref name="_DUMMYmodel.controleventLike.neume-cmn"/>
        <ref name="_DUMMYmodel.controleventLike.mensural"/>
        <ref name="_DUMMYmodel.controleventLike.mensural-cmn"/>
        <ref name="_DUMMYmodel.controleventLike.cmn"/>
        <ref name="_DUMMYmodel.harmLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.layerPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.layerPart</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Notated events at the layer level</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.layerPart">
      <choice>
        <ref name="model.eventLike"/>
        <ref name="_DUMMYmodel.eventLike.cmn.measureFilling"/>
        <ref name="_DUMMYmodel.midiLike"/>
        <ref name="model.controleventLike"/>
        <ref name="_DUMMYmodel.lyricsLike"/>
        <ref name="model.noteModifierLike"/>
        <ref name="_DUMMYmodel.verseLike"/>
        <ref name="_DUMMYmodel.sylLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.staffPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.staffPart</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Staff content model</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.staffPart">
      <choice>
        <ref name="model.layerLike"/>
        <ref name="model.controleventLike"/>
        <ref name="_DUMMYmodel.syllableLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.sectionPart">
    <xhtml:div>
      <xhtml:h1 class="name">model.sectionPart</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Measure content model</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.sectionPart">
      <choice>
        <ref name="model.sectionLike"/>
        <ref name="model.endingLike"/>
        <ref name="_DUMMYmodel.measureLike"/>
        <ref name="model.staffLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="model.scorePart">
    <xhtml:div>
      <xhtml:h1 class="name">model.scorePart</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Score components</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="model.scorePart">
      <choice>
        <ref name="model.sectionLike"/>
        <ref name="model.endingLike"/>
      </choice>
    </define>
  </div>

  <div xml:id="abbr">
    <xhtml:div>
      <xhtml:h1 class="name">abbr</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>abbr (abbreviation) contains an abbreviation of any sort. The type
          attribute may be used to classify the abbreviation according to some convenient
          typology. Sample values include: suspension the abbreviation provides the first
          letter(s) of the word or phrase, omitting the remainder. contraction the
          abbreviation omits some letter(s) in the middle. brevigraph the abbreviation
          comprises a special symbol or mark. superscription the abbreviation includes
          writing above the line. acronym the abbreviation comprises the initial letters
          of the words of a phrase. title the abbreviation is for a title of address (Dr,
          Ms, Mr, ...) organization the abbreviation is for the name of an organization.
          geographic the abbreviation is for a geographic name. This tag is the mirror
          image of the &lt;expan&gt; tag; both allow the encoder to transcribe
          both an abbreviation and its expansion. In &lt;abbr&gt;, however, the
          original is transcribed as the content of the element and the expansion as an
          attribute value; &lt;expan&gt; reverses this. The choice between the two
          is up to the user. The &lt;abbr&gt; tag is not required; if appropriate,
          the encoder may transcribe abbreviations in the source text silently, without
          tagging them. If abbreviations are not transcribed directly but expanded
          silently, then the MEI header should so indicate. The cert attribute signifies
          the degree of certainty ascribed to the expansion of the abbreviation. The expan
          attribute gives an expansion of the abbreviation. The resp attribute contains an
          ID reference to an element containing the name of the editor or transcriber
          responsible for supplying the expansion of the abbreviation. Used by:
          model.editorialLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="abbr">
      <element name="abbr">
        <ref name="attlist.abbr"/>
        <ref name="content.abbr"/>
      </element>
    </define>
    <div xml:id="content.abbr">
      <xhtml:div>
        <xhtml:h1 class="name">content.abbr</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.abbr">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.abbr">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.abbr</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.abbr" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.edit"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.trans"/>
        <ref name="att.typed"/>
        <optional>
          <attribute name="expan"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="address">
    <xhtml:div>
      <xhtml:h1 class="name">address</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A postal address. Used by: model.addressLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="address">
      <element name="address">
        <ref name="attlist.address"/>
        <ref name="content.address"/>
      </element>
    </define>
    <div xml:id="content.address">
      <xhtml:div>
        <xhtml:h1 class="name">content.address</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.address">
        <oneOrMore>
          <ref name="addressline"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.address">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.address</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.address" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="addressline">
    <xhtml:div>
      <xhtml:h1 class="name">addressline</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Single line of a postal address. Used by: address Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="addressline">
      <element name="addressline">
        <ref name="attlist.addressline"/>
        <ref name="content.addressline"/>
      </element>
    </define>
    <div xml:id="content.addressline">
      <xhtml:div>
        <xhtml:h1 class="name">content.addressline</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.addressline">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.addressline">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.addressline</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.addressline" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="anchoredtext">
    <xhtml:div>
      <xhtml:h1 class="name">anchoredtext</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Page-anchored text. The content model here is similar to paragraph
          without %model.textcomponent and %n.pb sub-elements. If the startid attribute is
          present, then the xy coordinates are relative to the xy coordinates of the
          referenced element. Otherwise, they are assumed to be absolute page coordinate
          references. Used by: model.graphicprimitiveLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="anchoredtext">
      <element name="anchoredtext">
        <ref name="attlist.anchoredtext"/>
        <ref name="content.anchoredtext"/>
      </element>
    </define>
    <div xml:id="content.anchoredtext">
      <xhtml:div>
        <xhtml:h1 class="name">content.anchoredtext</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.anchoredtext">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.anchoredtext">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.anchoredtext</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.anchoredtext" combine="interleave">
        <ref name="att.common.anl"/>
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.typed"/>
        <ref name="att.xy.required"/>
        <optional>
          <attribute name="startid">
            <data type="IDREF"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="annot">
    <xhtml:div>
      <xhtml:h1 class="name">annot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The annot element provides a way to group participating *events* and/or
          *control events*, the notes that form a descending bass line or phrase marks,
          for example, and provide a label for or comment regarding the group. An
          enumerated list of event IDs may be given in the plist attribute. Alternatively,
          if only the start and/or end events in a group are to be marked, then use the
          startid and endid attributes. An editorial or analytical comment or observation,
          encoded elsewhere, such as in the front or back matter, in score text elements,
          or in an external document may be pointed to using the link.common,
          link.internal, or link.external attributes. Alternatively, the observation may
          be included directly within the annot element. The annot element, along with
          other elements with %att.link.external attributes, may also be used to
          link/synchronize elements within the MEI file to external media such as images
          or sound recordings. The ID of the MEI element(s) to be linked from should be
          encoded in the plist attribute while the link to the external media may be
          encoded in the href or entityref attributes or in the body of the annotation
          using extref or extptr elements. Used by: model.annotLike Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="annot">
      <element name="annot">
        <ref name="attlist.annot"/>
        <ref name="content.annot"/>
      </element>
    </define>
    <div xml:id="content.annot">
      <xhtml:div>
        <xhtml:h1 class="name">content.annot</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.annot">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.annot">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.annot</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.annot" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.typed"/>
        <ref name="att.log.annot"/>
        <ref name="att.vis.annot"/>
        <ref name="att.ges.annot"/>
        <ref name="att.anl.annot"/>
        <ref name="att.link.common"/>
        <ref name="att.link.internal"/>
        <ref name="att.link.external"/>
        <optional>
          <attribute name="resp">
            <data type="IDREF"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="source">
            <data type="IDREFS"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="bibl">
    <xhtml:div>
      <xhtml:h1 class="name">bibl</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Bibliographic reference. May function as a hypertext reference to an
          external electronic resource. A more structured content model, similar to TEI's
          biblFull, requires new elements that function like those in the meiHead DTD, but
          that do not duplicate their names. Used by: model.biblLike Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="bibl">
      <element name="bibl">
        <ref name="attlist.bibl"/>
        <ref name="content.bibl"/>
      </element>
    </define>
    <div xml:id="content.bibl">
      <xhtml:div>
        <xhtml:h1 class="name">content.bibl</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.bibl">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.biblPart"/>
            <ref name="model.textphraseLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.bibl">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.bibl</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.bibl" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.link.common"/>
        <ref name="att.link.external"/>
      </define>
    </div>
  </div>

  <div xml:id="date">
    <xhtml:div>
      <xhtml:h1 class="name">date</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A date in any format. Used by: model.dateLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="date">
      <element name="date">
        <ref name="attlist.date"/>
        <ref name="content.date"/>
      </element>
    </define>
    <div xml:id="content.date">
      <xhtml:div>
        <xhtml:h1 class="name">content.date</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.date">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.date">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.date</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.date" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
        <ref name="att.date"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="edition">
    <xhtml:div>
      <xhtml:h1 class="name">edition</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The edition designation is a word or text phrase that normally indicates
          a difference in either content or form between the item being described and a
          related item previously issued by the same publisher/distributor (e.g. 2nd
          edition, version 2.0, etc.), or simultaneously issued by either the same
          publisher/distributor or another publisher/distributor (e.g. large print
          edition, British edition, etc.). The %model.textphraseLike.limited entity is
          used here in order to disallow the pb element. Used by: model.biblPart
          editionstmt Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="edition">
      <element name="edition">
        <ref name="attlist.edition"/>
        <ref name="content.edition"/>
      </element>
    </define>
    <div xml:id="content.edition">
      <xhtml:div>
        <xhtml:h1 class="name">content.edition</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.edition">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.edition">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.edition</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.edition" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="expan">
    <xhtml:div>
      <xhtml:h1 class="name">expan</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>expan (expansion) contains the expansion of an abbreviation. The type
          attribute may be used to classify the abbreviation according to some convenient
          typology. See example values above. This tag is the mirror image of the
          &lt;abbr&gt; tag; both allow the encoder to transcribe both an
          abbreviation and its expansion. In &lt;abbr&gt;, however, the original
          is transcribed as the content of the element and the expansion as an attribute
          value; &lt;expan&gt; reverses this. The choice between the two is up to
          the user. The &lt;expan&gt; tag is not required; if appropriate, the
          encoder may expand abbreviations in the source text silently, without tagging
          them. If this is done, the MEI header should so indicate. The abbr attribute
          gives the abbreviation in its unexpanded form. The cert attribute signifies the
          degree of certainty ascribed to the expansion of the abbreviation. The resp
          attribute contains an ID reference to an element containing the name of the
          editor or transcriber responsible for supplying the expansion of the
          abbreviation held as the content of the &lt;expan&gt; element. Used by:
          model.editorialLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="expan">
      <element name="expan">
        <ref name="attlist.expan"/>
        <ref name="content.expan"/>
      </element>
    </define>
    <div xml:id="content.expan">
      <xhtml:div>
        <xhtml:h1 class="name">content.expan</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.expan">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.expan">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.expan</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.expan" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.edit"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.trans"/>
        <ref name="att.typed"/>
        <optional>
          <attribute name="abbr"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="figdesc">
    <xhtml:div>
      <xhtml:h1 class="name">figdesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Contains a brief prose description of the appearance or content of a
          graphic figure, for use when documenting an image without displaying it. Best
          practice suggests the use of controlled vocabulary. Don't confuse this element
          with a figure caption. A caption is text primarily intended for display with an
          illustration. It may or may not function as a description of the illustration.
          Used by: figure surface zone Module: meiFigures</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="figdesc">
      <element name="figdesc">
        <ref name="attlist.figdesc"/>
        <ref name="content.figdesc"/>
      </element>
    </define>
    <div xml:id="content.figdesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.figdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.figdesc">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="_DUMMYmodel.graphicprimitiveLike"/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.annotLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.figdesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.figdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.figdesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="fw">
    <xhtml:div>
      <xhtml:h1 class="name">fw</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Forme work, e.g. header and footer. This element is intended for capture
          of header/footer material that is non-repeating; that is, it occurs on isolated
          pages. For running headers and footers use pgheadN and pgfootN elements.
          Auto-generated page numbers may be included by using a processing instruction.
          Used by: model.pgmetaLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="fw">
      <element name="fw">
        <ref name="attlist.fw"/>
        <ref name="content.fw"/>
      </element>
    </define>
    <div xml:id="content.fw">
      <xhtml:div>
        <xhtml:h1 class="name">content.fw</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.fw">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.fw">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.fw</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.fw" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.typed"/>
      </define>
    </div>
  </div>

  <div xml:id="graphic">
    <xhtml:div>
      <xhtml:h1 class="name">graphic</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Indicates the location of an inline graphic, illustration, or figure.
          Used by: model.graphicLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="graphic">
      <element name="graphic">
        <ref name="attlist.graphic"/>
        <ref name="content.graphic"/>
      </element>
    </define>
    <div xml:id="content.graphic">
      <xhtml:div>
        <xhtml:h1 class="name">content.graphic</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.graphic">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.graphic">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.graphic</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.graphic" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.link.external"/>
        <optional>
          <attribute name="height">
            <ref name="data.INTEGERPOSITIVE"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="units"/>
        </optional>
        <optional>
          <attribute name="width">
            <ref name="data.INTEGERPOSITIVE"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="identifier">
    <xhtml:div>
      <xhtml:h1 class="name">identifier</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Bibliographic, e.g., International Standard Book/Music Number, Library of
          Congress Control Number, Publisher's Number, or personal identifier. Used by:
          model.textphraseLike model.textphraseLike.limited model.pubstmtPart Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="identifier">
      <element name="identifier">
        <ref name="attlist.identifier"/>
        <ref name="content.identifier"/>
      </element>
    </define>
    <div xml:id="content.identifier">
      <xhtml:div>
        <xhtml:h1 class="name">content.identifier</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.identifier">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.identifier">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.identifier</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.identifier" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typed"/>
      </define>
    </div>
  </div>

  <div xml:id="lb">
    <xhtml:div>
      <xhtml:h1 class="name">lb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Text line break. The n attribute should be used to record a label for the
          line, i.e., most likely a line number. See comment on verse element for
          description of func attribute. Used by: model.milestoneLike.text
          model.textphraseLike.limited Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="lb">
      <element name="lb">
        <ref name="attlist.lb"/>
        <ref name="content.lb"/>
      </element>
    </define>
    <div xml:id="content.lb">
      <xhtml:div>
        <xhtml:h1 class="name">content.lb</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.lb">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.lb">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.lb</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.lb" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typed"/>
        <optional>
          <attribute name="func">
            <choice>
              <value>line</value>
              <value>group</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="source">
            <data type="IDREF"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="name">
    <xhtml:div>
      <xhtml:h1 class="name">name</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Contains the name of an individual, such as 'Henry VIII, King of
          England', a corporate body, such as 'The Beatles', a geographical place or a
          generative mechanical process. They are available here in order to record any
          identifiers or dates, associated with the name, i.e., birth and death in the
          case of persons or creation and dissolution in the case of a corporate entity or
          place. When name parts are needed, use name sub-elements. The recommended values
          for the type attribute are: pers, corp, place, process. Used by:
          model.nameLike.agent Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="name">
      <element name="name">
        <ref name="attlist.name"/>
        <ref name="content.name"/>
      </element>
    </define>
    <div xml:id="content.name">
      <xhtml:div>
        <xhtml:h1 class="name">content.name</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.name">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.name">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.name</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.name" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.name"/>
        <ref name="att.typed"/>
      </define>
    </div>
  </div>

  <div xml:id="num">
    <xhtml:div>
      <xhtml:h1 class="name">num</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A number in any form. Used by: model.measurementLike Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="num">
      <element name="num">
        <ref name="attlist.num"/>
        <ref name="content.num"/>
      </element>
    </define>
    <div xml:id="content.num">
      <xhtml:div>
        <xhtml:h1 class="name">content.num</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.num">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.num">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.num</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.num" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <optional>
          <attribute name="units"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="p">
    <xhtml:div>
      <xhtml:h1 class="name">p</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Paragraph Used by: model.textcomponentLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="p">
      <element name="p">
        <ref name="attlist.p"/>
        <ref name="content.p"/>
      </element>
    </define>
    <div xml:id="content.p">
      <xhtml:div>
        <xhtml:h1 class="name">content.p</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.p">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.paracontentPart"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.p">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.p</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.p" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.xy"/>
      </define>
    </div>
  </div>

  <div xml:id="pb">
    <xhtml:div>
      <xhtml:h1 class="name">pb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Page break. Meta-data about an accompanying page image may be recorded in
          the pgdesc element. The n attribute records the page number in the source. It
          need not be an integer, e.g. 'iv', or 'p17-3'. The logical page number can be
          calculated by counting previous pb ancestor elements. The source attribute is
          provided for linking to the bibliographic description of the source(s) that
          contains the page break. When used in a score context, a page break implies an
          accompanying system break. Permitting the following attributes will make it
          possible to record layout changes at a pagebreak rather than forcing a new
          section element: botmar %data.NUMBER; #IMPLIED height %data.NUMBER; #IMPLIED
          leftmar %data.NUMBER; #IMPLIED rightmar %data.NUMBER; #IMPLIED topmar
          %data.NUMBER; #IMPLIED spacing.system CDATA #IMPLIED width %data.NUMBER;
          #IMPLIED Used by: model.milestoneLike.text model.milestoneLike.music Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pb">
      <element name="pb">
        <ref name="attlist.pb"/>
        <ref name="content.pb"/>
      </element>
    </define>
    <div xml:id="content.pb">
      <xhtml:div>
        <xhtml:h1 class="name">content.pb</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pb">
        <ref name="model.pgmetaLike"/>
      </define>
    </div>
    <div xml:id="attlist.pb">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pb</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pb" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.link.common"/>
        <ref name="att.link.external"/>
        <optional>
          <attribute name="func">
            <choice>
              <value>verso</value>
              <value>recto</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="source">
            <data type="IDREFS"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="pgdesc">
    <xhtml:div>
      <xhtml:h1 class="name">pgdesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Contains a brief prose description of the appearance or description of
          the content of a physical page. Best practice suggests the use of controlled
          vocabulary. Don't confuse this element with a figure caption. A caption is text
          primarily intended for display with an illustration. It may or may not function
          as a description of the illustration. Perhaps a better model is
          (%model.locrefLike;)* with which one could force page-level meta-data to the
          header where it could be encoded in notesstmt elements. Used by: pb Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pgdesc">
      <element name="pgdesc">
        <ref name="attlist.pgdesc"/>
        <ref name="content.pgdesc"/>
      </element>
    </define>
    <div xml:id="content.pgdesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.pgdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pgdesc">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="_DUMMYmodel.graphicprimitiveLike"/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.annotLike"/>
            <ref name="_DUMMYmodel.locrefLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.pgdesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pgdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pgdesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="rend">
    <xhtml:div>
      <xhtml:h1 class="name">rend</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Special visual rendering of text. A positive value for rotation rotates
          the text in a counter-clockwise fashion, while negative values produce clockwise
          rotation. The rend attribute captures the appearance of the text. The altrend
          attribute can be used to extend the values of the rend attribute. One or the
          other of the rend and altrend attributes is required. Used by: model.rendLike
          Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="rend">
      <element name="rend">
        <ref name="attlist.rend"/>
        <ref name="content.rend"/>
      </element>
    </define>
    <div xml:id="content.rend">
      <xhtml:div>
        <xhtml:h1 class="name">content.rend</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.rend">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.rend">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.rend</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.rend" combine="interleave">
        <ref name="att.color"/>
        <ref name="att.common"/>
        <ref name="att.lang"/>
        <ref name="att.typography"/>
        <optional>
          <attribute name="altrend"/>
        </optional>
        <optional>
          <attribute name="halign">
            <choice>
              <value>left</value>
              <value>right</value>
              <value>center</value>
              <value>justify</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="rend">
            <ref name="data.TEXTRENDITION"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="rotation">
            <ref name="data.DEGREES"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="valign">
            <choice>
              <value>top</value>
              <value>middle</value>
              <value>bottom</value>
              <value>baseline</value>
            </choice>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="repository">
    <xhtml:div>
      <xhtml:h1 class="name">repository</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Institution which holds a bibliographic item. Sub-units of the
          institution may be marked with nested repository elements. Used by:
          model.nameLike.place Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="repository">
      <element name="repository">
        <ref name="attlist.repository"/>
        <ref name="content.repository"/>
      </element>
    </define>
    <div xml:id="content.repository">
      <xhtml:div>
        <xhtml:h1 class="name">content.repository</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.repository">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.repository">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.repository</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.repository" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.name"/>
        <ref name="att.typed"/>
      </define>
    </div>
  </div>

  <div xml:id="stack">
    <xhtml:div>
      <xhtml:h1 class="name">stack</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Stacked text, e.g. an inline table with a single column. Used by:
          model.rendLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="stack">
      <element name="stack">
        <ref name="attlist.stack"/>
        <ref name="content.stack"/>
      </element>
    </define>
    <div xml:id="content.stack">
      <xhtml:div>
        <xhtml:h1 class="name">content.stack</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.stack">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.stack">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.stack</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.stack" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <optional>
          <attribute name="delim"/>
        </optional>
        <optional>
          <attribute name="align">
            <choice>
              <value>left</value>
              <value>right</value>
              <value>center</value>
              <value>rightdigit</value>
            </choice>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="title">
    <xhtml:div>
      <xhtml:h1 class="name">title</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Title of a bibliographic entity. The type attribute may be used to
          classify the title according to some convenient typology. Sample values include:
          main main title subordinate subtitle, title of part abbreviated abbreviated form
          of title alternative alternate title by which the work is also known translated
          translated form of title uniform uniform title The type attribute is provided
          for convenience in analysing titles and processing them according to their type;
          where such specialized processing is not necessary, there is no need for such
          analysis, and the entire title, including subtitles and any parallel titles, may
          be enclosed within a single &lt;title&gt; element. The level attribute
          indicates whether this is the title of an article, monograph, journal, series,
          or unpublished material. Title parts may be encoded in title sub-elements since
          title is included in model.textphrase. Used by: model.titleLike Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="title">
      <element name="title">
        <ref name="attlist.title"/>
        <ref name="content.title"/>
      </element>
    </define>
    <div xml:id="content.title">
      <xhtml:div>
        <xhtml:h1 class="name">content.title</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.title">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.title">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.title</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.title" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.name"/>
        <ref name="att.typed"/>
        <optional>
          <attribute name="level">
            <choice>
              <value>a</value>
              <value>m</value>
              <value>j</value>
              <value>s</value>
              <value>u</value>
            </choice>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="clef">
    <xhtml:div>
      <xhtml:h1 class="name">clef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The clef element must be used when a staff employs multiple simultaneous
          clefs. Used by: model.clefchangePart model.staffdefPart.multiplyDefinable
          Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="clef">
      <element name="clef">
        <ref name="attlist.clef"/>
        <ref name="content.clef"/>
      </element>
    </define>
    <div xml:id="content.clef">
      <xhtml:div>
        <xhtml:h1 class="name">content.clef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.clef">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.clef">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.clef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.clef" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.anl.clef"/>
        <ref name="att.ges.clef"/>
        <ref name="att.log.clef"/>
        <ref name="att.vis.clef"/>
      </define>
    </div>
  </div>

  <div xml:id="custos">
    <xhtml:div>
      <xhtml:h1 class="name">custos</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Custos or direct. The symbol placed at the end of a staff to indicate the
          first note of the next staff. Used by: model.eventLike.common Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="custos">
      <element name="custos">
        <ref name="attlist.custos"/>
        <ref name="content.custos"/>
      </element>
    </define>
    <div xml:id="content.custos">
      <xhtml:div>
        <xhtml:h1 class="name">content.custos</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.custos">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.custos">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.custos</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.custos" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.custos"/>
        <ref name="att.vis.custos"/>
        <ref name="att.ges.sb"/>
        <ref name="att.anl.sb"/>
      </define>
    </div>
  </div>

  <div xml:id="clefchange">
    <xhtml:div>
      <xhtml:h1 class="name">clefchange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Mid-measure clef change. Coming as it does, in the middle of a measure, a
          clef change is an event. Used by: model.eventLike.common Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="clefchange">
      <element name="clefchange">
        <ref name="attlist.clefchange"/>
        <ref name="content.clefchange"/>
      </element>
    </define>
    <div xml:id="content.clefchange">
      <xhtml:div>
        <xhtml:h1 class="name">content.clefchange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.clefchange">
        <ref name="model.clefchangePart"/>
      </define>
    </div>
    <div xml:id="attlist.clefchange">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.clefchange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.clefchange" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.event"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.clefchange"/>
        <ref name="att.vis.clefchange"/>
        <ref name="att.ges.clefchange"/>
        <ref name="att.anl.clefchange"/>
      </define>
    </div>
  </div>

  <div xml:id="pad">
    <xhtml:div>
      <xhtml:h1 class="name">pad</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Used to create additional visual space between notational elements. Used
          by: model.eventLike.common Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pad">
      <element name="pad">
        <ref name="attlist.pad"/>
        <ref name="content.pad"/>
      </element>
    </define>
    <div xml:id="content.pad">
      <xhtml:div>
        <xhtml:h1 class="name">content.pad</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pad">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.pad">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pad</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pad" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.log.pad"/>
        <ref name="att.vis.pad"/>
        <ref name="att.ges.pad"/>
        <ref name="att.anl.pad"/>
      </define>
    </div>
  </div>

  <div xml:id="space">
    <xhtml:div>
      <xhtml:h1 class="name">space</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A placeholder used to fill an incomplete measure, layer, etc. most often
          so that the combined duration of the events equals the number of beats in the
          measure. Used by: model.eventLike.common Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="space">
      <element name="space">
        <ref name="attlist.space"/>
        <ref name="content.space"/>
      </element>
    </define>
    <div xml:id="content.space">
      <xhtml:div>
        <xhtml:h1 class="name">content.space</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.space">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.space">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.space</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.space" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.space"/>
        <ref name="att.vis.space"/>
        <ref name="att.ges.space"/>
        <ref name="att.anl.space"/>
      </define>
    </div>
  </div>

  <div xml:id="dir">
    <xhtml:div>
      <xhtml:h1 class="name">dir</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Directives, e.g. text expressions that are on the score (typically above,
          below, or between staves), but not on the staff and not encoded elsewhere, such
          as in tempo or dynam elements. Examples include text strings, such as
          'affettuoso' or fingerings and music symbols, such as segno and coda symbols,
          fermatas over a barline, etc. Unlike generic text elements, directives can be
          control elements. That is, they can be used as pointers to other events. The
          %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow use of the pb sub-element. Used by:
          model.controleventLike.common Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="dir">
      <element name="dir">
        <ref name="attlist.dir"/>
        <ref name="content.dir"/>
      </element>
    </define>
    <div xml:id="content.dir">
      <xhtml:div>
        <xhtml:h1 class="name">content.dir</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.dir">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.graphicprimitiveLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.dir">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.dir</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.dir" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.typed"/>
        <ref name="att.log.dir"/>
        <ref name="att.vis.dir"/>
        <ref name="att.ges.dir"/>
        <ref name="att.anl.dir"/>
      </define>
    </div>
  </div>

  <div xml:id="dynam">
    <xhtml:div>
      <xhtml:h1 class="name">dynam</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The dynam element may be used for instantaneous or continuous textual
          dynamics, e.g. 'p', 'mf', or 'cresc. poco a poco'. See Read, p. 250-255. The
          hairpin element should be used for graphical dynamic markings. The
          %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow use of the pb sub- element. Used by:
          model.controleventLike.common Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="dynam">
      <element name="dynam">
        <ref name="attlist.dynam"/>
        <ref name="content.dynam"/>
      </element>
    </define>
    <div xml:id="content.dynam">
      <xhtml:div>
        <xhtml:h1 class="name">content.dynam</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.dynam">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.dynam">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.dynam</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.dynam" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.dynam"/>
        <ref name="att.vis.dynam"/>
        <ref name="att.ges.dynam"/>
        <ref name="att.anl.dynam"/>
      </define>
    </div>
  </div>

  <div xml:id="phrase">
    <xhtml:div>
      <xhtml:h1 class="name">phrase</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Phrase mark, used for a "unified melodic idea" (Read, p. 265). Used by:
          model.controleventLike.common Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="phrase">
      <element name="phrase">
        <ref name="attlist.phrase"/>
        <ref name="content.phrase"/>
      </element>
    </define>
    <div xml:id="content.phrase">
      <xhtml:div>
        <xhtml:h1 class="name">content.phrase</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.phrase">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.phrase">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.phrase</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.phrase" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.phrase"/>
        <ref name="att.vis.phrase"/>
        <ref name="att.ges.phrase"/>
        <ref name="att.anl.phrase"/>
      </define>
    </div>
  </div>

  <div xml:id="tempo">
    <xhtml:div>
      <xhtml:h1 class="name">tempo</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Text and symbols descriptive of tempo, mood, or style, e.g., "allarg.",
          "a tempo", "cantabile", "Moderato", "[qtrnote]=60", "Moderato [qtrnote] =60").
          Both "instantaneous" and "continuous" tempo markings may be encoded using this
          element. The %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow the use of the pb sub-element. Used by:
          model.controleventLike.common Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="tempo">
      <element name="tempo">
        <ref name="attlist.tempo"/>
        <ref name="content.tempo"/>
      </element>
    </define>
    <div xml:id="content.tempo">
      <xhtml:div>
        <xhtml:h1 class="name">content.tempo</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.tempo">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.graphicprimitiveLike"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.tempo">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.tempo</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.tempo" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
        <ref name="att.log.tempo"/>
        <ref name="att.vis.tempo"/>
        <ref name="att.ges.tempo"/>
        <ref name="att.anl.tempo"/>
      </define>
    </div>
  </div>

  <div xml:id="mensur">
    <xhtml:div>
      <xhtml:h1 class="name">mensur</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The mensur element is provided for the encoding of mensural notation.
          Used by: model.staffdefPart.multiplyDefinable Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="mensur">
      <element name="mensur">
        <ref name="attlist.mensur"/>
        <ref name="content.mensur"/>
      </element>
    </define>
    <div xml:id="content.mensur">
      <xhtml:div>
        <xhtml:h1 class="name">content.mensur</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.mensur">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.mensur">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.mensur</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.mensur" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.mensur"/>
        <ref name="att.vis.mensur"/>
        <ref name="att.ges.mensur"/>
        <ref name="att.anl.mensur"/>
      </define>
    </div>
  </div>

  <div xml:id="proport">
    <xhtml:div>
      <xhtml:h1 class="name">proport</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Proportion. Used by: model.staffdefPart.multiplyDefinable Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="proport">
      <element name="proport">
        <ref name="attlist.proport"/>
        <ref name="content.proport"/>
      </element>
    </define>
    <div xml:id="content.proport">
      <xhtml:div>
        <xhtml:h1 class="name">content.proport</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.proport">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.proport">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.proport</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.proport" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.proport"/>
        <ref name="att.vis.proport"/>
        <ref name="att.ges.proport"/>
        <ref name="att.anl.proport"/>
      </define>
    </div>
  </div>

  <div xml:id="ligature">
    <xhtml:div>
      <xhtml:h1 class="name">ligature</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The ligature element is provided for the encoding of mensural notation.
          Used by: model.eventLike.neume-mensural Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="ligature">
      <element name="ligature">
        <ref name="attlist.ligature"/>
        <ref name="content.ligature"/>
      </element>
    </define>
    <div xml:id="content.ligature">
      <xhtml:div>
        <xhtml:h1 class="name">content.ligature</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.ligature">
        <zeroOrMore>
          <ref name="model.layerPart"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.ligature">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.ligature</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.ligature" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.ligature"/>
        <ref name="att.vis.ligature"/>
        <ref name="att.ges.ligature"/>
        <ref name="att.anl.ligature"/>
      </define>
    </div>
  </div>

  <div xml:id="mensurchange">
    <xhtml:div>
      <xhtml:h1 class="name">mensurchange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Mensuration change. Used by: model.eventLike.neume-mensural Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="mensurchange">
      <element name="mensurchange">
        <ref name="attlist.mensurchange"/>
        <ref name="content.mensurchange"/>
      </element>
    </define>
    <div xml:id="content.mensurchange">
      <xhtml:div>
        <xhtml:h1 class="name">content.mensurchange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.mensurchange">
        <oneOrMore>
          <ref name="mensur"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.mensurchange">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.mensurchange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.mensurchange" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
      </define>
    </div>
  </div>

  <div xml:id="proportchange">
    <xhtml:div>
      <xhtml:h1 class="name">proportchange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Proportion change. Used by: model.eventLike.neume-mensural Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="proportchange">
      <element name="proportchange">
        <ref name="attlist.proportchange"/>
        <ref name="content.proportchange"/>
      </element>
    </define>
    <div xml:id="content.proportchange">
      <xhtml:div>
        <xhtml:h1 class="name">content.proportchange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.proportchange">
        <oneOrMore>
          <ref name="proport"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.proportchange">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.proportchange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.proportchange" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
      </define>
    </div>
  </div>

  <div xml:id="artic">
    <xhtml:div>
      <xhtml:h1 class="name">artic</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Articulation. This element provides an alternative to the artic
          attributes on the note and chord elements. The element should be used when when
          specific display info, such as size or color, needs to be recorded for the
          articulation. Used by: model.noteModifierLike model.notaModifierLike
          model.neumeModifierLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="artic">
      <element name="artic">
        <ref name="attlist.artic"/>
        <ref name="content.artic"/>
      </element>
    </define>
    <div xml:id="content.artic">
      <xhtml:div>
        <xhtml:h1 class="name">content.artic</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.artic">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.artic">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.artic</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.artic" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typography"/>
        <ref name="att.log.artic"/>
        <ref name="att.vis.artic"/>
        <ref name="att.ges.artic"/>
        <ref name="att.anl.artic"/>
      </define>
    </div>
  </div>

  <div xml:id="keyaccid">
    <xhtml:div>
      <xhtml:h1 class="name">keyaccid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Accidental in a key signature. It is a semantic error not to provide x
          and y or staffloc attributes. Used by: model.keyaccidLike Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="keyaccid">
      <element name="keyaccid">
        <ref name="attlist.keyaccid"/>
        <ref name="content.keyaccid"/>
      </element>
    </define>
    <div xml:id="content.keyaccid">
      <xhtml:div>
        <xhtml:h1 class="name">content.keyaccid</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.keyaccid">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.keyaccid">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.keyaccid</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.keyaccid" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.xy"/>
        <optional>
          <attribute name="enclose">
            <ref name="data.ENCLOSURE"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="form">
            <choice>
              <value>implicit</value>
              <value>explicit</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="oct">
            <ref name="data.OCTAVE"/>
          </attribute>
        </optional>
        <attribute name="pname">
          <ref name="data.PITCHNAME"/>
        </attribute>
        <optional>
          <attribute name="staffloc">
            <ref name="data.STAFFLOC"/>
          </attribute>
        </optional>
        <attribute name="value">
          <ref name="data.ACCIDENTAL.EXPLICIT"/>
        </attribute>
      </define>
    </div>
  </div>

  <div xml:id="keysig">
    <xhtml:div>
      <xhtml:h1 class="name">keysig</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Key signature. This element may be used as an alternative to the key.*
          attributes (especially key.sig.mixed) on scoredef and staffdef. Used by:
          model.keysigLike Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="keysig">
      <element name="keysig">
        <ref name="attlist.keysig"/>
        <ref name="content.keysig"/>
      </element>
    </define>
    <div xml:id="content.keysig">
      <xhtml:div>
        <xhtml:h1 class="name">content.keysig</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.keysig">
        <zeroOrMore>
          <ref name="model.keyaccidLike"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.keysig">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.keysig</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.keysig" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <optional>
          <attribute name="accid">
            <ref name="data.ACCIDENTAL.IMPLICIT"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="mode">
            <ref name="data.MODE"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="pname">
            <ref name="data.PITCHNAME"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="accid">
    <xhtml:div>
      <xhtml:h1 class="name">accid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Accidental. This element provides an alternative to the acci attributes
          on the note element. The element should be used when specific display info, such
          as size or color, needs to be recorded for the accidental. The func attribute
          can be used to differentiate different functions, such as 'cautionary' or
          'editorial'. Used by: model.noteModifierLike model.notaModifierLike
          model.neumeModifierLike model.eventLike.mensural-cmn Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="accid">
      <element name="accid">
        <ref name="attlist.accid"/>
        <ref name="content.accid"/>
      </element>
    </define>
    <div xml:id="content.accid">
      <xhtml:div>
        <xhtml:h1 class="name">content.accid</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.accid">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.accid">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.accid</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.accid" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typography"/>
        <ref name="att.log.accid"/>
        <ref name="att.vis.accid"/>
        <ref name="att.ges.accid"/>
        <ref name="att.anl.accid"/>
      </define>
    </div>
  </div>

  <div xml:id="barline">
    <xhtml:div>
      <xhtml:h1 class="name">barline</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The barline element may be used instead of the measure element. It has
          the same attributes as measure. Used by: model.eventLike.mensural-cmn Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="barline">
      <element name="barline">
        <ref name="attlist.barline"/>
        <ref name="content.barline"/>
      </element>
    </define>
    <div xml:id="content.barline">
      <xhtml:div>
        <xhtml:h1 class="name">content.barline</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.barline">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.barline">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.barline</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.barline" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.link.common"/>
        <ref name="att.link.internal"/>
        <ref name="att.link.external"/>
        <ref name="att.log.barline"/>
        <ref name="att.vis.barline"/>
        <ref name="att.ges.barline"/>
        <ref name="att.anl.barline"/>
      </define>
    </div>
  </div>

  <div xml:id="dot">
    <xhtml:div>
      <xhtml:h1 class="name">dot</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The dot element is provided for the encoding of mensural notation. The
          dot element may be used for dots of augmentation or division. Used by:
          model.eventLike.mensural-cmn Module: meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="dot">
      <element name="dot">
        <ref name="attlist.dot"/>
        <ref name="content.dot"/>
      </element>
    </define>
    <div xml:id="content.dot">
      <xhtml:div>
        <xhtml:h1 class="name">content.dot</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.dot">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.dot">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.dot</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.dot" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.dot"/>
        <ref name="att.vis.dot"/>
        <ref name="att.ges.dot"/>
        <ref name="att.anl.dot"/>
      </define>
    </div>
  </div>

  <div xml:id="keychange">
    <xhtml:div>
      <xhtml:h1 class="name">keychange</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Key change. Used by: model.eventLike.mensural-cmn Module:
          meiShared</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="keychange">
      <element name="keychange">
        <ref name="attlist.keychange"/>
        <ref name="content.keychange"/>
      </element>
    </define>
    <div xml:id="content.keychange">
      <xhtml:div>
        <xhtml:h1 class="name">content.keychange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.keychange">
        <zeroOrMore>
          <ref name="model.keyaccidLike"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.keychange">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.keychange</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.keychange" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
      </define>
    </div>
  </div>

  <div xml:id="body">
    <xhtml:div>
      <xhtml:h1 class="name">body</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The body element contains the actual music data. When the music can be
          broken into high-level, discrete, linear segments, such as movements in the case
          of a symphony, there may be multiple mdiv elements within the body. This is the
          highest level indication of the structure of the music. The declaration of %
          content.body '(%model.mdivLike;)* allows the body element to be empty, which
          might be useful in some editing/creation situations. Used by: music Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="body">
      <element name="body">
        <ref name="attlist.body"/>
        <ref name="content.body"/>
      </element>
    </define>
    <div xml:id="content.body">
      <xhtml:div>
        <xhtml:h1 class="name">content.body</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.body">
        <oneOrMore>
          <ref name="model.mdivLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.body">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.body</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.body" combine="interleave">
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="ending">
    <xhtml:div>
      <xhtml:h1 class="name">ending</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Alternative ending. The scoredef element is allowed so that an ending may
          have its own meta-data without the overhead of child &lt;section&gt;s.
          Div sub-elements are not allowed within ending in order to avoid collisions with
          the brackets that are usually displayed over endings. Endings may *not* contain
          other ending elements. Used by: model.endingLike ending Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="ending">
      <element name="ending">
        <ref name="attlist.ending"/>
        <ref name="content.ending"/>
      </element>
    </define>
    <div xml:id="content.ending">
      <xhtml:div>
        <xhtml:h1 class="name">content.ending</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.ending">
        <zeroOrMore>
          <ref name="model.Incl"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.sectionPart"/>
          <zeroOrMore>
            <ref name="model.Incl"/>
          </zeroOrMore>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.ending">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.ending</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.ending" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typed"/>
        <ref name="att.link.common"/>
        <ref name="att.link.external"/>
        <ref name="att.link.internal"/>
        <ref name="att.anl.ending"/>
        <ref name="att.ges.ending"/>
        <ref name="att.log.ending"/>
        <ref name="att.vis.ending"/>
      </define>
    </div>
  </div>

  <div xml:id="group">
    <xhtml:div>
      <xhtml:h1 class="name">group</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The group element enables the gathering of multiple documents into a
          single file. Because its model contains the music element, each of the documents
          can have its own front and back matter. Used by: music group Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="group">
      <element name="group">
        <ref name="attlist.group"/>
        <ref name="content.group"/>
      </element>
    </define>
    <div xml:id="content.group">
      <xhtml:div>
        <xhtml:h1 class="name">content.group</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.group">
        <choice>
          <ref name="music"/>
          <ref name="group"/>
        </choice>
        <zeroOrMore>
          <choice>
            <ref name="music"/>
            <ref name="group"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.group">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.group</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.group" combine="interleave">
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="grpsym">
    <xhtml:div>
      <xhtml:h1 class="name">grpsym</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Group symbol, i.e., a brace or bracket. This element may be used instead
          of the staffgrp element's symbol attribute when exact placement or editorial
          details for the brace must be recorded. Used by: staffgrp Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="grpsym">
      <element name="grpsym">
        <ref name="attlist.grpsym"/>
        <ref name="content.grpsym"/>
      </element>
    </define>
    <div xml:id="content.grpsym">
      <xhtml:div>
        <xhtml:h1 class="name">content.grpsym</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.grpsym">
        <zeroOrMore>
          <ref name="model.labelLike"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.grpsym">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.grpsym</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.grpsym" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.grpsym"/>
        <ref name="att.vis.grpsym"/>
        <ref name="att.ges.grpsym"/>
        <ref name="att.anl.grpsym"/>
      </define>
    </div>
  </div>

  <div xml:id="instrdef">
    <xhtml:div>
      <xhtml:h1 class="name">instrdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Default MIDI instrument declaration. This element provides a starting or
          default instrument declaration for a staff, a group of staves, or a layer. MIDI
          prog elements may then change the instrument as necessary. Used by: instrdefLike
          Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="instrdef">
      <element name="instrdef">
        <ref name="attlist.instrdef"/>
        <ref name="content.instrdef"/>
      </element>
    </define>
    <div xml:id="content.instrdef">
      <xhtml:div>
        <xhtml:h1 class="name">content.instrdef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.instrdef">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.instrdef">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.instrdef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.instrdef" combine="interleave">
        <ref name="att.common"/>
        <optional>
          <attribute name="midi.channel">
            <ref name="data.MIDICHANNEL"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="midi.duty">
            <ref name="data.PERCENT"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="midi.instr">
            <ref name="data.MIDIVALUE"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="midi.instrname"/>
        </optional>
        <optional>
          <attribute name="midi.port">
            <ref name="data.MIDIVALUE"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="midi.track">
            <ref name="data.INTEGERPOSITIVE"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="label">
    <xhtml:div>
      <xhtml:h1 class="name">label</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Staff, staffgrp, or grpsym label. Used by: model.labelLike Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="label">
      <element name="label">
        <ref name="attlist.label"/>
        <ref name="content.label"/>
      </element>
    </define>
    <div xml:id="content.label">
      <xhtml:div>
        <xhtml:h1 class="name">content.label</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.label">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.label">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.label</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.label" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <optional>
          <attribute name="source">
            <data type="IDREF"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="layer">
    <xhtml:div>
      <xhtml:h1 class="name">layer</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Layer (voice). An independent stream of events on a staff. The term
          'layer' in used in order to avoid confusion between 'voice' and 'voice leading'.
          The n attribute should be used to establish a connection back to the appropriate
          layerdef element. Usually, the topmost layer is "1", next is "2", etc.
          *regardless of voicing*). If the n attribute is omitted, encoding order is
          presumed to match the layer order. Of course, if data is supplied for only a
          subset of layers, the n attribute must be supplied. Used by: model.layerLike
          Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="layer">
      <element name="layer">
        <ref name="attlist.layer"/>
        <ref name="content.layer"/>
      </element>
    </define>
    <div xml:id="content.layer">
      <xhtml:div>
        <xhtml:h1 class="name">content.layer</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.layer">
        <zeroOrMore>
          <ref name="model.Incl"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.layerPart"/>
          <zeroOrMore>
            <ref name="model.Incl"/>
          </zeroOrMore>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.layer">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.layer</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.layer" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.layer"/>
        <ref name="att.vis.layer"/>
        <ref name="att.ges.layer"/>
        <ref name="att.anl.layer"/>
      </define>
    </div>
  </div>

  <div xml:id="layerdef">
    <xhtml:div>
      <xhtml:h1 class="name">layerdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Container for layer (e.g. voice) meta-information. Used by: layerdefLike
          Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="layerdef">
      <element name="layerdef">
        <ref name="attlist.layerdef"/>
        <ref name="content.layerdef"/>
      </element>
    </define>
    <div xml:id="content.layerdef">
      <xhtml:div>
        <xhtml:h1 class="name">content.layerdef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.layerdef">
        <zeroOrMore>
          <ref name="model.instrdefLike"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.layerdef">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.layerdef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.layerdef" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.log.layerdef"/>
        <ref name="att.vis.layerdef"/>
        <ref name="att.ges.layerdef"/>
        <ref name="att.anl.layerdef"/>
      </define>
    </div>
  </div>

  <div xml:id="mdiv">
    <xhtml:div>
      <xhtml:h1 class="name">mdiv</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The mdiv element may contain one or both of 2 possible views of the
          music. The score view is the traditional full and open score while the parts
          view contains each performer's view of the score; that is, his part. These 2
          views are necessary because it is not always possible or desirable to generate
          one from the other. The score and parts elements are placed here and not
          directly within the body element because score and part characteristics may
          change from mdiv to mdiv. For example, the 2nd movement of a symphony may
          require different performing forces (and therefore different score and part
          layout) than the other movements. The mdiv element may be recursively nested in
          order to represent music which exhibits this kind of structure. For example, an
          opera is normally divided into acts, which are in turn divided into scenes. This
          may be represented by the following markup: &lt;mdiv&gt; &lt;- the
          opera &lt;mdiv&gt; &lt;- act I &lt;mdiv&gt; &lt;- scene
          i &lt;mdiv&gt; &lt;- scene ii &lt;/mdiv&gt;
          &lt;mdiv&gt; &lt;- act II &lt;mdiv&gt; &lt;- scene i
          &lt;mdiv&gt; &lt;- scene ii &lt;/mdiv&gt;
          &lt;/mdiv&gt; Used by: body mdiv Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="mdiv">
      <element name="mdiv">
        <ref name="attlist.mdiv"/>
        <ref name="content.mdiv"/>
      </element>
    </define>
    <div xml:id="content.mdiv">
      <xhtml:div>
        <xhtml:h1 class="name">content.mdiv</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.mdiv">
        <choice>
          <group>
            <optional>
              <ref name="model.scoreLike"/>
            </optional>
            <optional>
              <ref name="model.partsLike"/>
            </optional>
          </group>
          <zeroOrMore>
            <ref name="model.mdivLike"/>
          </zeroOrMore>
        </choice>
      </define>
    </div>
    <div xml:id="attlist.mdiv">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.mdiv</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.mdiv" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typed"/>
      </define>
    </div>
  </div>

  <div xml:id="part">
    <xhtml:div>
      <xhtml:h1 class="name">part</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A part is an alternative visual rendition of the score from a particular
          performer's point of view. Part elements are not used in the score to indicate
          voice leading. Next attributes on event elements should be used for this
          purpose. Part elements are useful for encoding individual parts when there is no
          score, such as early music part books, when the music has non-aligning barlines,
          when different layout, such as page turns, are needed for the score and parts,
          or for accommodating software that requires part-by-part encoding. When assembly
          of the parts into a score is desired and there are non-aligning barlines,
          barlines which indicate points of alignment across all the parts should be
          marked as 'controlling', while non-aligning ones should be marked as 'non-
          controlling'. Used by: model.partLike Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="part">
      <element name="part">
        <ref name="attlist.part"/>
        <ref name="content.part"/>
      </element>
    </define>
    <div xml:id="content.part">
      <xhtml:div>
        <xhtml:h1 class="name">content.part</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.part">
        <zeroOrMore>
          <ref name="model.scorePart"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.part">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.part</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.part" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.typed"/>
        <ref name="att.log.part"/>
        <ref name="att.vis.part"/>
        <ref name="att.ges.part"/>
        <ref name="att.anl.part"/>
      </define>
    </div>
  </div>

  <div xml:id="parts">
    <xhtml:div>
      <xhtml:h1 class="name">parts</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Parts view of the mdiv. Used by: partsLike Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="parts">
      <element name="parts">
        <ref name="attlist.parts"/>
        <ref name="content.parts"/>
      </element>
    </define>
    <div xml:id="content.parts">
      <xhtml:div>
        <xhtml:h1 class="name">content.parts</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.parts">
        <zeroOrMore>
          <ref name="model.partLike"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.parts">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.parts</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.parts" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.typed"/>
        <ref name="att.log.parts"/>
        <ref name="att.vis.parts"/>
        <ref name="att.ges.parts"/>
        <ref name="att.anl.parts"/>
      </define>
    </div>
  </div>

  <div xml:id="pgfoot1">
    <xhtml:div>
      <xhtml:h1 class="name">pgfoot1</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A running footer on the first page. This element is a specialized form of
          the fw element. Auto-generated page numbers may be indicated with a processing
          instruction. The pgheadN and pgfootN elements should *not* be used to encode
          textual notes! Used by: model.pgmetaLike.score Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pgfoot1">
      <element name="pgfoot1">
        <ref name="attlist.pgfoot1"/>
        <ref name="content.pgfoot1"/>
      </element>
    </define>
    <div xml:id="content.pgfoot1">
      <xhtml:div>
        <xhtml:h1 class="name">content.pgfoot1</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pgfoot1">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.pgfoot1">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pgfoot1</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pgfoot1" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="pgfoot2">
    <xhtml:div>
      <xhtml:h1 class="name">pgfoot2</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A running header on the pages following the first. This element is a
          specialized form of the fw element. Auto-generated page numbers may be indicated
          with a processing instruction. The pgheadN and pgfootN elements should *not* be
          used to encode textual notes! Used by: model.pgmetaLike.score Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pgfoot2">
      <element name="pgfoot2">
        <ref name="attlist.pgfoot2"/>
        <ref name="content.pgfoot2"/>
      </element>
    </define>
    <div xml:id="content.pgfoot2">
      <xhtml:div>
        <xhtml:h1 class="name">content.pgfoot2</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pgfoot2">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.pgfoot2">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pgfoot2</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pgfoot2" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="pghead1">
    <xhtml:div>
      <xhtml:h1 class="name">pghead1</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A running header on the first page. This element is a specialized form of
          the fw element for capturing the table-formatted textual data that often appears
          on the first page of printed music. It may also be used for similarly formatted
          material in manuscripts. The pgheadN and pgfootN elements should *not* be used
          to encode textual notes! Auto- generated page numbers may be indicated with a
          processing instruction. Used by: model.pgmetaLike.score Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pghead1">
      <element name="pghead1">
        <ref name="attlist.pghead1"/>
        <ref name="content.pghead1"/>
      </element>
    </define>
    <div xml:id="content.pghead1">
      <xhtml:div>
        <xhtml:h1 class="name">content.pghead1</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pghead1">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.pghead1">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pghead1</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pghead1" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="pghead2">
    <xhtml:div>
      <xhtml:h1 class="name">pghead2</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A running header on the pages following the first. This element is a
          specialized form of the fw element. The pgheadN and pgfootN elements should
          *not* be used to encode textual notes! Auto-generated page numbers may be
          indicated with a processing instruction. Used by: model.pgmetaLike.score Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pghead2">
      <element name="pghead2">
        <ref name="attlist.pghead2"/>
        <ref name="content.pghead2"/>
      </element>
    </define>
    <div xml:id="content.pghead2">
      <xhtml:div>
        <xhtml:h1 class="name">content.pghead2</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pghead2">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textcomponentLike"/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.pghead2">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pghead2</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pghead2" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="sb">
    <xhtml:div>
      <xhtml:h1 class="name">sb</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>System break. Allowing staffdef content, i.e., &lt;!ENTITY %
          content.sb ''&gt;. Allowing staffdef within content.sb would make it
          possible to record layout changes without requiring these changes to be made at
          section boundaries. However, it would also allow meter and key changes, which is
          probably undesirable. Used by: model.milestoneLike.music Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="sb">
      <element name="sb">
        <ref name="attlist.sb"/>
        <ref name="content.sb"/>
      </element>
    </define>
    <div xml:id="content.sb">
      <xhtml:div>
        <xhtml:h1 class="name">content.sb</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.sb">
        <optional>
          <ref name="custos"/>
        </optional>
      </define>
    </div>
    <div xml:id="attlist.sb">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.sb</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.sb" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.sb"/>
        <ref name="att.vis.sb"/>
        <ref name="att.ges.sb"/>
        <ref name="att.anl.sb"/>
      </define>
    </div>
  </div>

  <div xml:id="score">
    <xhtml:div>
      <xhtml:h1 class="name">score</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Full score view of the mdiv. Since the measure element is optional, a
          score may consist entirely of pagebreaks, each of which points to a page image.
          Div elements are allowed preceding and following sections of music data in order
          to accommodate blocks of explanatory text. Used by: model.scoreLike Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="score">
      <element name="score">
        <ref name="attlist.score"/>
        <ref name="content.score"/>
      </element>
    </define>
    <div xml:id="content.score">
      <xhtml:div>
        <xhtml:h1 class="name">content.score</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.score">
        <zeroOrMore>
          <ref name="model.Incl"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.scorePart"/>
          <zeroOrMore>
            <ref name="model.Incl"/>
          </zeroOrMore>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.score">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.score</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.score" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.typed"/>
        <ref name="att.log.score"/>
        <ref name="att.vis.score"/>
        <ref name="att.ges.score"/>
        <ref name="att.anl.score"/>
      </define>
    </div>
  </div>

  <div xml:id="scoredef">
    <xhtml:div>
      <xhtml:h1 class="name">scoredef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Container for score meta-information. Score-level encoding strategies
          for: a) alternating meter sig, e.g. 2/4 3/4 in alternating measures (Read, p.
          164-165) and combined meters (Read, p.166-168): explicitly encode meters, make
          them invisible, display both meter sigs at the start of the section b) compound
          meter sig, e.g. 2+3+2/4 (Read, p. 168-170): set meter.count=2+3+2 c) polymeters,
          e.g. different simultaneous meters (Read, p. 170-173): 1. where barlines
          coincide, use beaming to elucidate the polymeter 2. where barlines sometimes
          coincide, break into measures according to a common unit of time, draw barlines
          where visually required 3. where barlines never coincide, encode as parts only
          d) mixed meter sig, e.g. 2/4 + 3/16 in the same measure (Read, p. 173-174):
          encode in common time base, e.g. 11/16, make meter invisible, display both meter
          sigs at the start of the measure e) fractional meter sig, e.g. 3.5/4 (Read, p.
          175-177): set meter.count=3.5 The beat count may be displayed as a fraction or
          as its decimal equivalent. Used by: model.scoredefLike Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="scoredef">
      <element name="scoredef">
        <ref name="attlist.scoredef"/>
        <ref name="content.scoredef"/>
      </element>
    </define>
    <div xml:id="content.scoredef">
      <xhtml:div>
        <xhtml:h1 class="name">content.scoredef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.scoredef">
        <zeroOrMore>
          <ref name="_DUMMYmodel.alignLike"/>
        </zeroOrMore>
        <optional>
          <ref name="_DUMMYmodel.chordtableLike"/>
        </optional>
        <optional>
          <ref name="_DUMMYmodel.symboltableLike"/>
        </optional>
        <optional>
          <ref name="model.keysigLike"/>
        </optional>
        <ref name="model.pgmetaLike.score"/>
        <choice>
          <optional>
            <ref name="model.staffgrpLike"/>
          </optional>
          <optional>
            <ref name="model.staffdefLike"/>
          </optional>
        </choice>
      </define>
    </div>
    <div xml:id="attlist.scoredef">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.scoredef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.scoredef" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.log.scoredef"/>
        <ref name="att.vis.scoredef"/>
        <ref name="att.ges.scoredef"/>
        <ref name="att.anl.scoredef"/>
      </define>
    </div>
  </div>

  <div xml:id="section">
    <xhtml:div>
      <xhtml:h1 class="name">section</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The section element contains actual music data. The linking attributes
          are available here so that this element can point to external media objects or
          to related internal elements, such as annotations. Used by: model.rdgPart
          section Module: meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="section">
      <element name="section">
        <ref name="attlist.section"/>
        <ref name="content.section"/>
      </element>
    </define>
    <div xml:id="content.section">
      <xhtml:div>
        <xhtml:h1 class="name">content.section</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.section">
        <zeroOrMore>
          <ref name="model.Incl"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.sectionPart"/>
          <zeroOrMore>
            <ref name="model.Incl"/>
          </zeroOrMore>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.section">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.section</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.section" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.typed"/>
        <ref name="att.link.common"/>
        <ref name="att.link.external"/>
        <ref name="att.link.internal"/>
        <ref name="att.log.section"/>
        <ref name="att.vis.section"/>
        <ref name="att.ges.section"/>
        <ref name="att.anl.section"/>
      </define>
    </div>
  </div>

  <div xml:id="staff">
    <xhtml:div>
      <xhtml:h1 class="name">staff</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Staff. The n attribute is a connection back to the appropriate staffdef
          element. If the n attribute is omitted, encoding order is presumed to match the
          staff order. Of course, if data is supplied for only a subset of staves, the n
          attribute must be supplied. Used by: model.staffLike Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="staff">
      <element name="staff">
        <ref name="attlist.staff"/>
        <ref name="content.staff"/>
      </element>
    </define>
    <div xml:id="content.staff">
      <xhtml:div>
        <xhtml:h1 class="name">content.staff</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.staff">
        <zeroOrMore>
          <ref name="model.Incl"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.staffPart"/>
          <zeroOrMore>
            <ref name="model.Incl"/>
          </zeroOrMore>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.staff">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.staff</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.staff" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.staff"/>
        <ref name="att.vis.staff"/>
        <ref name="att.ges.staff"/>
        <ref name="att.anl.staff"/>
      </define>
    </div>
  </div>

  <div xml:id="staffdef">
    <xhtml:div>
      <xhtml:h1 class="name">staffdef</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Container for staff meta-information. Used by: model.rdgPart Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="staffdef">
      <element name="staffdef">
        <ref name="attlist.staffdef"/>
        <ref name="content.staffdef"/>
      </element>
    </define>
    <div xml:id="content.staffdef">
      <xhtml:div>
        <xhtml:h1 class="name">content.staffdef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.staffdef">
        <zeroOrMore>
          <ref name="model.labelLike"/>
        </zeroOrMore>
        <optional>
          <ref name="model.keysigLike"/>
        </optional>
        <zeroOrMore>
          <choice>
            <ref name="model.instrdefLike"/>
            <ref name="model.layerdefLike"/>
            <ref name="model.staffdefPart.multiplyDefinable"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.staffdef">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.staffdef</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.staffdef" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.log.staffdef"/>
        <ref name="att.vis.staffdef"/>
        <ref name="att.ges.staffdef"/>
        <ref name="att.anl.staffdef"/>
      </define>
    </div>
  </div>

  <div xml:id="staffgrp">
    <xhtml:div>
      <xhtml:h1 class="name">staffgrp</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A group of staves. Bracketed staff groups may contain other bracketed or
          braced staff groups or single staves. See Read, p. 35-38, examples p. 434, 438.
          System is the more proper name for this concept (Read, p. 37-38). Split staffgrp
          into bracket and brace elements? Used by: staffgrpLike staffgrp Module:
          meiStructure</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="staffgrp">
      <element name="staffgrp">
        <ref name="attlist.staffgrp"/>
        <ref name="content.staffgrp"/>
      </element>
    </define>
    <div xml:id="content.staffgrp">
      <xhtml:div>
        <xhtml:h1 class="name">content.staffgrp</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.staffgrp">
        <zeroOrMore>
          <ref name="grpsym"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.labelLike"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="model.instrdefLike"/>
        </zeroOrMore>
        <oneOrMore>
          <choice>
            <ref name="model.staffgrpLike"/>
            <ref name="model.staffdefLike"/>
          </choice>
        </oneOrMore>
        <zeroOrMore>
          <ref name="grpsym"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.staffgrp">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.staffgrp</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.staffgrp" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.facsimile"/>
        <ref name="att.log.staffgrp"/>
        <ref name="att.vis.staffgrp"/>
        <ref name="att.ges.staffgrp"/>
        <ref name="att.anl.staffgrp"/>
      </define>
    </div>
  </div>

  <div xml:id="accessdesc">
    <xhtml:div>
      <xhtml:h1 class="name">accessdesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Description of the access that may be obtained. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.availabilityPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="accessdesc">
      <element name="accessdesc">
        <ref name="attlist.accessdesc"/>
        <ref name="content.accessdesc"/>
      </element>
    </define>
    <div xml:id="content.accessdesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.accessdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.accessdesc">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.accessdesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.accessdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.accessdesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="acqsource">
    <xhtml:div>
      <xhtml:h1 class="name">acqsource</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Source from which access to this item may be obtained, e.g. vendor,
          distributor, etc. The %model.textphraseLike.limited entity is used here in order
          to disallow the pb element. Used by: model.availabilityPart Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="acqsource">
      <element name="acqsource">
        <ref name="attlist.acqsource"/>
        <ref name="content.acqsource"/>
      </element>
    </define>
    <div xml:id="content.acqsource">
      <xhtml:div>
        <xhtml:h1 class="name">content.acqsource</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.acqsource">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.acqsource">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.acqsource</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.acqsource" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="altmeiid">
    <xhtml:div>
      <xhtml:h1 class="name">altmeiid</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The altmeiid element may contain a bibliographic identifier that does not
          fit within the meihead id attribute, for example because the id does not fit the
          definition of an XML id or because multiple identifiers are needed. Used by:
          meihead Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="altmeiid">
      <element name="altmeiid">
        <ref name="attlist.altmeiid"/>
        <ref name="content.altmeiid"/>
      </element>
    </define>
    <div xml:id="content.altmeiid">
      <xhtml:div>
        <xhtml:h1 class="name">content.altmeiid</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.altmeiid">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.altmeiid">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.altmeiid</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.altmeiid" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
        <ref name="att.typed"/>
      </define>
    </div>
  </div>

  <div xml:id="appinfo">
    <xhtml:div>
      <xhtml:h1 class="name">appinfo</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Appinfo (application information) groups information about applications
          which have acted upon the MEI file. This is not to be confused with applications
          which were used to create the MEI file. These are recorded in the projectdesc
          element. Used by: model.encodingPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="appinfo">
      <element name="appinfo">
        <ref name="attlist.appinfo"/>
        <ref name="content.appinfo"/>
      </element>
    </define>
    <div xml:id="content.appinfo">
      <xhtml:div>
        <xhtml:h1 class="name">content.appinfo</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.appinfo">
        <zeroOrMore>
          <ref name="application"/>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.appinfo">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.appinfo</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.appinfo" combine="interleave">
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="application">
    <xhtml:div>
      <xhtml:h1 class="name">application</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Application provides information about an application which has acted
          upon the document. Used by: appinfo Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="application">
      <element name="application">
        <ref name="attlist.application"/>
        <ref name="content.application"/>
      </element>
    </define>
    <div xml:id="content.application">
      <xhtml:div>
        <xhtml:h1 class="name">content.application</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.application">
        <oneOrMore>
          <ref name="name"/>
        </oneOrMore>
        <choice>
          <zeroOrMore>
            <ref name="_DUMMYmodel.ptrLike"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="model.pLike"/>
          </zeroOrMore>
        </choice>
      </define>
    </div>
    <div xml:id="attlist.application">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.application</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.application" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.date"/>
        <ref name="att.typed"/>
        <optional>
          <attribute name="version"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="availability">
    <xhtml:div>
      <xhtml:h1 class="name">availability</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Availability information/qualifications. Used by: model.pubstmtPart
          Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="availability">
      <element name="availability">
        <ref name="attlist.availability"/>
        <ref name="content.availability"/>
      </element>
    </define>
    <div xml:id="content.availability">
      <xhtml:div>
        <xhtml:h1 class="name">content.availability</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.availability">
        <ref name="model.availabilityPart"/>
      </define>
    </div>
    <div xml:id="attlist.availability">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.availability</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.availability" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="change">
    <xhtml:div>
      <xhtml:h1 class="name">change</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Individual change within the revision description. The resp attribute
          contains a pointer to an element containing info about the person/entity
          responsible for change. The date element is declared in the meiShared DTD. Used
          by: revisiondesc Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="change">
      <element name="change">
        <ref name="attlist.change"/>
        <ref name="content.change"/>
      </element>
    </define>
    <div xml:id="content.change">
      <xhtml:div>
        <xhtml:h1 class="name">content.change</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.change">
        <ref name="respstmt"/>
        <ref name="changedesc"/>
        <ref name="model.dateLike"/>
      </define>
    </div>
    <div xml:id="attlist.change">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.change</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.change" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="changedesc">
    <xhtml:div>
      <xhtml:h1 class="name">changedesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Description of a revision of the MEI file. Used by: change Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="changedesc">
      <element name="changedesc">
        <ref name="attlist.changedesc"/>
        <ref name="content.changedesc"/>
      </element>
    </define>
    <div xml:id="content.changedesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.changedesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.changedesc">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.changedesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.changedesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.changedesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="classcode">
    <xhtml:div>
      <xhtml:h1 class="name">classcode</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A classification code, i.e., LC subject or call number, or a thesaurus or
          ontology citation. The source of controlled-vocabulary terms used in the
          keywords element. Used by: classification Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="classcode">
      <element name="classcode">
        <ref name="attlist.classcode"/>
        <ref name="content.classcode"/>
      </element>
    </define>
    <div xml:id="content.classcode">
      <xhtml:div>
        <xhtml:h1 class="name">content.classcode</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.classcode">
        <text/>
      </define>
    </div>
    <div xml:id="attlist.classcode">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.classcode</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.classcode" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="classification">
    <xhtml:div>
      <xhtml:h1 class="name">classification</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The classification element groups information which describes the nature
          or topic of a musical work in terms of a standard classification scheme,
          thesaurus, etc. Used by: model.profiledescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="classification">
      <element name="classification">
        <ref name="attlist.classification"/>
        <ref name="content.classification"/>
      </element>
    </define>
    <div xml:id="content.classification">
      <xhtml:div>
        <xhtml:h1 class="name">content.classification</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.classification">
        <oneOrMore>
          <choice>
            <ref name="classcode"/>
            <ref name="keywords"/>
          </choice>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.classification">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.classification</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.classification" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="condition">
    <xhtml:div>
      <xhtml:h1 class="name">condition</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The physical condition of an item, particularly any variances between the
          physical makeup of the item and that of other copies of the same item (e.g.,
          missing pages, plates, etc.). Condition may reflect other aspects of the
          physical condition of the item as well (e.g., brittleness, faded images, etc.).
          The %model.textphraseLike.limited entity is used here in order to disallow the
          pb element. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="condition">
      <element name="condition">
        <ref name="attlist.condition"/>
        <ref name="content.condition"/>
      </element>
    </define>
    <div xml:id="content.condition">
      <xhtml:div>
        <xhtml:h1 class="name">content.condition</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.condition">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.condition">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.condition</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.condition" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="correction">
    <xhtml:div>
      <xhtml:h1 class="name">correction</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>States how and under what circumstances corrections have been made in the
          music/text. Used by: model.editorialdeclPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="correction">
      <element name="correction">
        <ref name="attlist.correction"/>
        <ref name="content.correction"/>
      </element>
    </define>
    <div xml:id="content.correction">
      <xhtml:div>
        <xhtml:h1 class="name">content.correction</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.correction">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.correction">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.correction</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.correction" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="method">
            <choice>
              <value>silent</value>
              <value>tags</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="status">
            <choice>
              <value>high</value>
              <value>medium</value>
              <value>low</value>
              <value>unknown</value>
            </choice>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="creation">
    <xhtml:div>
      <xhtml:h1 class="name">creation</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Non-bibliographic creation details for the work being encoded, in
          narrative form. The model.textcomponent class elements are declared in the
          meiShared DTD. Used by: model.profiledescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="creation">
      <element name="creation">
        <ref name="attlist.creation"/>
        <ref name="content.creation"/>
      </element>
    </define>
    <div xml:id="content.creation">
      <xhtml:div>
        <xhtml:h1 class="name">content.creation</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.creation">
        <oneOrMore>
          <ref name="model.textcomponentLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.creation">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.creation</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.creation" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="dimensions">
    <xhtml:div>
      <xhtml:h1 class="name">dimensions</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Physical dimensions of a bibliographic source. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. There are no height and width sub-elements; however, the num element
          may be used. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="dimensions">
      <element name="dimensions">
        <ref name="attlist.dimensions"/>
        <ref name="content.dimensions"/>
      </element>
    </define>
    <div xml:id="content.dimensions">
      <xhtml:div>
        <xhtml:h1 class="name">content.dimensions</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.dimensions">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.dimensions">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.dimensions</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.dimensions" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="units"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="editionstmt">
    <xhtml:div>
      <xhtml:h1 class="name">editionstmt</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Container for meta-data pertaining to the edition. Used by: filedesc
          source Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="editionstmt">
      <element name="editionstmt">
        <ref name="attlist.editionstmt"/>
        <ref name="content.editionstmt"/>
      </element>
    </define>
    <div xml:id="content.editionstmt">
      <xhtml:div>
        <xhtml:h1 class="name">content.editionstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.editionstmt">
        <oneOrMore>
          <ref name="edition"/>
          <zeroOrMore>
            <ref name="respstmt"/>
          </zeroOrMore>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.editionstmt">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.editionstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.editionstmt" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="editorialdecl">
    <xhtml:div>
      <xhtml:h1 class="name">editorialdecl</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Editorialdecl should be used to provide details of editorial principles
          and practices applied during the encoding of musical text. Used by:
          model.encodingPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="editorialdecl">
      <element name="editorialdecl">
        <ref name="attlist.editorialdecl"/>
        <ref name="content.editorialdecl"/>
      </element>
    </define>
    <div xml:id="content.editorialdecl">
      <xhtml:div>
        <xhtml:h1 class="name">content.editorialdecl</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.editorialdecl">
        <choice>
          <oneOrMore>
            <ref name="model.pLike"/>
          </oneOrMore>
          <group>
            <oneOrMore>
              <ref name="model.editorialdeclPart"/>
            </oneOrMore>
            <zeroOrMore>
              <ref name="model.pLike"/>
            </zeroOrMore>
          </group>
        </choice>
      </define>
    </div>
    <div xml:id="attlist.editorialdecl">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.editorialdecl</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.editorialdecl" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="encodingdesc">
    <xhtml:div>
      <xhtml:h1 class="name">encodingdesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Documents the relationship between an electronic file and the source or
          sources from which it was derived as well as applications used in the
          encoding/editing process. Used by: meihead Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="encodingdesc">
      <element name="encodingdesc">
        <ref name="attlist.encodingdesc"/>
        <ref name="content.encodingdesc"/>
      </element>
    </define>
    <div xml:id="content.encodingdesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.encodingdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.encodingdesc">
        <ref name="model.encodingPart"/>
      </define>
    </div>
    <div xml:id="attlist.encodingdesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.encodingdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.encodingdesc" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="exhibithist">
    <xhtml:div>
      <xhtml:h1 class="name">exhibithist</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Exhibition history is a record of public exhibitions, including dates,
          venues, etc. The %model.textphraseLike.limited entity is used here in order to
          disallow the pb element. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="exhibithist">
      <element name="exhibithist">
        <ref name="attlist.exhibithist"/>
        <ref name="content.exhibithist"/>
      </element>
    </define>
    <div xml:id="content.exhibithist">
      <xhtml:div>
        <xhtml:h1 class="name">content.exhibithist</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.exhibithist">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.exhibithist">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.exhibithist</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.exhibithist" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="extent">
    <xhtml:div>
      <xhtml:h1 class="name">extent</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The extent element is used to express size in terms other than physical
          dimensions, such as number of pages, number of records in file, number of bytes,
          performance duration for music, audio recordings and visual projections, etc.
          For physical dimensions use the dimensions element. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.physdescPart filedesc Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="extent">
      <element name="extent">
        <ref name="attlist.extent"/>
        <ref name="content.extent"/>
      </element>
    </define>
    <div xml:id="content.extent">
      <xhtml:div>
        <xhtml:h1 class="name">content.extent</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.extent">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.extent">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.extent</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.extent" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="units"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="filedesc">
    <xhtml:div>
      <xhtml:h1 class="name">filedesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Filedesc contains a full bibliographic description of the MEI file.
          Extent in this context is file size. Used by: meihead Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="filedesc">
      <element name="filedesc">
        <ref name="attlist.filedesc"/>
        <ref name="content.filedesc"/>
      </element>
    </define>
    <div xml:id="content.filedesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.filedesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.filedesc">
        <ref name="titlestmt"/>
        <optional>
          <ref name="editionstmt"/>
        </optional>
        <optional>
          <ref name="extent"/>
        </optional>
        <optional>
          <ref name="fingerprint"/>
        </optional>
        <ref name="pubstmt"/>
        <optional>
          <ref name="seriesstmt"/>
        </optional>
        <optional>
          <ref name="notesstmt"/>
        </optional>
        <optional>
          <ref name="sourcedesc"/>
        </optional>
      </define>
    </div>
    <div xml:id="attlist.filedesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.filedesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.filedesc" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="fingerprint">
    <xhtml:div>
      <xhtml:h1 class="name">fingerprint</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Traditionally, an identifier constructed by combining groups of
          characters transcribed from specified pages of a printed item. For an electronic
          item, however, the fingerprint should be a checksum. The checksum makes it
          possible to signal differences between copies of the item. Used by: filedesc
          Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="fingerprint">
      <element name="fingerprint">
        <ref name="attlist.fingerprint"/>
        <ref name="content.fingerprint"/>
      </element>
    </define>
    <div xml:id="content.fingerprint">
      <xhtml:div>
        <xhtml:h1 class="name">content.fingerprint</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.fingerprint">
        <text/>
      </define>
    </div>
    <div xml:id="attlist.fingerprint">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.fingerprint</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.fingerprint" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.lang"/>
      </define>
    </div>
  </div>

  <div xml:id="hand">
    <xhtml:div>
      <xhtml:h1 class="name">hand</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The hand element is used to define each distinct scribe or handwriting
          style. The initial attribute indicates whether this is the first or main scribe
          of the document. The medium attribute describes the writing medium, e.g.,
          'pencil', or the tint or type of ink, e.g. 'brown'. The resp attribute contains
          an ID reference to an element containing the name of the editor or transcriber
          responsible for identifying the hand. The characteristics of the hand,
          particularly those related to the quality of the writing, such as 'shaky',
          'thick', etc. may be described within the content of the hand element. Used by:
          handlist Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="hand">
      <element name="hand">
        <ref name="attlist.hand"/>
        <ref name="content.hand"/>
      </element>
    </define>
    <div xml:id="content.hand">
      <xhtml:div>
        <xhtml:h1 class="name">content.hand</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.hand">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.hand">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.hand</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.hand" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="initial">
            <ref name="data.BOOLEAN"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="medium"/>
        </optional>
        <optional>
          <attribute name="resp">
            <data type="IDREF"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="handlist">
    <xhtml:div>
      <xhtml:h1 class="name">handlist</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The handlist element contains a series of &lt;hand&gt; elements
          listing the different hands of the source. Used by: model.physdescPart Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="handlist">
      <element name="handlist">
        <ref name="attlist.handlist"/>
        <ref name="content.handlist"/>
      </element>
    </define>
    <div xml:id="content.handlist">
      <xhtml:div>
        <xhtml:h1 class="name">content.handlist</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.handlist">
        <oneOrMore>
          <ref name="hand"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.handlist">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.handlist</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.handlist" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="inscription">
    <xhtml:div>
      <xhtml:h1 class="name">inscription</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>An inscription added to an item, such as a bookplate, a note designating
          the item as a gift, and/or the author's signature. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="inscription">
      <element name="inscription">
        <ref name="attlist.inscription"/>
        <ref name="content.inscription"/>
      </element>
    </define>
    <div xml:id="content.inscription">
      <xhtml:div>
        <xhtml:h1 class="name">content.inscription</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.inscription">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
            <ref name="_DUMMYmodel.editLike"/>
            <ref name="_DUMMYmodel.transcriptionLike"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.inscription">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.inscription</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.inscription" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="interpretation">
    <xhtml:div>
      <xhtml:h1 class="name">interpretation</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Describes the scope of any analytic or interpretive information added to
          the musical text in addition to the transcription. Used by:
          model.editorialdeclPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="interpretation">
      <element name="interpretation">
        <ref name="attlist.interpretation"/>
        <ref name="content.interpretation"/>
      </element>
    </define>
    <div xml:id="content.interpretation">
      <xhtml:div>
        <xhtml:h1 class="name">content.interpretation</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.interpretation">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.interpretation">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.interpretation</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.interpretation" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="keywords">
    <xhtml:div>
      <xhtml:h1 class="name">keywords</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Collection of keywords or text phrases which describe the work. Used by:
          classification Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="keywords">
      <element name="keywords">
        <ref name="attlist.keywords"/>
        <ref name="content.keywords"/>
      </element>
    </define>
    <div xml:id="content.keywords">
      <xhtml:div>
        <xhtml:h1 class="name">content.keywords</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.keywords">
        <oneOrMore>
          <ref name="term"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.keywords">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.keywords</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.keywords" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="language">
    <xhtml:div>
      <xhtml:h1 class="name">language</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The name of a language. The language of text elements may be related to
          this element via its id, which may take the form of a code, drawn from a coded
          list, such as RFC 3066 or iso639-2b. The authority attribute should contain the
          name of the list from which a controlled value is taken. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: langusage Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="language">
      <element name="language">
        <ref name="attlist.language"/>
        <ref name="content.language"/>
      </element>
    </define>
    <div xml:id="content.language">
      <xhtml:div>
        <xhtml:h1 class="name">content.language</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.language">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.language">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.language</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.language" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="authority"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="langusage">
    <xhtml:div>
      <xhtml:h1 class="name">langusage</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Langusage describes the languages, sublanguages, dialects, etc.,
          represented within the encoded work. Used by: model.profiledescPart Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="langusage">
      <element name="langusage">
        <ref name="attlist.langusage"/>
        <ref name="content.langusage"/>
      </element>
    </define>
    <div xml:id="content.langusage">
      <xhtml:div>
        <xhtml:h1 class="name">content.langusage</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.langusage">
        <oneOrMore>
          <ref name="language"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.langusage">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.langusage</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.langusage" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="normalization">
    <xhtml:div>
      <xhtml:h1 class="name">normalization</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Indicates the extent of normalization or regularization of the original
          source carried out in converting it to electronic form. Used by:
          model.editorialdeclPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="normalization">
      <element name="normalization">
        <ref name="attlist.normalization"/>
        <ref name="content.normalization"/>
      </element>
    </define>
    <div xml:id="content.normalization">
      <xhtml:div>
        <xhtml:h1 class="name">content.normalization</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.normalization">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.normalization">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.normalization</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.normalization" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="method">
            <choice>
              <value>silent</value>
              <value>tags</value>
            </choice>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="notesstmt">
    <xhtml:div>
      <xhtml:h1 class="name">notesstmt</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Collects together any bibliographic notes providing information
          additional to that recorded in other parts of the bibliographic description.
          Used by: filedesc Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="notesstmt">
      <element name="notesstmt">
        <ref name="attlist.notesstmt"/>
        <ref name="content.notesstmt"/>
      </element>
    </define>
    <div xml:id="content.notesstmt">
      <xhtml:div>
        <xhtml:h1 class="name">content.notesstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.notesstmt">
        <oneOrMore>
          <ref name="model.annotLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.notesstmt">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.notesstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.notesstmt" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="physdesc">
    <xhtml:div>
      <xhtml:h1 class="name">physdesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Physical description of a source for the electronic edition. Dedicatory
          text and title page features may be encoded here when they are not transcribed
          as part of the front or back matter; i.e., when they are considered to be
          meta-data. Used by: source Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="physdesc">
      <element name="physdesc">
        <ref name="attlist.physdesc"/>
        <ref name="content.physdesc"/>
      </element>
    </define>
    <div xml:id="content.physdesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.physdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.physdesc">
        <oneOrMore>
          <ref name="model.physdescPart"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.physdesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.physdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.physdesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="physloc">
    <xhtml:div>
      <xhtml:h1 class="name">physloc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Location of the source within a repository, e.g., shelf mark or other
          locational information. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="physloc">
      <element name="physloc">
        <ref name="attlist.physloc"/>
        <ref name="content.physloc"/>
      </element>
    </define>
    <div xml:id="content.physloc">
      <xhtml:div>
        <xhtml:h1 class="name">content.physloc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.physloc">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.physloc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.physloc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.physloc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="physmedium">
    <xhtml:div>
      <xhtml:h1 class="name">physmedium</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Physmedium is used to record the physical materials used in the source,
          such as ink and paper. The authority attribute should contain the name of the
          list from which a controlled value is taken. The %model.textphraseLike.limited
          entity is used here in order to disallow the pb element. Used by:
          model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="physmedium">
      <element name="physmedium">
        <ref name="attlist.physmedium"/>
        <ref name="content.physmedium"/>
      </element>
    </define>
    <div xml:id="content.physmedium">
      <xhtml:div>
        <xhtml:h1 class="name">content.physmedium</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.physmedium">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.physmedium">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.physmedium</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.physmedium" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="authority"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="price">
    <xhtml:div>
      <xhtml:h1 class="name">price</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The cost of access. The %model.textphraseLike.limited entity is used here
          in order to disallow the pb element. Used by: model.availabilityPart Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="price">
      <element name="price">
        <ref name="attlist.price"/>
        <ref name="content.price"/>
      </element>
    </define>
    <div xml:id="content.price">
      <xhtml:div>
        <xhtml:h1 class="name">content.price</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.price">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.price">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.price</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.price" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="units"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="profiledesc">
    <xhtml:div>
      <xhtml:h1 class="name">profiledesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Profiledesc provides a detailed description of the non- bibliographic
          aspects of the creation of a work, specifically the languages and sublanguages
          used, the situation in which it was produced, e.g. the participants, setting,
          reception history, etc. Used by: meihead Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="profiledesc">
      <element name="profiledesc">
        <ref name="attlist.profiledesc"/>
        <ref name="content.profiledesc"/>
      </element>
    </define>
    <div xml:id="content.profiledesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.profiledesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.profiledesc">
        <ref name="model.profiledescPart"/>
      </define>
    </div>
    <div xml:id="attlist.profiledesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.profiledesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.profiledesc" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="projectdesc">
    <xhtml:div>
      <xhtml:h1 class="name">projectdesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Project-level meta-data describing the aim or purpose for which the
          electronic file was encoded, funding agencies, etc. together with any other
          relevant information concerning the process by which it was assembled or
          collected. Used by: model.encodingPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="projectdesc">
      <element name="projectdesc">
        <ref name="attlist.projectdesc"/>
        <ref name="content.projectdesc"/>
      </element>
    </define>
    <div xml:id="content.projectdesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.projectdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.projectdesc">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.projectdesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.projectdesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.projectdesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="provenance">
    <xhtml:div>
      <xhtml:h1 class="name">provenance</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The record of ownership or custodianship of an item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="provenance">
      <element name="provenance">
        <ref name="attlist.provenance"/>
        <ref name="content.provenance"/>
      </element>
    </define>
    <div xml:id="content.provenance">
      <xhtml:div>
        <xhtml:h1 class="name">content.provenance</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.provenance">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="_DUMMYmodel.listLike"/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.provenance">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.provenance</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.provenance" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="pubstmt">
    <xhtml:div>
      <xhtml:h1 class="name">pubstmt</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Publication meta-data. Used by: filedesc source Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="pubstmt">
      <element name="pubstmt">
        <ref name="attlist.pubstmt"/>
        <ref name="content.pubstmt"/>
      </element>
    </define>
    <div xml:id="content.pubstmt">
      <xhtml:div>
        <xhtml:h1 class="name">content.pubstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.pubstmt">
        <choice>
          <optional>
            <ref name="unpub"/>
          </optional>
          <zeroOrMore>
            <ref name="model.pubstmtPart"/>
          </zeroOrMore>
        </choice>
      </define>
    </div>
    <div xml:id="attlist.pubstmt">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.pubstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.pubstmt" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="resp">
    <xhtml:div>
      <xhtml:h1 class="name">resp</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Contains a phrase describing the nature of a person's intellectual
          responsibility. The authority attribute should contain the name of the list from
          which a controlled value is taken. Used by: respStmt Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="resp">
      <element name="resp">
        <ref name="attlist.resp"/>
        <ref name="content.resp"/>
      </element>
    </define>
    <div xml:id="content.resp">
      <xhtml:div>
        <xhtml:h1 class="name">content.resp</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.resp">
        <text/>
      </define>
    </div>
    <div xml:id="attlist.resp">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.resp</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.resp" combine="interleave">
        <optional>
          <attribute name="authority"/>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="respstmt">
    <xhtml:div>
      <xhtml:h1 class="name">respstmt</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A statement of responsibility names one or more individuals, groups, or
          in rare cases, mechanical processes, responsible for creation or realization of
          the intellectual or artistic content. Used by: model.pubstmtPart model.respLike
          titlestmt editionstmt seriesstmt Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="respstmt">
      <element name="respstmt">
        <ref name="attlist.respstmt"/>
        <ref name="content.respstmt"/>
      </element>
    </define>
    <div xml:id="content.respstmt">
      <xhtml:div>
        <xhtml:h1 class="name">content.respstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.respstmt">
        <zeroOrMore>
          <choice>
            <ref name="resp"/>
            <ref name="model.nameLike"/>
            <ref name="_DUMMYmodel.nameLike.agent"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.respstmt">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.respstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.respstmt" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="revisiondesc">
    <xhtml:div>
      <xhtml:h1 class="name">revisiondesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The revision history for an MEI file. Used by: meihead Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="revisiondesc">
      <element name="revisiondesc">
        <ref name="attlist.revisiondesc"/>
        <ref name="content.revisiondesc"/>
      </element>
    </define>
    <div xml:id="content.revisiondesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.revisiondesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.revisiondesc">
        <oneOrMore>
          <ref name="change"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.revisiondesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.revisiondesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.revisiondesc" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="samplingdecl">
    <xhtml:div>
      <xhtml:h1 class="name">samplingdecl</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Contains a prose description of the rationale and methods used in
          sampling texts in the creation of a corpus or collection. Used by:
          model.encodingPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="samplingdecl">
      <element name="samplingdecl">
        <ref name="attlist.samplingdecl"/>
        <ref name="content.samplingdecl"/>
      </element>
    </define>
    <div xml:id="content.samplingdecl">
      <xhtml:div>
        <xhtml:h1 class="name">content.samplingdecl</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.samplingdecl">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.samplingdecl">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.samplingdecl</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.samplingdecl" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="segmentation">
    <xhtml:div>
      <xhtml:h1 class="name">segmentation</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Describes the principles according to which the musical text has been
          segmented, for example into movements, sections, etc. Used by:
          model.editorialdeclPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="segmentation">
      <element name="segmentation">
        <ref name="attlist.segmentation"/>
        <ref name="content.segmentation"/>
      </element>
    </define>
    <div xml:id="content.segmentation">
      <xhtml:div>
        <xhtml:h1 class="name">content.segmentation</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.segmentation">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.segmentation">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.segmentation</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.segmentation" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="seriesstmt">
    <xhtml:div>
      <xhtml:h1 class="name">seriesstmt</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Groups information about the series, if any, to which a publication
          belongs. In this context, the title element records the series title, the
          respStmt element records the person or group responsible for the series, and the
          identifier element contains a series identifier. The list element should be used
          when it is necessary to enumerate the contents of the series. The seriesstmt is
          provided within seriesstmt for the description of a sub-series. Used by:
          filedesc source seriesstmt Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="seriesstmt">
      <element name="seriesstmt">
        <ref name="attlist.seriesstmt"/>
        <ref name="content.seriesstmt"/>
      </element>
    </define>
    <div xml:id="content.seriesstmt">
      <xhtml:div>
        <xhtml:h1 class="name">content.seriesstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.seriesstmt">
        <oneOrMore>
          <ref name="title"/>
        </oneOrMore>
        <optional>
          <ref name="respstmt"/>
        </optional>
        <zeroOrMore>
          <ref name="identifier"/>
        </zeroOrMore>
        <choice>
          <ref name="_DUMMYmodel.listLike"/>
          <zeroOrMore>
            <ref name="seriesstmt"/>
          </zeroOrMore>
        </choice>
      </define>
    </div>
    <div xml:id="attlist.seriesstmt">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.seriesstmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.seriesstmt" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="source">
    <xhtml:div>
      <xhtml:h1 class="name">source</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Source contains a bibliographic description of a source for the
          electronic file. When there are multiple sources, the data attribute may be used
          to link the description to a particular data element, i.e., mdiv, part, section,
          ending, reading, measure, staff or layer. Within source, the extent element may
          be used when only a portion of the source, pages 1-3 for example, are encoded.
          If extent is absent, then the entire source is presumed to have been encoded.
          Multiple physdesc sub-elements may be used to describe the physically separate
          parts of a single source. Used by: sourcedesc Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="source">
      <element name="source">
        <ref name="attlist.source"/>
        <ref name="content.source"/>
      </element>
    </define>
    <div xml:id="content.source">
      <xhtml:div>
        <xhtml:h1 class="name">content.source</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.source">
        <zeroOrMore>
          <ref name="identifier"/>
        </zeroOrMore>
        <optional>
          <ref name="titlestmt"/>
        </optional>
        <optional>
          <ref name="editionstmt"/>
        </optional>
        <ref name="pubstmt"/>
        <optional>
          <ref name="physdesc"/>
        </optional>
        <optional>
          <ref name="seriesstmt"/>
        </optional>
        <optional>
          <ref name="notesstmt"/>
        </optional>
        <optional>
          <ref name="langusage"/>
        </optional>
        <optional>
          <ref name="classification"/>
        </optional>
      </define>
    </div>
    <div xml:id="attlist.source">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.source</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.source" combine="interleave">
        <optional>
          <attribute name="data">
            <data type="IDREFS"/>
          </attribute>
        </optional>
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="sourcedesc">
    <xhtml:div>
      <xhtml:h1 class="name">sourcedesc</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Sourcedesc is a container for the descriptions of the source(s) used in
          the creation of the electronic file. The sourcedesc element is required where
          the MEI file is a transcription of existing music. In the case where the data is
          originally created in MEI form, the sourcedesc element is not required. Used by:
          meihead Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="sourcedesc">
      <element name="sourcedesc">
        <ref name="attlist.sourcedesc"/>
        <ref name="content.sourcedesc"/>
      </element>
    </define>
    <div xml:id="content.sourcedesc">
      <xhtml:div>
        <xhtml:h1 class="name">content.sourcedesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.sourcedesc">
        <oneOrMore>
          <ref name="source"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.sourcedesc">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.sourcedesc</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.sourcedesc" combine="interleave">
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="stdvals">
    <xhtml:div>
      <xhtml:h1 class="name">stdvals</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Specifies the format used when standardized date or number values are
          supplied. Used by: model.editorialdeclPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="stdvals">
      <element name="stdvals">
        <ref name="attlist.stdvals"/>
        <ref name="content.stdvals"/>
      </element>
    </define>
    <div xml:id="content.stdvals">
      <xhtml:div>
        <xhtml:h1 class="name">content.stdvals</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.stdvals">
        <oneOrMore>
          <ref name="model.pLike"/>
        </oneOrMore>
      </define>
    </div>
    <div xml:id="attlist.stdvals">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.stdvals</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.stdvals" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="sysreq">
    <xhtml:div>
      <xhtml:h1 class="name">sysreq</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>System requirements for using the electronic item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.availabilityPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="sysreq">
      <element name="sysreq">
        <ref name="attlist.sysreq"/>
        <ref name="content.sysreq"/>
      </element>
    </define>
    <div xml:id="content.sysreq">
      <xhtml:div>
        <xhtml:h1 class="name">content.sysreq</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.sysreq">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.sysreq">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.sysreq</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.sysreq" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="term">
    <xhtml:div>
      <xhtml:h1 class="name">term</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Individual keywords or phrases which describe the work. The classcode
          attribute may be used to link the term to a terminological source given in a
          classcode element. The %model.textphraseLike.limited entity is used here in
          order to disallow the pb element. The term element may include other term
          elements in order to allow the creation of coordinated terms; i.e., terms
          created from a combination of other, independent terms. Used by: keywords
          Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="term">
      <element name="term">
        <ref name="attlist.term"/>
        <ref name="content.term"/>
      </element>
    </define>
    <div xml:id="content.term">
      <xhtml:div>
        <xhtml:h1 class="name">content.term</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.term">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="term"/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.term">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.term</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.term" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
        <optional>
          <attribute name="classcode">
            <data type="IDREF"/>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="titlestmt">
    <xhtml:div>
      <xhtml:h1 class="name">titlestmt</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Container for title and responsibility meta-data. Used by: filedesc
          source Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="titlestmt">
      <element name="titlestmt">
        <ref name="attlist.titlestmt"/>
        <ref name="content.titlestmt"/>
      </element>
    </define>
    <div xml:id="content.titlestmt">
      <xhtml:div>
        <xhtml:h1 class="name">content.titlestmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.titlestmt">
        <oneOrMore>
          <ref name="title"/>
        </oneOrMore>
        <optional>
          <ref name="respstmt"/>
        </optional>
      </define>
    </div>
    <div xml:id="attlist.titlestmt">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.titlestmt</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.titlestmt" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
      </define>
    </div>
  </div>

  <div xml:id="treatmenthist">
    <xhtml:div>
      <xhtml:h1 class="name">treatmenthist</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>A record of the treatment the item has undergone (e.g., deacidification,
          restoration, etc.) Treatment history may also comprise details of the treatment
          process (e.g., chemical solutions used, techniques applied, etc.), the date the
          treatment was applied, etc. The %model.textphraseLike.limited entity is used
          here in order to disallow the pb element. Used by: model.physdescPart Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="treatmenthist">
      <element name="treatmenthist">
        <ref name="attlist.treatmenthist"/>
        <ref name="content.treatmenthist"/>
      </element>
    </define>
    <div xml:id="content.treatmenthist">
      <xhtml:div>
        <xhtml:h1 class="name">content.treatmenthist</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.treatmenthist">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.treatmenthist">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.treatmenthist</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.treatmenthist" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="treatmentsched">
    <xhtml:div>
      <xhtml:h1 class="name">treatmentsched</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Scheduled treatment, e.g. deacidification, restoration, etc., for an
          item. The %model.textphraseLike.limited entity is used here in order to disallow
          the pb element. Used by: model.physdescPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="treatmentsched">
      <element name="treatmentsched">
        <ref name="attlist.treatmentsched"/>
        <ref name="content.treatmentsched"/>
      </element>
    </define>
    <div xml:id="content.treatmentsched">
      <xhtml:div>
        <xhtml:h1 class="name">content.treatmentsched</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.treatmentsched">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.treatmentsched">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.treatmentsched</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.treatmentsched" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="unpub">
    <xhtml:div>
      <xhtml:h1 class="name">unpub</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The unpub element should be used to explicitly indicate that a
          bibliographic source is unpublished. Used by: pubstmt Module:
          meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="unpub">
      <element name="unpub">
        <ref name="attlist.unpub"/>
        <ref name="content.unpub"/>
      </element>
    </define>
    <div xml:id="content.unpub">
      <xhtml:div>
        <xhtml:h1 class="name">content.unpub</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.unpub">
        <empty/>
      </define>
    </div>
    <div xml:id="attlist.unpub">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.unpub</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.unpub" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="userestrict">
    <xhtml:div>
      <xhtml:h1 class="name">userestrict</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>Usage restrictions, e.g., copyright statement in the filedesc, or
          (re-)publication rights in the source element. The %model.textphraseLike.limited
          entity is used here in order to disallow the pb element. Used by:
          model.availabilityPart Module: meiHeader</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="userestrict">
      <element name="userestrict">
        <ref name="attlist.userestrict"/>
        <ref name="content.userestrict"/>
      </element>
    </define>
    <div xml:id="content.userestrict">
      <xhtml:div>
        <xhtml:h1 class="name">content.userestrict</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="content.userestrict">
        <zeroOrMore>
          <choice>
            <text/>
            <ref name="model.textphraseLike.limited"/>
          </choice>
        </zeroOrMore>
      </define>
    </div>
    <div xml:id="attlist.userestrict">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.userestrict</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.userestrict" combine="interleave">
        <ref name="att.common"/>
        <ref name="att.bibl"/>
      </define>
    </div>
  </div>

  <div xml:id="mei">
    <xhtml:div>
      <xhtml:h1 class="name">mei</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The names of the potential document elements, i.e., mei, meicorpus,
          meihead, and music, should not be changed in order to assure an absolute minimum
          level of MEI compliance. The version attribute contains the version of the DTD
          used by the instance. The document element for a single document contains a
          header and data.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="mei">
      <element name="mei">
        <ref name="attlist.mei"/>
        <ref name="meihead"/>
        <ref name="music"/>
      </element>
    </define>
    <div xml:id="attlist.mei">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.mei</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.mei" combine="interleave">
        <optional>
          <attribute name="id">
            <data type="ID"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="version" a:defaultValue="1.9b">
            <value type="NMTOKEN">1.9b</value>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="meicorpus">
    <xhtml:div>
      <xhtml:h1 class="name">meicorpus</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The document element for a group of documents, each with its own complete
          header, contains a header for the group, and one or more mei elements.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="meicorpus">
      <element name="meicorpus">
        <ref name="attlist.meicorpus"/>
        <ref name="meihead"/>
        <oneOrMore>
          <ref name="mei"/>
        </oneOrMore>
      </element>
    </define>
    <div xml:id="attlist.meicorpus">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.meicorpus</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.meicorpus" combine="interleave">
        <optional>
          <attribute name="id">
            <data type="ID"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="version" a:defaultValue="1.9b">
            <value type="NMTOKEN">1.9b</value>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="meihead">
    <xhtml:div>
      <xhtml:h1 class="name">meihead</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>The meihead element contains general information about the encoded
          file.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="meihead">
      <element name="meihead">
        <ref name="attlist.meihead"/>
        <zeroOrMore>
          <ref name="altmeiid"/>
        </zeroOrMore>
        <ref name="filedesc"/>
        <ref name="model.headerPart"/>
        <optional>
          <ref name="revisiondesc"/>
        </optional>
      </element>
    </define>
    <div xml:id="attlist.meihead">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.meihead</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.meihead" combine="interleave">
        <ref name="att.bibl"/>
        <ref name="att.common"/>
        <ref name="att.lang"/>
        <optional>
          <attribute name="type">
            <choice>
              <value>music</value>
              <value>corpus</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="version" a:defaultValue="1.9b">
            <value type="NMTOKEN">1.9b</value>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="music">
    <xhtml:div>
      <xhtml:h1 class="name">music</xhtml:h1>
      <xhtml:div class="desc">
        <xhtml:p>This element is a container for everything else in the document besides
          the header. The front and back elements are declared in the meiText
          DTD.</xhtml:p>
      </xhtml:div>
    </xhtml:div>
    <define name="music">
      <element name="music">
        <ref name="attlist.music"/>
        <zeroOrMore>
          <ref name="_DUMMYmodel.facsimile"/>
        </zeroOrMore>
        <ref name="model.musicPart"/>
      </element>
    </define>
    <div xml:id="attlist.music">
      <xhtml:div>
        <xhtml:h1 class="name">attlist.music</xhtml:h1>
        <xhtml:div class="desc"/>
      </xhtml:div>
      <define name="attlist.music" combine="interleave">
        <ref name="att.common"/>
        <optional>
          <attribute name="version" a:defaultValue="1.9b">
            <value type="NMTOKEN">1.9b</value>
          </attribute>
        </optional>
      </define>
    </div>
  </div>

  <div xml:id="_DUMMYmodel.alignLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.alignLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.alignLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.apparatusLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.apparatusLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.apparatusLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.backLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.backLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.backLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.chordtableLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.chordtableLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.chordtableLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.controleventLike.cmn">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.controleventLike.cmn</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.controleventLike.cmn" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.controleventLike.mensural">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.controleventLike.mensural</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.controleventLike.mensural" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.controleventLike.mensural-cmn">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.controleventLike.mensural-cmn</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.controleventLike.mensural-cmn" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.controleventLike.neume">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.controleventLike.neume</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.controleventLike.neume" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.controleventLike.neume-cmn">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.controleventLike.neume-cmn</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.controleventLike.neume-cmn" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.controleventLike.neume-mensural">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.controleventLike.neume-mensural</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.controleventLike.neume-mensural" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.divLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.divLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.divLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.editLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.editLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.editLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.eventLike.cmn">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.eventLike.cmn</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.eventLike.cmn" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.eventLike.cmn.measureFilling">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.eventLike.cmn.measureFilling</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.eventLike.cmn.measureFilling" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.eventLike.mensural">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.eventLike.mensural</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.eventLike.mensural" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.eventLike.neume">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.eventLike.neume</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.eventLike.neume" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.eventLike.neume-cmn">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.eventLike.neume-cmn</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.eventLike.neume-cmn" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.facsimile">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.facsimile</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.facsimile" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.figureLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.figureLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.figureLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.frontLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.frontLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.frontLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.frontPart">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.frontPart</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.frontPart" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.graphicprimitiveLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.graphicprimitiveLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.graphicprimitiveLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.harmLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.harmLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.harmLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.lgLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.lgLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.lgLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.listLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.listLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.listLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.locrefLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.locrefLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.locrefLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.lyricsLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.lyricsLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.lyricsLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.measureLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.measureLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.measureLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.midiLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.midiLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.midiLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.nameLike.agent">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.nameLike.agent</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.nameLike.agent" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.nameLike.geogname">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.nameLike.geogname</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.nameLike.geogname" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.nameLike.label">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.nameLike.label</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.nameLike.label" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.ptrLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.ptrLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.ptrLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.quoteLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.quoteLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.quoteLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.sylLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.sylLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.sylLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.syllableLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.syllableLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.syllableLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.symboltableLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.symboltableLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.symboltableLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.tableLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.tableLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.tableLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.transcriptionLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.transcriptionLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.transcriptionLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <div xml:id="_DUMMYmodel.verseLike">
    <xhtml:div>
      <xhtml:h1 class="name">_DUMMYmodel.verseLike</xhtml:h1>
      <xhtml:div class="desc"/>
    </xhtml:div>
    <define name="_DUMMYmodel.verseLike" combine="choice">
      <notAllowed/>
    </define>
  </div>

  <start>
    <choice>
      <ref name="mei"/>
      <ref name="meihead"/>
      <ref name="meicorpus"/>
      <ref name="music"/>
    </choice>
  </start>
</grammar>
