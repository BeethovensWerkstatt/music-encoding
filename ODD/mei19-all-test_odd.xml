<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_all.rng" type="xml"?><TEI xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
     xmlns="http://www.tei-c.org/ns/1.0"
     xmlns:xhtml="http://www.w3.org/1000/xhtml"
     xmlns:rng="http://relaxng.org/ns/structure/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>MEI</title>
         </titleStmt>
         <publicationStmt>
            <p>Converted from rng through an XSLT script written by Raffaele Viglianti</p>
         </publicationStmt>
         <sourceDesc>
            <p>created on 2009-07-02T18:27:42.673+01:00</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
   <text>
      <front>
         <divGen type="toc"/>
      </front>
      <body>
         <p>MEI</p>
         <schemaSpec ident="mei" start="mei" ns="http://www.edirom.de/ns/mei"><!--
                                ****
                                Definition of Macros. Datatypes and Attribute Value Lists
                                Number of definitions found in original RNG: 88
                                ****
                            --><macroSpec type="dt" ident="data.BEAT">
               <desc>
  A beat location, i.e., [0-9]+(\.?[0-9]*)? The value must fall
  between 0 and the numerator of the time signature + 1, where 0
  represents the left barline and the upper bound represents the right
  barline.  For example, in 12/8 the value must be in the range from 0 to
  13.
  </desc>
               <content>
                  <rng:data type="decimal">
                     <rng:param name="minInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.COLOR">
               <desc>
    EITHER a hexadecimal color value, ie., x[0-9A-Fa-f]{6,6} OR a
    descriptive word, i.e., aqua, black, blue, fuchsia, gray, green, lime,
    maroon, navy, olive, purple, red, silver, teal, white, or yellow, for
    colors defined by the HTML 4.01 specification.
  </desc>
               <content>
                  <rng:choice>
                     <rng:data type="token">
                        <rng:param name="pattern"/>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DEGREES">
               <desc>
    360th-unit measure of a cirle's circumference; optionally signed
    decimal number, i.e., [+-]?[0-9]+(\.?[0-9]*)?
  </desc>
               <content>
                  <rng:data type="decimal"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INTEGERNONNEGATIVE">
               <desc>
    unsigned positive integer values including '0', i.e., [0-9]+
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INTEGERPOSITIVE">
               <desc>
    unsigned positive integer values excluding '0', i.e., 1 to
    infinity.
  </desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ISODATE">
               <desc> ISO date formats: </desc>
               <content>
                  <rng:choice>
                     <rng:data type="date"/>
                     <rng:data type="gYear"/>
                     <rng:data type="gMonth"/>
                     <rng:data type="gDay"/>
                     <rng:data type="gYearMonth"/>
                     <rng:data type="gMonthDay"/>
                     <rng:data type="time"/>
                     <rng:data type="dateTime"/>
                     <rng:data type="token">
                        <rng:param name="pattern"/>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ISOTIME">
               <desc>
     ISO 24-hour time format: HH:MM:SS.ss, i.e.,
    [0-9][0-9]:[0-9][0-9]:[0-9][0-9](\.?[0-9]*)?
  </desc>
               <content>
                  <rng:data type="time"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MEASUREBEAT">
               <desc>
    A duration expressed as a count of measures plus a beat location,
    i.e., [0-9]+m *\+ *[0-9]+(\.?[0-9]*)?, e.g., dur="1m + 3.5" indicates a
    duration of 1 measure plus 3 and one half beats or, in other words, on
    the 2nd half of the 3rd beat of the next measure. The measure number
    must be in the range of 0 to the number of remaining measures and the
    beat number must be in the range from 0 to the numerator of the time
    signature plus 1.  For example, for an event starting in the first
    measure of a piece containing 6 measures in 6/8, the measure number must
    be between 0 to 5 and the beat number must be within the range from 0 to
    7, e.g., "4m+3".
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MIDITEMPO">
               <desc>
    MIDI quarter notes per minute: positive integer in the range
    10-1000
  </desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive"/>
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.NUMBER">
               <desc>
    optionally signed decimal number, i.e., [+-]?[0-9]+(\.?[0-9]*)?
  </desc>
               <content>
                  <rng:data type="decimal"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.NUMBERPOSITIVE">
               <desc>
    unsigned positive decimal values excluding '0', i.e., 1 to
    infinity.
  </desc>
               <content>
                  <rng:data type="decimal">
                     <rng:param name="minInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PERCENT">
               <desc>
    positive decimal number plus '%', i.e., [0-9]+(\.?[0-9]*)?\%
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.RATIO">
               <desc>
     a ratio, i.e., [0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)?  For example,
    "40:7.2319"
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STRINGNUMBER">
               <desc>
    In string tablature, the number of the string to be played, i.e.,
    [1-9]+.
  </desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TEMPOVALUE">
               <desc>
    Beats (meter signature denominator) per minute, e.g. 120.
  </desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TSTAMPOFFSET">
               <desc>
    A positive or negative offset from the value given in the tstamp
    attribute. The datatype of this attribute must be the same as that of
    the tstamp, tstamp.ges, or tstamp.real attribute.
  </desc>
               <content>
                  <rng:text/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.URI">
               <desc>
    a Uniform Resource Identifier, see [RFC2396]
  </desc>
               <content>
                  <rng:data type="anyURI"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ACCIDENTAL.EXPLICIT">
               <desc>
    Accidental attribute values: s = sharp, f = flat, ss = dblsharp,
    x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n =
    natural, nf = naturalflat, ns = naturalsharp. ss indicates the use
    of 2 sharp signs, while x indicates the use of a single double
    sharp. nf and ns are used to cancel dbflats and dblsharps,
    respectively. su = sharp note qtr. tone up, sd = sharp note qtr.
    tone down, fu = flat note qtr. tone up, fd = flat note qtr. tone
    down, nu = natural note qtr. tone up, nd = natural note quarter
    tone down. Quarter-tone accidentals listed in Read, p. 145.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ACCIDENTAL.IMPLICIT">
               <desc>
    Accidental attribute values: s = sharp, f = flat, ss = dblsharp,
    x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n =
    natural, nf = naturalflat, ns = naturalsharp. ss indicates the use
    of 2 sharp signs, while x indicates the use of a single double
    sharp. nf and ns are used to cancel dbflats and dblsharps,
    respectively. su = sharp note qtr. tone up, sd = sharp note qtr.
    tone down, fu = flat note qtr. tone up, fd = flat note qtr. tone
    down, nu = natural note qtr. tone up, nd = natural note quarter
    tone down. Quarter-tone accidentals listed in Read, p. 145.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ARTICULATION">
               <desc>
    The following list of articulations mostly corresponds to symbols
    1D110-1D111, 1D17B-1D182, 1D185-1D189, 1D1AA-1D1AD, 1D1B3-1D1B5 from
    the Western Musical Symbols portion of the Unicode Standard, v. 3.1.
    The dot and stroke values may be used in cases where interpretation is
    not desirable.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ARTICULATIONS">
               <desc>
    1 or more from the list given in the definition of the
    ARTICULATION entity. Changing this to CDATA, however, would allow the
    use of character entities.
  </desc>
               <content>
                  <rng:list>
                     <rng:zeroOrMore>
                        <rng:ref name="data.ARTICULATION"/>
                     </rng:zeroOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.AUGMENTDOT">
               <desc>
    Dots attribute values (number of augmentation dots) (Read,
    113-119, ex. 8-21)
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BARPLACE">
               <desc>
    Placement of barlines: 'mensur' = between staves only, 'staff'
    = between and across staves as necessary, 'takt' = short line
    above staff or through top line
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BARRENDITION">
               <desc>
    Renderings of barlines
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BEAM">
               <desc>
    Beam attribute values: initial, medial, terminal. Nested beaming
    is permitted.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BEAMS">
               <desc>
    1 or more from the list given in the definition of the BEAM entity.
  </desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.BEAM"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BOOLEAN">
               <desc>
    Boolean attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CERTAINTY">
               <desc>
    Values for certainty attribute
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLEFLINE">
               <desc>
    Clef line attribute values
  </desc>
               <content>
                  <rng:ref name="data.INTEGERPOSITIVE"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLEFSHAPE">
               <desc>
    Clef shape attribute values (Read, p.53-56)
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLEFTRAN">
               <desc>
    Clef trans attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLUSTER">
               <desc>
    Tone-clusters
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CURVERENDITION">
               <desc>
    Renderings of curves
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION.BASE">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION.MEN">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.BASE"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION.MENSURAL">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.MEN"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATIONS">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.BASE"/>
                     <rng:ref name="data.DURATION.MEN"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ENCLOSURE">
               <desc>
    Enclosures for editorial notes and accidentals
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTFAMILY">
               <desc>
    Font family (for text) attribute values
    Mup-acceptable values: &lt;!ENTITY % FONTFAMILY
                         '(avantgarde|bookman|courier|helvetica|
                         newcentury|palatino|times)'&gt;
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTNAME">
               <desc>
    Font name (for text) attribute values
    Mup-acceptable values: &lt;!ENTITY % FONTNAME  '(rom|ital|bold|boldital)'&gt;
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTSTYLE">
               <desc>
    Font style (for text) attribute values. 'normal' = 'rom' in Mup.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTWEIGHT">
               <desc>
    Font weight (for text) attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.XPATH">
               <desc>
    Fragment referencing method.  Setting this entity to '%data.XPATH;' or
    '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.XPOINTER">
               <desc>
    Fragment referencing method.  Setting this entity to '%data.XPATH;' or
    '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FRAGMENT">
               <desc>
    Fragment referencing method.  Setting this entity to '%data.XPATH;' or
    '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.XPATH"/>
                     <rng:ref name="data.XPOINTER"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FRETNUMBER">
               <desc>
    In string tablature, the fret number, i.e., [0-9]+. The value '0'
    indicates the open string.
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.GLISSANDO">
               <desc>
    Analytical glissando attribute values: i(nitial), m(edial),
    t(erminal)
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.GRACE">
               <desc>
    Do grace notes get time from the current (acc) or previous (unacc)
    one?
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.HEADSHAPE">
               <desc>
    Allowed notehead shapes
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INEUMENAME">
               <desc>
    Interrupted neume, i.e. neumes written as 2 or more sub-neumes
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INEUMEFORM">
               <desc>
    Interrupted neume forms
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.KEYSIGTOKEN">
               <desc>
    Interrupted neume forms
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.KEYSIGNATURE">
               <desc>
    Key signature is normally indicated by a value showing where the
    key is in the circle of fifths. Mixed key signatures, e.g. those
    consisting of a mixture of flats and sharps, and key signatures with
    unorthodox placement of the accidentals (Read, p. 143) must be
    indicated by setting the key.sig attribute to 'mixed' and providing
    explicit keysig info in the key.sig.mixed attribute.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.LAYERSCHEME">
               <desc>
    Indicates how stems should be drawn when more than one layer is
    present and stem directions are not indicated on the notes/chords
    themselves. '1' indicates that there is only a single layer on a staff.
    '2o' means there are two layers with opposing stems. '2f' indicates
    two 'free' layers; that is, opposing stems will be drawn unless one of
    the layers has 'space'. In that case, stem direction in the remaining
    layer will be determined as if there were only one layer. '3o' and
    '3f' are analogous to '2o' and '2f' with three layers allowed. What
    about more than 3 layers?
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.LIGATUREFORM">
               <desc>
    Ligature forms
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.LINERENDITION">
               <desc>
    Renderings of lines
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MENSURATIONSIGN">
               <desc>
    Mensuration attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.METERSIGN">
               <desc>
    Meter.sym attribute values for common-practice notation
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MIDICHANNEL">
               <desc>
    MIDI channel numbers
  </desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MIDIVALUE">
               <desc>
    MIDI values are in the following range
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MODE">
               <desc>
    Modes
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MUSICFONT">
               <desc>
    Music font family
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.OCTAVE">
               <desc>
    Oct attribute values. The default values conform to Acoustical
    Society of America representation. Read, p. 44. The entity name is
    plural so as not to conflict with the %octave entity used in the
    definition of the octave element.
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PGSCALE">
               <desc>
    Page scale factor datatype.  Setting this to %data.RATIO; allows
    page.scale attributes to contain a virtual units to real units conversion
    ratio.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.PERCENT"/>
                     <rng:ref name="data.RATIO"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PGUNITS">
               <desc>
    Values for unit attribute
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHCLASS">
               <desc>
    Pclass (pitch class) attribute values
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHNAME">
               <desc>
    The pitch names (gamut) used within a single octave. The default
    values conform to Acoustical Society of America representation.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHNAME.GES">
               <desc>
    Gestural pitch names need an additional value for when the notated
    pitch is not to be played.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHNUMBER">
               <desc>
    Pnum (pitch number, e.g. MIDI) attribute values
  </desc>
               <content>
                  <rng:ref name="data.INTEGERNONNEGATIVE"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PLIST">
               <desc>
    Participant list referencing method.  Setting this entity to '%data.XPATH;'
    or '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:data type="IDREFS"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PLACE">
               <desc>
    Place, i.e., relative location of musical material
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SIZE">
               <desc> 
    Size attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SLUR">
               <desc>
    i=initial, t=terminal. Number is used to match endpoints of the
    slur when slurs are nested or overlap, e.g. 
    &lt;note slur='i1 i2'/&gt;&lt;note slur='t1'/&gt;&lt;note slur='t2'/&gt; encodes the
    fact that two slurs begin on note 1, one which terminates on note 2
    and one which terminates on note 3. % SLUR isn't currently invoked in
    the DTD; it serves as documentation for the tokens that can be used
    where % SLURS is invoked.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SLURS">
               <desc>
    1 or more from the list given in the definition of the SLUR
    entity.
  </desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.SLUR"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SLURDIRECTION">
               <desc>
    Slur direction
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STAFFLOC">
               <desc>
    Staff location. Staff location includes staff lines, spaces, and
    the spaces directly above and below the staff. The value ranges between
    0 (just below the staff) to 2 * number of staff lines (directly above
    the staff).  For example, on a 5-line staff the lines would be numbered
    1,3,5,7, and 9 while the spaces would be numbered 0,2,4,6,8,10.
  </desc>
               <content>
                  <rng:ref name="data.INTEGERNONNEGATIVE"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STEMDIRECTION">
               <desc>
    Stem direction
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STEMMODIFIER">
               <desc>
    Stem modification
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STEMPOSITION">
               <desc>
    Which side of stem?
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TEMPERAMENT">
               <desc>
    Temperament
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TEXTRENDITION">
               <desc>
    Text renditions
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TIE">
               <desc>
    Tie attribute values: initial, medial, terminal
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TIEDIRECTION">
               <desc>
    Tie direction
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TUPLET">
               <desc>
    Tuplet attribute values: initial, medial, terminal
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern"/>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.UNEUMENAME">
               <desc>
    Basic, i.e., single, uninterrupted, neume names
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.UNEUMEFORM">
               <desc>
    Basic, i.e., single, uninterrupted, neume names
  </desc>
               <content>
                  <rng:choice>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                     <rng:value/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.VISUALOFFSET">
               <desc>
    Visual, i.e. ho and vo, offsets are expressed in terms of staff
    interline distance; that is, in "stepsizes", which are half the
    distance between staff lines.
  </desc>
               <content>
                  <rng:ref name="data.NUMBER"/>
               </content>
            </macroSpec>
            <!--
                                ****
                                Defintion of Attribute Classes
                                Number of definitions found in original RNG: 340
                                ****
                            --><classSpec type="atts" ident="att.alignment">
               <desc>The when attribute indicates a particular kind of correspondence; i.e.,
          temporal correspondence. It should be used to point to when elements within one
          or more timeline elements.</desc>
               <attList>
                  <attDef ident="when" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.bibl">
               <desc>Bibliographic attributes: The analog attribute contains a reference to a
          field or element in another descriptive encoding system to which an MEI element
          is comparable. Mapping elements from one system to another may help a repository
          harvest selected data from the MEI file to build a basic catalog record. The
          encoding system from which fields are taken must be specified. When possible,
          subfields as well as fields should be specified, e.g., subfields within MARC
          fields. A display label for an element can be supplied using the label attribute
          when a meaningful label cannot be derived by a style sheet from the element name
          or when a head element is not available.</desc>
               <attList>
                  <attDef ident="analog" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.color">
               <desc/>
               <attList>
                  <attDef ident="color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.common.anl">
               <desc>Common analytical attributes: corresp may be used to point to other
          events or control events that correspond to this event in some
          fashion.</desc>
               <classes>
                  <memberOf key="att.alignment"/>
               </classes>
               <attList>
                  <attDef ident="corresp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.common">
               <desc>Common attributes: Each id within a document must have a unique value.
          The id attribute regularizes the naming of the element and thus facilitates
          building links between it and other resources. The n attribute may be used to
          provide a label (name or number) for the element. Its value need not be
          unique.</desc>
               <attList>
                  <attDef ident="id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="n" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.controlevent">
               <desc>Control events rely on other events for their existence. For example, a
          slur/phrase marking must be drawn between or over a group of notes. The next
          attribute may be used to point to the next control event(s) in a user-defined
          collection while the prev attribute may point to the previous event(s). The
          plist (participant list) attribute may contain ID references or xPointer
          fragment identifiers (depending on how % PLIST is configured) which identify
          logical events which participate in the control event, e.g., notes under a
          phrase mark. The staff and layer attributes allow the control event to encode
          its scope of influence. The tstamp attribute encodes the onset time of a musical
          feature in terms of musical time, i.e., beats. The tstamp.ges attribute may be
          used to record the onset time in pulses per quarter note (ppq, MusicXML
          divisions, or MIDI clicks) since the start of the measure, while the tstamp.real
          attribute records the onset time as a real-time offset, i.e., HH:MM:SS.ss, since
          the beginning of the file.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="plist" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLIST"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.coordinated">
               <desc/>
               <attList>
                  <attDef ident="ulx" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="uly" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lrx" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lry" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.crit">
               <desc>Attributes common to all elements representing variant
          readings:</desc>
               <attList>
                  <attDef ident="cause" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="seq" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.date">
               <desc>Attributes common to dates: calendar indicates the system or calendar to
          which the date belongs, for example, Gregorian, Julian, Roman, Mosaic,
          Revolutionary, Islamic; cert indicates the degree of precision to be attributed
          to the date, e.g. ca., approx, after, before, etc.; from contains the starting
          point of a date range; notafter should contain an upper boundary for an
          uncertain date while notbefore should contain a lower boundary, e.g,
          &amp;lt;date notbefore='1957' notafter='1960'&gt;Feb.
          5&amp;lt;/date&gt;; reg gives the value of the date in standard ISO
          form; to contains the end point of a date range.</desc>
               <attList>
                  <attDef ident="calendar" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="cert" usage="opt">
                     <datatype>
                        <rng:ref name="data.CERTAINTY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="from" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="notafter" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="notbefore" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reg" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.edit">
               <desc>Attributes describing the nature of an encoded scholarly intervention or
          interpretation: cert signifies the degree of certainty associated with the
          intervention or interpretation. evidence indicates the nature of the evidence
          supporting the reliability or accuracy of the intervention or interpretation.
          Suggested values include: 'internal', 'external', 'conjecture'. The resp
          attribute indicates responsibility for the identification or content within the
          element to which it is attached. It must point to one of the identifiers
          declared in the document header, associated with a person asserted as
          responsible for some aspect of the text's creation, transcription, editing, or
          encoding. The source attribute contains a list of one or more pointers
          indicating the sources which support the given reading.</desc>
               <attList>
                  <attDef ident="cert" usage="opt">
                     <datatype>
                        <rng:ref name="data.CERTAINTY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="evidence" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.event">
               <desc>Attributes that apply to all written events, e.g. beam, beatrpt, chord,
          note, etc. The tstamp attribute encodes the onset time of a musical feature in
          terms of musical time, i.e., beats. The tstamp.ges attribute may be used to
          record the onset time in pulses per quarter note (ppq, MusicXML divisions, or
          MIDI clicks) since the start of the measure, while the tstamp.real attribute
          records the onset time as a real-time offset, i.e., HH:MM:SS.ss, since the
          beginning of the file.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.facsimile">
               <desc>All elements subscribing to this class may include one or more ID
          references to an image or to an image zone which corresponds with the
          element.</desc>
               <attList>
                  <attDef ident="facs" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.common">
               <desc>Attributes common to all linking elements: actuate defines whether a link
          occurs automatically or must be requested by the user. It is used in conjunction
          with the show attribute to determine link behavior. show defines whether a
          remote resource that is the target of a link appears at the point of the link,
          replaces the existing link, or appears in a new window. The targettype attribute
          allows the target resource to be characterized, using any convenient
          classification scheme or typology.</desc>
               <attList>
                  <attDef ident="actuate" usage="opt">
                     <valList type="closed">
                        <valItem ident="onLoad"/>
                        <valItem ident="onRequest"/>
                        <valItem ident="other"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="arcrole" usage="opt"/>
                  <attDef ident="role" usage="opt"/>
                  <attDef ident="show" usage="opt">
                     <valList type="closed">
                        <valItem ident="new"/>
                        <valItem ident="replace"/>
                        <valItem ident="other"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="targettype" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="title" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.external">
               <desc>Linking attributes for external referencing elements: entityref
          references a previously-declared entity which represents a complete document.
          The href attribute allows the use of an undeclared URI. The fragment attribute
          allows one to identify one or more sub-parts within the document being pointed
          to.</desc>
               <attList>
                  <attDef ident="entityref" usage="opt">
                     <datatype>
                        <rng:data type="ENTITY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fragment" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRAGMENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="href" usage="opt">
                     <datatype>
                        <rng:ref name="data.URI"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.internal">
               <desc>Linking attributes for internal referencing elements.</desc>
               <attList>
                  <attDef ident="plist" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLIST"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.midi.event">
               <desc>Attributes common to MIDI events. %att.controlevent is expanded here in
          order to allow only the staff, layer, and tstamp attributes from this
          class.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.name">
               <desc>Attributes shared by names: The authority attribute should contain the
          name of the list from which a controlled value is taken, such as the Thesaurus
          of Geographic Names (TGN), etc. The key attribute may be used to record a value
          which serves as a primary key in an external database. The reg attribute may be
          used to record a regularized form of the name.</desc>
               <attList>
                  <attDef ident="authority" usage="opt"/>
                  <attDef ident="key" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reg" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.startendid">
               <desc>Start and end attributes record the IDs of other elements to which the
          current element is associated.</desc>
               <attList>
                  <attDef ident="endid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.lang">
               <desc>Attributes common to text elements: The lang attribute should be used to
          identify the language of the word or text phrase marked. Its value must be the
          identifier of a &lt;language&gt; element supplied in the MEI header of
          the current document.</desc>
               <attList>
                  <attDef ident="lang" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.trans">
               <desc>Attributes for elements encoding authorial or scribal intervention when
          transcribing manuscript or similar sources: The hand attribute signifies the
          hand of the agent which made the intervention. Its value must be the ID of hand
          element declared in the header. The seq attribute may be used to assign a
          sequence number related to the order in which the encoded features carrying this
          attribute are believed to have occurred.</desc>
               <attList>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="seq" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.typed">
               <desc>Attributes which can be used to classify or subclassify elements in any
          way</desc>
               <attList>
                  <attDef ident="subtype" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="type" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.typography">
               <desc>Typographical attributes</desc>
               <attList>
                  <attDef ident="fontfam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontname" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontsize" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontstyle" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontweight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset">
               <desc>Some items may have their location recorded in terms of offsets from
          their programmatically-determined location. The ho attribute records the
          horizontal offset while vo records the vertical. The to attribute holds a
          timestamp offset, the most common use of which is as an alternative to
          ho.</desc>
               <attList>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy">
               <desc>Some elements may have their exact "output" coordinates recorded: x and y
          indicate where to place the rendered output. Recording the coordinates of a
          feature in a facsimile requires the use of the facs attribute.</desc>
               <attList>
                  <attDef ident="x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy.required">
               <desc/>
               <attList>
                  <attDef ident="x" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy2">
               <desc>Some elements need 2 coordinate pairs</desc>
               <attList>
                  <attDef ident="x2" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y2" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy2.required">
               <desc/>
               <attList>
                  <attDef ident="x2" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y2" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.barline">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.barline">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="tstamp" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.barline">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="complete" usage="opt">
                     <valList type="closed">
                        <valItem ident="c"/>
                        <valItem ident="i"/>
                        <valItem ident="o"/>
                     </valList>
                  </attDef>
                  <attDef ident="control" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.barline">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="barplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="taktplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.clef">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.clef">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.clef">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="line" usage="req">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="shape" usage="req">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.clef">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.custos">
               <desc>Logical domain attributes: The pname and oct attributes identify the
          location where the custos appears. This is usually, but not always, the same as
          the target pitch. The target pitch may be referenced using the target
          attribute.</desc>
               <attList>
                  <attDef ident="oct" usage="req">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="req">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="target" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.custos">
               <desc>Visual domain attributes: The rend attribute indicates whether hash marks
          should be rendered between systems. See Read, p. 436, ex. 26-3.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dot">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dot">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.dot">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="aug"/>
                        <valItem ident="div"/>
                     </valList>
                  </attDef>
                  <attDef ident="loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dot">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ending">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ending">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.ending">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ending">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.grpsym">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.grpsym">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.grpsym">
               <desc>Logical domain attributes: The staves attribute must be used when
          multiple grpsym elements are present. The label.* attributes should be used
          instead of n.</desc>
               <attList>
                  <attDef ident="symbol" usage="req">
                     <valList type="closed">
                        <valItem ident="brace"/>
                        <valItem ident="bracket"/>
                        <valItem ident="line"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.grpsym">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ineume">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ineume">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.ineume">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.INEUMEFORM"/>
                     </datatype>
                  </attDef>
                  <attDef ident="name" usage="opt">
                     <datatype>
                        <rng:ref name="data.INEUMENAME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ineume">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.layer">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.layer">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.layer">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layer">
               <desc>Visual domain attributes:</desc>
               <attList>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.layerdef">
               <desc>Analytical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.layerdef">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef.mensural">
               <desc>Logical domain attributes: The n attribute is provided for explicit layer
          numbering.</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef">
               <desc/>
               <classes>
                  <memberOf key="att.log.layerdef.base"/>
                  <memberOf key="att.log.layerdef.mensural"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef.mensural">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef">
               <desc/>
               <classes>
                  <memberOf key="att.vis.layerdef.base"/>
                  <memberOf key="att.vis.layerdef.mensural"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ligature">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ligature">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.ligature">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.LIGATUREFORM"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ligature">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mensur">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mensur">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.mensur">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="modusmaior" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mensur">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="orient" usage="opt">
                     <valList type="closed">
                        <valItem ident="reversed"/>
                        <valItem ident="90CW"/>
                        <valItem ident="90CCW"/>
                     </valList>
                  </attDef>
                  <attDef ident="sign" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.midi">
               <desc>The corresp attribute may point to logical events, i.e., notes, rests,
          etc., to which the MIDI data is analogous.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.midi">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.midi">
               <desc>Logical domain attributes: The midi element may provide values for layer
          and staff attributes for a group of MIDI events.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.midi">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.proport">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.proport">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.proport">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.proport">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.part">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.part">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.part">
               <desc>Logical domain attributes: The n attribute allows explicit numbering of
          parts.</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.part">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.parts">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.parts">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.parts">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.parts">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.rdg">
               <desc>Analytical domain attributes: The priority attribute is available so that
          variant readings may be assigned an order, e.g., for selection and/or rendering
          purposes, other than the encoded order. The resp attribute identifies the editor
          responsible for asserting this reading in the source.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.rdg">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.rdg">
               <desc>Logical domain attributes: The expan attribute contains a list of ids of
          child section, ending or app elements. This 'expansion list' indicates how the
          section should be expanded into its 'through-composed' form.</desc>
               <attList>
                  <attDef ident="expan" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.rdg">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.sb">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.sb">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.sb">
               <desc>Adding the following attributes: leftmar %data.NUMBER; #IMPLIED rightmar
          %data.NUMBER; #IMPLIED spacing.staff %data.NUMBER; #IMPLIED to a.log.sb would
          make it possible to record layout changes without requiring them to be at
          section boundaries.</desc>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.sb">
               <desc>Visual domain attributes: The rend attribute indicates whether hash marks
          should be rendered between systems. See Read, p. 436, ex. 26-3.</desc>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="hash"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.score">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.score">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.score">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.score">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.scoredef">
               <desc>Analytical domain attributes: Since the score element carries analytical
          attributes for the score, it is unlikely a.anl.scoredef will ever be
          used.</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.scoredef">
               <desc>Gestural domain attributes: Definitions and suggested default values:
          grace do grace notes get time from the current (acc) or previous (unacc) main
          note? 'acc' midi.channel '1' midi.div MIDI pulses per quarter note '96'
          midi.duty specifies the 'on' part of the duty cycle as a percentage. '80'
          midi.instr General MIDI instrument number '1' midi.instrname General MIDI
          instrument name 'Acoustic Piano' midi.port MIDI port number '1' midi.tempo
          quarter notes per minute '120' midi.track MIDI track number '1' tempo beats per
          minute '120' tune.pname name of tuning reference pitch 'a' tune.Hz frequency of
          tuning reference pitch '440' tune.temper temperament 'equal'</desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.tempo" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDITEMPO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempo" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPOVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.Hz" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.temper" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPERAMENT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef.mensural">
               <desc>Logical domain attributes: beam.group an example of how beaming
          (including secondary beams) is to be done, e.g. (4.,4.,4.) indicates one outer
          beam per measure with secondary beams broken at each dotted quarter duration, no
          default beam.rests should beams include rests shorter than a quarter duration?,
          'no' clef.line position of the clef, '2' clef.shape clef, 'G' clef.trans octave
          shift indicated by the clef, '0' dur.default default duration, '4' key.accid
          tonic accidental, i.e., 's' or 'f', no default key.mode mode, 'major' key.pname
          tonic pitchname, no default key.sig effective key signature, no default
          key.sig.mixed key signature contains both sharps and flats, no default
          meter.count number of beats per measure, top number of the meter sig, no default
          meter.sym display a symbol, e.g. C, instead of numbers, like 4/4, no default
          meter.unit beat unit, bottom number of the meter sig, no default octave.default
          default octave when octave isn't specified on the first note of the measure, '4'
          trans.diat amount of diatonic pitch shift, e.g. C to C# = 0, C to Db = 1, '0'
          trans.semi amount of pitch shift in semitones, e.g. C to C# = 1, C to Db = 1,
          '0'. (Transposition requires both trans.diat and trans.semi.)</desc>
               <attList>
                  <attDef ident="mensur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusmaior" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="proport.num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig" usage="opt">
                     <datatype>
                        <rng:ref name="data.KEYSIGNATURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.mixed" usage="opt"/>
                  <attDef ident="meter.count" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.sym" usage="opt">
                     <datatype>
                        <rng:ref name="data.METERSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.unit" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.diat" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.semi" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef">
               <desc/>
               <classes>
                  <memberOf key="att.log.scoredef.base"/>
                  <memberOf key="att.log.scoredef.mensural"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef.mensural">
               <desc>Visual domain attributes: Definitions and suggested software default
          values: mnum.visible are measure numbers visible?, 'no' bar.place placement of
          barlines, 'norm' beam.rend encodes whether a beam is feathered and in which
          direction, 'norm' beam.slope default beam slope, Mup uses '1.0, 25.0' clef.color
          hexadecimal RGB/name color value clef.visible are clefs visible?, 'yes'
          dynam.dist how far from staff to render dynamic marks, '2' ending.rend where to
          draw ending marks, 'top' grid.show display chord grids?, 'no' harm.dist how far
          from staff to render harmony, '2' key.sig.show display key signature?, 'yes'
          key.sig.showchange display cautionary key signature change?, 'yes' lyric.align
          alignment of lyrics beneath notes, Mup uses '0.25' lyric.fam font family for
          lyrics, 'times' lyric.name font name for lyrics, 'rom' lyric.size point size of
          lyrics, '12' meter.rend display meter normally (3/4), with symbol as denom, or
          invis, 'norm' meter.sig.showchange display cautionary meter signature change?,
          'yes' ontheline governs display of notes on a 1-line staff, 'yes' optimize
          display only those staves with notes?, 'no' ** page.* attributes apply to the
          entire score/part page.height height of page, '11' page.width width of page,
          '8.5' page.units real-world measurement (inches, centimeters, millimeters), 'in'
          page.topmar top page margin, '1' page.botmar bottom page margin, '1'
          page.leftmar left page margin, '.5' page.rightmar right page margin, '.5'
          page.panels number of logical pages to place on physical page, '1' page.scale
          scale printed output by the specified percentage, '100' pedal.rend are piano
          pedal marks drawn as lines or as terms (e.g. 'Ped.' &amp; '*'), 'term'
          reh.enclose default look of rehearsal letters/numbers, 'box' slur.rend default
          look of slurs, 'medium' spacing.packexp note spacing relative to its time value,
          '0.8' spacing.packfact note spacing of output, '1' spacing.staff minimum amount
          of space between staves in the same system, '2' spacing.system minimum and
          maximum amount of space between systems, '12, 20' system.leftmar left system
          margin relative to page.leftmar, '0' system.rightmar right system margin
          relative to page.rightmar, '0' system.topmar distance from page's top edge to
          the first system, used for first page only text.dist how far from staff to
          render text, '2' text.fam font family for text, 'times' text.nam font name for
          text, 'rom' text.size point size of text, '12' tie.rend default look of ties,
          'medium'</desc>
               <attList>
                  <attDef ident="mensur.form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.orient" usage="opt">
                     <valList type="closed">
                        <valItem ident="reversed"/>
                        <valItem ident="90CW"/>
                        <valItem ident="90CCW"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef.base">
               <desc/>
               <attList>
                  <attDef ident="bar.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dynam.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ending.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="top"/>
                        <valItem ident="barred"/>
                        <valItem ident="grouped"/>
                     </valList>
                  </attDef>
                  <attDef ident="grid.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="harm.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.align" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="denomsym"/>
                        <valItem ident="norm"/>
                        <valItem ident="invis"/>
                     </valList>
                  </attDef>
                  <attDef ident="meter.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mnum.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="multi.number" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="music.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.MUSICFONT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="music.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ontheline" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="optimize" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.height" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.units" usage="opt">
                     <datatype>
                        <rng:ref name="data.PGUNITS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.topmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.botmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.leftmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.rightmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.panels" usage="opt">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                     </valList>
                  </attDef>
                  <attDef ident="page.scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.PGSCALE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pedal.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="term"/>
                     </valList>
                  </attDef>
                  <attDef ident="reh.enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.packexp" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.packfact" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.system" usage="opt"/>
                  <attDef ident="system.leftmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="system.rightmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="system.topmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef">
               <desc/>
               <classes>
                  <memberOf key="att.vis.scoredef.base"/>
                  <memberOf key="att.vis.scoredef.mensural"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.section">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.section">
               <desc>Gestural domain attributes: The expan attribute contains a list of ids of
          child section, ending or app elements. This 'expansion list' indicates how the
          section should be expanded into its 'through-composed' form. See Read, p. 226
          (ex. 12-10), 228-229 (ex. 12-16).</desc>
               <attList>
                  <attDef ident="expan" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.section">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.section">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staff">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staff">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.staff">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staff">
               <desc>Visual domain attributes:</desc>
               <attList>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staffdef">
               <desc>Analytical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef.tablature">
               <desc>Gestural domain attributes: Adding tune.pname, tune.Hz, and tune.temper
          attributes here would allow each staff to establish its own tuning
          standard.</desc>
               <attList>
                  <attDef ident="tab.strings" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef.base">
               <desc/>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef">
               <desc/>
               <classes>
                  <memberOf key="att.ges.staffdef.base"/>
                  <memberOf key="att.ges.staffdef.tablature"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef.mensural">
               <desc>Logical domain attributes: The n attribute is provided for explicit staff
          numbering.</desc>
               <attList>
                  <attDef ident="mensur.sign" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusmaior" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="proport.num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig" usage="opt">
                     <datatype>
                        <rng:ref name="data.KEYSIGNATURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.mixed" usage="opt"/>
                  <attDef ident="meter.count" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.sym" usage="opt">
                     <datatype>
                        <rng:ref name="data.METERSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.unit" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.diat" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.semi" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef">
               <desc/>
               <classes>
                  <memberOf key="att.log.staffdef.base"/>
                  <memberOf key="att.log.staffdef.mensural"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef.mensural">
               <desc>Visual domain attributes: It is a semantic error if the clef.shape,
          clef.line, key.sig, meter.count, and meter.unit attributes are not supplied or
          are not available from a scoredef ancestor. The layerscheme attribute indicates
          the number of layers and the stem direction. The lines attribute indicates the
          number of stafflines. The lines.color attribute is structured; that is, it
          should have the same number of space-separated RGB values as indicated by the
          lines attribute. A line can be made invisible by assigning it the same RGB value
          as the background, usually white. The tab.strings attribute lists a written
          pitch and octave for each open string, e.g. "e3 a3 d4 g4 b4 e5" for standard
          guitar tuning. It should contain the number of tokens indicated by the lines
          attribute. Chromatic alteration may be indicated with '-' (flat) and '#'
          (sharp). Double sharps and flats are not permitted. The spacing attribute should
          be used to record the absolute distance (as opposed to the relative distances
          recorded in scoredef elements) between this staff and the preceding one in the
          same system. This value is meaningless for the first staff in a system since the
          spacing.system attribute indicates the spacing between systems.</desc>
               <attList>
                  <attDef ident="mensur.form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.orient" usage="opt">
                     <valList type="closed">
                        <valItem ident="reversed"/>
                        <valItem ident="90CW"/>
                        <valItem ident="90CCW"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dynam.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grid.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="harm.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="label.full" usage="opt"/>
                  <attDef ident="label.abbr" usage="opt"/>
                  <attDef ident="layerscheme" usage="opt">
                     <datatype>
                        <rng:ref name="data.LAYERSCHEME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines.color" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.align" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="denomsym"/>
                        <valItem ident="norm"/>
                        <valItem ident="invis"/>
                     </valList>
                  </attDef>
                  <attDef ident="meter.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="multi.number" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ontheline" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pedal.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="term"/>
                     </valList>
                  </attDef>
                  <attDef ident="reh.enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef">
               <desc/>
               <classes>
                  <memberOf key="att.vis.staffdef.base"/>
                  <memberOf key="att.vis.staffdef.mensural"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staffgrp">
               <desc>Analytical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffgrp">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffgrp">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffgrp">
               <desc>Visual domain attributes: barthru indicates whether barlines go across
          the space between staves (yes) or are only drawn across the stafflines of each
          staff (no), label.full is used on the first page while label.abbr is used
          thereafter, symbol indicates the left-hand connecting symbol for the group, and
          the visible attribute indicates whether this group is to be printed. The brace
          and bracket attributes may be used (instead of additional staffgrp sub-elements)
          to indicate sub-groupings of staves.</desc>
               <attList>
                  <attDef ident="barthru" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="label.abbr" usage="opt"/>
                  <attDef ident="label.full" usage="opt"/>
                  <attDef ident="symbol" usage="opt">
                     <valList type="closed">
                        <valItem ident="brace"/>
                        <valItem ident="bracket"/>
                        <valItem ident="line"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.uneume">
               <desc>Analytical domain attributes: accid.cautionary cautionary accidental
          accid.editorial editorial accidental or musica ficta hfunc harmonic function,
          e.g. root, 3rd, 5th inth harmonic interval from pitch in same chord intm melodic
          interval from previous pitch mfunc melodic function, e.g. appogg., N.T. pclass
          pitch class psolfa solfa, e.g. do, re, mi, etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.uneume">
               <desc>Gestural domain (performance) attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.uneume">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.UNEUMEFORM"/>
                     </datatype>
                  </attDef>
                  <attDef ident="name" usage="opt">
                     <datatype>
                        <rng:ref name="data.UNEUMENAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.uneume">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.accid">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.accid">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.accid">
               <desc>Logical domain attributes: %ACCIDENTAL.EXPLICIT is the super-set. The
          value attribute should really be restricted to the subset given by the form
          attribute.</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="implicit"/>
                        <valItem ident="explicit"/>
                     </valList>
                  </attDef>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="caution"/>
                        <valItem ident="edit"/>
                     </valList>
                  </attDef>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.accid">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <valList type="closed">
                        <valItem ident="above"/>
                        <valItem ident="below"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.annot">
               <desc>Analytical domain attributes:</desc>
               <attList>
                  <attDef ident="dur.anl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.annot">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.annot">
               <desc>Logical domain attributes: % att.controlevent is expanded here in order
          to allow staff to be IMPLIED. Values for the type attribute can be taken from
          any convenient typology of annotation suitable to the work in hand; e.g.
          annotation, gloss, citation, digression, preliminary, temporary, etc. The tstamp
          attribute encodes the onset time of a musical feature in terms of musical time,
          i.e., beats. The tstamp.ges attribute may be used to record the onset time in
          pulses per quarter note (ppq, MusicXML divisions, or MIDI clicks) since the
          start of the measure, while the tstamp.real attribute records the onset time as
          a real-time offset, i.e., HH:MM:SS.ss, since the beginning of the
          file.</desc>
               <classes>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.annot">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.arpeg">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.arpeg">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.arpeg">
               <desc>Logical domain attributes: dir=nonarp indicates a non-arpeggiated chord.
          Arpeggiation across multiple staves requires 2 values in staff attribute; if
          there's more than 1 layer in either staff, 2 values are required in the layer
          attribute.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="dir" usage="opt">
                     <valList type="closed">
                        <valItem ident="up"/>
                        <valItem ident="down"/>
                        <valItem ident="nonarp"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.arpeg">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="arrow" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.artic">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.artic">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.artic">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ARTICULATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.artic">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beam">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beam">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.beam">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beam">
               <desc>Visual domain attributes: Secondary beams may be broken explicitly using
          the breaksec attribute. Its value should contain a space-separated list of
          rhythmic durations that form a single beat. For example,'8 8' indicates a
          division of the beam into 2 8th-note groups.</desc>
               <attList>
                  <attDef ident="breaksec" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beamspan">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beamspan">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.beamspan">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beamspan">
               <desc>Visual domain attributes:</desc>
               <attList>
                  <attDef ident="breaksec" usage="opt"/>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beatrpt">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beatrpt">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.beatrpt">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beatrpt">
               <desc>Visual domain attributes: The expand attribute indicates whether to
          render the source measures or the usual repeated beat symbol. The rend attribute
          indicates the number of slashes required to render the appropriate beat repeat
          symbol when the beat is divided into even notes - 4ths or 8ths=1, 16ths=2,
          32nds=3, 64ths=4, 128ths=5. When the beat is comprised of mixed duration values,
          the symbol is always rendered as 2 slashes and 2 dots. See Read, pg.
          223-224.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="req">
                     <valList type="closed">
                        <valItem ident="4"/>
                        <valItem ident="8"/>
                        <valItem ident="16"/>
                        <valItem ident="32"/>
                        <valItem ident="64"/>
                        <valItem ident="128"/>
                        <valItem ident="mixed"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.bend">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.bend">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="amount" usage="opt">
                     <valList type="closed">
                        <valItem ident=".25"/>
                        <valItem ident=".5"/>
                        <valItem ident=".75"/>
                        <valItem ident="1"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.bend">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.bend">
               <desc>Visual domain attributes: The bulge or, alternatively, the bezier
          attribute, describes the shape of the bend. The bulge attribute describes the
          curve as a set of distance values above or below an imaginary line connecting
          the endpoints of the curve while the bezier attribute records the placement of
          Bezier control points as a series of space-separated xy coordinates, eg. 19 45
          -32 118. If the bulge or bezier attributes are present, the bend should be
          rendered as a curve. Otherwise, it should be rendered as a line. The bulge
          attribute must contain one or more values of type %NUMBER. The rend attribute
          records the typographical style of the curve or line while the ho and vo
          attributes describe the visual offset of the entire rendered bend. The endho,
          endvo and startho, startvo attribute pairs may be used to encode start and end
          points relative to their programmatic placement. For exact placement of the
          endpoints of the bend use the xy coordinate pairs.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.breath">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.breath">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.breath">
               <desc>Logical domain attributes: Currently, the dur attribute encodes the
          logical and visual durations of the directive. If cases arise where the logical
          and visual durations differ, it may be necessary to add a dur.vis attribute.
          Please note that the dur attribute is not a true duration, but rather a time
          stamp for the end point of the directive.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.breath">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.btrem">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.btrem">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.btrem">
               <desc>Logical domain attributes: The num attribute should be explicitly set for
          measured tremolandi. The stem modifier (slash or z) must also be explicity set
          on the child note or chord element for a complete visual
          representation.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="meas"/>
                        <valItem ident="unmeas"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.btrem">
               <desc>Visual domain attributes:</desc>
               <attList>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.chord">
               <desc>Analytical domain attributes: hfunc = harmonic function, mfunc = melodic
          function.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.chord">
               <desc>Gestural domain (performance) attributes: The artic.ges and dur.ges
          attributes record the articulation and duration information when the performed
          values differ from the written values. The dur.ges attribute (performed
          duration) may be expressed in several forms, such as
          measures[s]+beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip values, or
          MusicXML 'divisions', etc. Because dur.ges isn't limited to the standard
          duration values, a dots.ges attribute is unnecessary.</desc>
               <attList>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.chord">
               <desc>Logical domain attributes: The artic, dots, and dur attributes encode the
          *written* articulations, augmentation dots, and duration values.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="artic" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lv" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
                  <attDef ident="tie" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.chord">
               <desc>Visual domain attributes: The altsym attribute indicates that the
          specified alternative visual symbol is to be displayed. The headshape attribute
          may be used to indicate a cluster notehead should be displayed instead of
          individual noteheads. See Read, p. 320-321 re: tone clusters. Processing of
          chords and notes will be easier if a distinction is made between articulations,
          which indicate sound quality, and text strings, such as numbers for fingering,
          etc. Only articulations should be encoded in the artic attribute; fingerings
          should be encoded using the &lt;dir&gt; element. Articulations may be
          encoded in order from the notehead outward; that is, away from the stem. See
          additional notes at a.vis.note. The slur, slur.dir, slur.rend, tie, tie.dir, and
          tie.rend attributes here are syntactic sugar for these attributes on each of the
          chord's individual notes. The values here apply to all the notes in the chord.
          If some notes are slurred or tied while others aren't, then the individual note
          attributes must be used. The coloration attribute should not be confused with
          visual color. Coloration is when a void notehead is displayed filled and vice
          versa. The dot.ho and dot.vo attributes record the offset of the dot from its
          "normal" position while the dot.x and dot.y attributes record the precise
          position of the dot. The %att.visualoffset entity is expanded here in order to
          disallow a vertical offset.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLUSTER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.clefchange">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.clefchange">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.clefchange.base">
               <desc>Logical domain attributes:</desc>
               <attList>
                  <attDef ident="line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.clefchange">
               <desc/>
               <classes>
                  <memberOf key="att.log.clefchange.base"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.clefchange">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dir">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dir">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.dir">
               <desc>Logical domain attributes: Currently, the dur attribute encodes the
          logical and visual durations of the directive. If cases arise where the logical
          and visual durations differ, it may be necessary to add a dur.vis attribute.
          Please note that the dur attribute is not a true duration, but rather a time
          stamp for the end point of the directive.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dir">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dynam">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dynam">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="value" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.dynam">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the dynamic symbol or text while the dur.ges attribute
          encodes the performed duration. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute is not
          a true duration, but rather a time stamp for the end point of the dynamic
          indication.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dynam">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.fermata">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.fermata">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.fermata">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.fermata">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ftrem">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ftrem">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="meas"/>
                        <valItem ident="unmeas"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.ftrem">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ftrem">
               <desc>Visual domain attributes: The rend attribute indicates the number of
          slashes required - 4ths or 8ths=1, 16ths=2, 32nds=3, 64ths=4,
          128ths=5.</desc>
               <attList>
                  <attDef ident="slash" usage="req">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                        <valItem ident="6"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.gliss">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.gliss">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.gliss">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.gliss">
               <desc>Visual domain attributes: The text attribute may be used to record any
          text, such as 'gliss.' that accompanies the glissando mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.hairpin">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.hairpin">
               <desc>Gestural domain attributes: dur.ges represents the performed
          duration.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.hairpin">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the hairpin while the dur.ges attribute, if it is available,
          encodes the performed duration. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute is not
          a true duration, but rather a time stamp for the end point of the
          hairpin.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="req">
                     <valList type="closed">
                        <valItem ident="cres"/>
                        <valItem ident="dim"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.hairpin">
               <desc>Visual domain attributes: The startho and startvo attributes record the
          horizontal and vertical offsets of the left end, endho and endvo record the
          horizontal and vertical offsets of the right end, and the width attribute
          records the width of the opening on the open end in staff inter-line units. The
          x1 and y1 attributes give the absolute coordinates of the left side of the
          hairpin while x2 and y2 record the coordinates of the right side.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="req">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.halfmrpt">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.halfmrpt">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.halfmrpt">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.halfmrpt">
               <desc>Visual domain attributes: The expand attribute indicates whether or not
          to render the source material. How can it be pointed to?</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.harm">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.harm">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.harm">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the harmony while the dur.ges attribute, if it is available,
          encodes the performed duration. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute here is
          not a true duration, but rather a time stamp for the end point of the
          directive.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="chordref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.harm">
               <desc>Visual domain attributes: If the rendgrid attribute is set to 'grid',
          then the chord tablature grid defined in the chordtable should be rendered
          instead of the text contents of the harm element; if rendgrid equals 'gridname',
          both the harm element's text and the grid should be displayed; otherwise, only
          the 'name' of the chord, i.e., the text content of the harm element, e.g. 'Cmaj'
          or 'V7/III', should be rendered.</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="extender" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rendgrid" usage="opt">
                     <valList type="closed">
                        <valItem ident="grid"/>
                        <valItem ident="gridname"/>
                     </valList>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.harppedal">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.harppedal">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.harppedal">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="c" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="d" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="e" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="f" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="g" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="a" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="b" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.harppedal">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.lyrics">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.lyrics">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.lyrics">
               <desc>Logical domain attributes: %att.controlevent is expanded here in order to
          allow only the staff and layer attributes from this class.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.lyrics">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.typography"/>
               </classes>
               <attList>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.measure">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.measure">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.measure">
               <desc>Logical domain attributes: The complete attribute allows the encoding of
          whether a measure matches the prevailing meter: a value of 'c' indicates a
          metrically complete measure, 'i' indicates a measure with not enough beats,
          while 'o' is for measures with too many beats. The control attribute indicates
          whether or not the barline is "controlling", that is, indicates a point of
          alignment across all the parts. Barlines within a score are always
          'controlling'; that is, they must 'line up'. Barlines within parts may or may
          not be 'controlling'. The left attribute indicates the function of the left
          barline. It is present here only for facilitation of translation from legacy
          encodings which use it. Usually, it can be safely ignored. The right attribute,
          on the other hand, indicates the function of the right barline and is
          structurally important. The n attribute may contain a name/name (label) for the
          measure (Read, p. 445). Often, this is an integer, but not always. For example,
          some measures, especially incomplete measures or those under an ending mark, may
          have labels that contain an integer plus a suffix, such as '12a'. Measures may
          even have labels, especially in editorial or analytical uses of MEI, that are
          entirely non-numeric strings. Measure numbers may be machine-generated. However,
          an explicit measure number will restart numbering with the given
          value.</desc>
               <attList>
                  <attDef ident="complete" usage="opt">
                     <valList type="closed">
                        <valItem ident="c"/>
                        <valItem ident="i"/>
                        <valItem ident="o"/>
                     </valList>
                  </attDef>
                  <attDef ident="control" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="left" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="right" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.measure">
               <desc>Visual domain attributes: The taktplace attribute value must be a number
          between 1 and the number of stafflines. For example, a value of '5' puts the
          barline through the top line of a 5-line staff. The width attribute records a
          fixed width for the measure.</desc>
               <attList>
                  <attDef ident="barplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="taktplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mordent">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mordent">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.mordent">
               <desc>Logical domain attributes: In the form attribute, 'norm' signals the
          normal form, that is, the written note, followed by its lower neighbor, with a
          return to the written note, while 'inv' indicates the inverted form, that is,
          the principal note, followed by its upper neighbor, with a return to the
          principal note. When the long attribute is set to 'yes', a double or long
          mordent, consisting of 5 notes, is indicated. Traditionally, the 'normal'
          mordent is written as a short wavy line with a vertical line through it and the
          inverted mordent is written without the vertical line. However, the meaning of
          these signs is sometimes reversed. See Read, p. 245-246. Another attribute in
          the visual domain would be necessary in order to be completely explicit about
          which visual symbol is actually to be rendered.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="accidupper" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accidlower" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="long" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mordent">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrest">
               <desc>Analytical domain attributes: The n attribute is used to explicitly
          encode this measure's position in a string of measures containing only mrest
          elements.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrest">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrest">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrest">
               <desc>Visual domain attributes: The altsym attribute indicates that the
          specified alternative visual symbol is to be displayed. When set to 'rest' the
          cutout attribute indicates that the staff lines are to be displayed but not the
          rest itself. When set to 'staff' even the staff lines should not be drawn for
          this measure. See _56 Songs You Like to Sing_, p. 32. The dur.vis attribute
          should be used to record the durational symbol used in the source.</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="cutout" usage="opt">
                     <valList type="closed">
                        <valItem ident="rest"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur.vis" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrpt">
               <desc>Analytical domain attributes: The measref attribute is provided to
          explicitly indicate the measure whose contents are to be repeated here. The n
          attribute is used to explicitly encode this measure's position in a string of
          measures containing only mrpt elements.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrpt">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrpt">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrpt">
               <desc>Visual domain attributes: The expand attribute indicates whether or not
          to render the source measure.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrpt2">
               <desc>Analytical domain attributes: The measref attribute is provided to
          explicitly indicate the measures whose contents are to be repeated
          here.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrpt2">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrpt2">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrpt2">
               <desc>Visual domain attributes: The expand attribute indicates whether or not
          to render the source measures.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mspace">
               <desc>Analytical domain attributes: The n attribute is used to explicitly
          encode this measure's position in a string of measures containing only mrest
          elements.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mspace">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.mspace">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mspace">
               <desc>Visual domain attributes: The altsym attribute indicates that the
          specified alternative visual symbol is to be displayed. When set to 'rest' the
          cutout attribute indicates that the staff lines are to be displayed but not the
          rest itself. When set to 'staff' even the staff lines should not be drawn for
          this measure. See _56 Songs You Like to Sing_, p. 32. The dur.vis attribute
          should be used to record the durational symbol used in the source.</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="cutout" usage="opt">
                     <valList type="closed">
                        <valItem ident="rest"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur.vis" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.multirest">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.multirest">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.multirest">
               <desc>Logical domain attributes: The num attribute contains the number of
          measures of rest.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.multirest">
               <desc>Visual domain attributes: When the block attribute is used, combinations
          of the 1, 2, &amp; 4 measure rest forms (Read, p. 104) should be rendered
          instead of the modern form.</desc>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="block" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.multirpt">
               <desc>Analytical domain attributes: The meas attribute is provided to
          explicitly reference the measures where the source content exists.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.multirpt">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.multirpt">
               <desc>Logical domain attributes: The num attribute contains the number of
          measures to be repeated.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.multirpt">
               <desc>Visual domain attributes: The expand attribute indicates whether or not
          to render the source measures.</desc>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.nota">
               <desc>Analytical domain attributes: accid.cautionary cautionary accidental
          accid.editorial editorial accidental or musica ficta hfunc harmonic function,
          e.g. root, 3rd, 5th inth harmonic interval from pitch in same chord intm melodic
          interval from previous pitch mfunc melodic function, e.g. appogg., N.T. pclass
          pitch class psolfa solfa, e.g. do, re, mi, etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota.tablature">
               <desc>Gestural domain (performance) attributes: The artic.ges, dur.ges,
          oct.ges, pname.ges attributes record the articulation, duration, octave, and
          pitch name when the performed value differs from the written value. The
          accid.ges attribute may be used to record the implicit accidental, that is, the
          pitch alteration required by the key signature, for use in conversion to sound
          and for harmonic analysis. Therefore, only the flat, double flat, sharp and
          double sharp values are permitted. Unlike dur attributes elsewhere, the dur.ges
          attribute (performed duration) type is CDATA. This allows the expression of
          performance duration in user-defined terms, such as
          measures[s]:beat[s].beatpart, MIDI clicks, Humdrum *recip values, etc. Because
          dur.ges isn't limited to the standard duration values, a dots.ges attribute is
          unnecessary. See Read, p. 238-241, for a discussion of grace notes. The pnum
          attribute holds a pitch-to-number mapping, a base-40 or MIDI note number, for
          example.</desc>
               <attList>
                  <attDef ident="tab.fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRETNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.string" usage="opt">
                     <datatype>
                        <rng:ref name="data.STRINGNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota.base">
               <desc/>
               <attList>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="gliss" usage="opt">
                     <datatype>
                        <rng:ref name="data.GLISSANDO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME.GES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pnum" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota">
               <desc/>
               <classes>
                  <memberOf key="att.ges.nota.base"/>
                  <memberOf key="att.ges.nota.tablature"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.nota">
               <desc>Logical domain attributes: The pname, accid, oct, dur, dots, and artic
          attributes encode the *written* note name, accidental, octave, duration,
          articulations, augmentation dots, and articulations. The acci attribute records
          the notated accidental for the note, e.g. flat, sharp, natural, double flat,
          double sharp (both forms), natural+flat, natural+sharp, and the quarter tone
          accidentals. The beam attribute records the presence of a beam in which this
          note participates. Software may use this attribute or beam elements for
          rendering. The dots attribute records the number of augmentation dots required
          by a dotted duration. The slur, tie, lv (laissez vibrer), and tuplet attributes
          encode the presence of a slur, tie, lv, or tuplet in which this note
          participates. Software may render slur, tie, lv or tuplet indications based on
          these attributes or require separate slur, tie, generic curve, or tuplet
          elements for visual rendition. Tablature information can be recorded in the
          tab.fret and tab.string attributes. fermata = corona in the mensural
          repertoire.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corona" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION.MENSURAL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lig" usage="opt">
                     <valList type="closed">
                        <valItem ident="recta"/>
                        <valItem ident="obliqua"/>
                     </valList>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.nota">
               <desc>Visual domain attributes: The distance between the accidental and the
          note it modifies should be recorded in the accid.ho attribute. The headshape
          attribute may be used to override the headshape normally used for the given
          duration. The enclose.accid and enclose.note attributes record the symbol to be
          used around the accidental and the entire note, respectively. For an example of
          cautionary accidentals enclosed in parentheses or brackets see Read, p. 131, ex.
          9-14. The coloration attribute may be used to indicate a reverse coloration,
          i.e., black instead of white or white instead of black. The dot.ho and dot.vo
          attributes record the offset of the dot from its "normal" position while the
          dot.x and dot.y attributes record the precise position of the dot. The
          %att.visualoffset entity is expanded here in order to disallow a vertical
          offset.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="accid.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="colored" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.note" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.note">
               <desc>Analytical domain attributes: accid.cautionary cautionary accidental
          accid.editorial editorial accidental or musica ficta hfunc harmonic function,
          e.g. root, 3rd, 5th inth harmonic interval from pitch in same chord intm melodic
          interval from previous pitch mfunc melodic function, e.g. appogg., N.T. pclass
          pitch class psolfa solfa, e.g. do, re, mi, etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note.tablature">
               <desc>Gestural domain (performance) attributes: The artic.ges, dur.ges,
          oct.ges, pname.ges attributes record the articulation, duration, octave, and
          pitch name when the performed value differs from the written value. The
          accid.ges attribute may be used to record the implicit accidental, that is, the
          pitch alteration required by the key signature, for use in conversion to sound
          and for harmonic analysis. Therefore, only the flat, double flat, sharp and
          double sharp values are permitted. Unlike dur attributes elsewhere, the dur.ges
          attribute (performed duration) type is CDATA. This allows the expression of
          performance duration in user-defined terms, such as
          measures[s]:beat[s].beatpart, MIDI clicks, Humdrum *recip values, etc. Because
          dur.ges isn't limited to the standard duration values, a dots.ges attribute is
          unnecessary. See Read, p. 238-241, for a discussion of grace notes. The pnum
          attribute holds a pitch-to-number mapping, a base-40 or MIDI note number, for
          example. Tablature information can be recorded in the tab.fret and tab.string
          attributes.</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note.base">
               <desc/>
               <attList>
                  <attDef ident="accid.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="gliss" usage="opt">
                     <datatype>
                        <rng:ref name="data.GLISSANDO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME.GES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pnum" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRETNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.string" usage="opt">
                     <datatype>
                        <rng:ref name="data.STRINGNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note">
               <desc/>
               <classes>
                  <memberOf key="att.ges.note.base"/>
                  <memberOf key="att.ges.note.tablature"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.note">
               <desc>Logical domain attributes: The pname, accid, oct, dur, dots, and artic
          attributes encode the *written* note name, accidental, octave, duration,
          articulations, augmentation dots, and articulations. The acci attribute records
          the notated accidental for the note, e.g. flat, sharp, natural, double flat,
          double sharp (both forms), natural+flat, natural+sharp, and the quarter tone
          accidentals. The beam attribute records the presence of a beam in which this
          note participates. Software may use this attribute or beam elements for
          rendering. The dots attribute records the number of augmentation dots required
          by a dotted duration. The slur, tie, lv (laissez vibrer), and tuplet attributes
          encode the presence of a slur, tie, lv, or tuplet in which this note
          participates. Software may render slur, tie, lv or tuplet indications based on
          these attributes or require separate slur, tie, generic curve, or tuplet
          elements for visual rendition.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lv" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
                  <attDef ident="tie" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.note">
               <desc>Visual domain attributes: The distance between the accidental and the
          note it modifies should be recorded in the accid.ho attribute. The headshape
          attribute may be used to override the headshape normally used for the given
          duration. The enclose.accid and enclose.note attributes record the symbol to be
          used around the accidental and the entire note, respectively. For an example of
          cautionary accidentals enclosed in parentheses or brackets see Read, p. 131, ex.
          9-14. The coloration attribute may be used to indicate a reverse coloration,
          i.e., black instead of white or white instead of black. The dot.ho and dot.vo
          attributes record the offset of the dot from its "normal" position while the
          dot.x and dot.y attributes record the precise position of the dot. The
          %att.visualoffset entity is expanded here in order to disallow a vertical
          offset.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="accid.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.note" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.octave">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.octave">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.octave">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the octave displacement while the dur.ges attribute, if it is
          available, encodes the performed duration. If logical and visual duration
          differ, it may be necessary to add a dur.vis attribute. Please note that the dur
          attribute here is not a true duration, but rather a time stamp for the end point
          of the octave displacement. The dur attribute is NOT REQUIRED because the octave
          displacement can be visually instantaneous. The place attribute indicates
          direction of displacement and display location and therefore is REQUIRED. The
          dis attribute states the amount of displacement while coll (Read, p. 47-48)
          encodes whether the octave displacement should be performed simultaneously with
          the written notes.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="coll" usage="opt">
                     <valList type="closed">
                        <valItem ident="coll"/>
                     </valList>
                  </attDef>
                  <attDef ident="dis" usage="req">
                     <valList type="closed">
                        <valItem ident="8"/>
                        <valItem ident="15"/>
                        <valItem ident="22"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="req">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.octave">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ossia">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ossia">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.ossia">
               <desc>Logical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ossia">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pad">
               <desc>Analytical domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pad">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.pad">
               <desc>Logical domain attributes: The num attribute is the amount of horizontal
          space to be added, expressed in inter-line staff units.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pad">
               <desc>Visual domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pedal">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pedal">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.pedal">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dir" usage="req">
                     <valList type="closed">
                        <valItem ident="down"/>
                        <valItem ident="up"/>
                        <valItem ident="half"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pedal">
               <desc>Visual domain attributes: When style is set to 'line', the pedal mark is
          rendered with a continuous line. When it's set to pedstar, a pedal down is
          rendered with "Ped.", a pedal up is rendered as "*", and a pedal "bounce" is
          rendered with "Ped. *". When set to altpedstar pedal up and down indications are
          the same as with pedstar but a bounce is rendered with "Ped." only.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="place" usage="opt">
                     <valList type="closed">
                        <valItem ident="below"/>
                     </valList>
                  </attDef>
                  <attDef ident="style" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="pedstar"/>
                        <valItem ident="altpedstar"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.phrase">
               <desc>Analytical domain attributes: The join attribute should be used for
          linking visually separate phrase marks, sometimes necessary due to system
          breaks, that form a single musical phrase.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.phrase">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.phrase">
               <desc>Logical domain attributes: Phrase may either use tstamp and duration or
          startid and endid attributes. It is a semantic error not to specify one of these
          attribute combinations.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.phrase">
               <desc>Visual domain attributes: The place attribute records general, relative
          placement only. The bulge or, alternatively, the bezier attribute, describes the
          shape of the phrase mark. The bulge attribute describes the curve as a set of
          distance values above or below an imaginary line connecting the endpoints of the
          curve while the bezier attribute records the placement of Bezier control points
          as a series of space-separated xy coordinates, eg. 19 45 -32 118. The bulge
          attribute must contain one or more values of type %NUMBER. The vo attribute is
          the vertical offset (from its normal position) of the entire rendered phrase
          mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.reh">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.reh">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.reh">
               <desc>Logical domain attributes: %att.controlevent is expanded here in order to
          disallow the plist and layer attributes. reh may use either a tstamp or start
          attribute. It is a semantic error not to include one of these attributes. The
          a.startendid entity is expanded here in order to disallow the end
          attribute.</desc>
               <attList>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="start" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.reh">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <valList type="closed">
                        <valItem ident="above"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.rest">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.rest">
               <desc>Gestural domain (performance) attributes: The dur.ges attribute records
          the performed duration of the rest when it differs from the written
          duration.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.rest">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.rest">
               <desc>Visual domain attributes: The altsym attribute indicates that the
          specified alternative visual symbol is to be displayed. See Read, ex. 7-14 for
          vertical offset example. The line attribute must contain a value from 1 to the
          number of stafflines. The value indicates the line upon which the rest stands.
          The spaces attribute states how many spaces are covered by the rest.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pausa">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pausa">
               <desc>Gestural domain (performance) attributes: The dur.ges attribute records
          the performed duration of the rest when it differs from the written
          duration.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.pausa">
               <desc>Logical domain attributes: fermata = corona in the mensural
          repertoire.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corona" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION.MENSURAL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pausa">
               <desc>Visual domain attributes: The altsym attribute indicates that the
          specified alternative visual symbol is to be displayed. See Read, ex. 7-14 for
          vertical offset example. The line attribute must contain a value from 1 to the
          number of stafflines. The value indicates the line upon which the rest stands.
          The spaces attribute states how many spaces are covered by the rest.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="colored" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="line" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spaces" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.slur">
               <desc>Analytical domain attributes: The join attribute should be used for
          linking visually separate phrase marks, sometimes necessary due to system
          breaks, that form a single musical phrase.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.slur">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.slur">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the slur. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute is not
          a true duration, but rather a time stamp for the end point of the slur.
          Durations of longer than one measure may give the number of measures followed by
          the timestamp, e.g. "1m+3". Values within the current measure may be expressed
          as "0m+3" or as simply "3". Slur may either use tstamp and dur or startid and
          endid attributes. It is a semantic error not to specify one of these attribute
          combinations.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.slur">
               <desc>Visual domain attributes: The bulge or, alternatively, the bezier
          attribute, describes the shape of the slur/phrase mark. The bulge attribute
          describes the curve as a set of distance values above or below an imaginary line
          connecting the endpoints of the curve while the bezier attribute records the
          placement of Bezier control points as a series of space-separated xy
          coordinates, eg. 19 45 -32 118. The bulge attribute must contain one or more
          values of type %NUMBER. The vo attribute is the vertical offset (from its normal
          position) of the entire rendered slur/phrase mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.space">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.space">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.space">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.space">
               <desc>Visual domain attributes:</desc>
               <attList>
                  <attDef ident="compressable" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.syl">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.syl">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.syl">
               <desc>Logical domain attributes: Lyric syllable connectors: s (_s_pace) = word
          separator d (_d_ash) = syllable separator u (_u_nderscore) = syllable extension
          t (_t_ilde) = syllable elision wordpos attribute records the position of the
          syllable in a word</desc>
               <attList>
                  <attDef ident="con" usage="opt">
                     <valList type="closed">
                        <valItem ident="s"/>
                        <valItem ident="d"/>
                        <valItem ident="u"/>
                        <valItem ident="t"/>
                     </valList>
                  </attDef>
                  <attDef ident="wordpos" usage="opt">
                     <valList type="closed">
                        <valItem ident="i"/>
                        <valItem ident="m"/>
                        <valItem ident="t"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.syl">
               <desc>Visual domain attributes: The ho attribute allows any lyric syllable to
          be horizontally offset from its normal (centered below the note)
          position.</desc>
               <classes>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="halign" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="justify"/>
                     </valList>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEXTRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tempo">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tempo">
               <desc>Gestural domain attributes: The midi attribute must contain the number of
          quarter notes per minute in the range from 10 to 1000. The value attribute is
          for a beats-per-minute value.</desc>
               <attList>
                  <attDef ident="midi" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDITEMPO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="value" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPOVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.tempo">
               <desc>Logical domain attributes: The dur.vis attribute encodes visual duration.
          (Read, p. 276-281) If logical and visual durations differ, it may be necessary
          to add a dur attribute. Please note that the dur attribute here is expressed in
          musical time, i.e. beats or other time stamp. Therefore, it is not a true
          duration, but rather a time stamp for the end point of the directive. The
          a.startendid entity is expanded here in order to disallow the end
          attribute.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="start" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tempo">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="dur.vis" usage="opt"/>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tie">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tie">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.tie">
               <desc>Logical domain attributes: The a.startendid entity is expanded here in
          order to make startid and endid attributes required.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="endid" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tie">
               <desc>Visual domain attributes: The bulge or, alternatively, the bezier
          attribute, describes the shape of the tie. The bulge attribute describes the
          curve as a set of distance values above or below an imaginary line connecting
          the endpoints of the curve while the bezier attribute records the placement of
          Bezier control points as a series of space-separated xy coordinates, eg. 19 45
          -32 118. The bulge attribute must contain one or more values of type %NUMBER.
          The vo attribute is the vertical offset (from its normal position) of the entire
          rendered tie.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.trill">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.trill">
               <desc>Gestural domain attributes: The dur.ges attribute records the performed
          duration.</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.trill">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the trill. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute is not
          a true duration, but rather a time stamp for the end point of the directive.
          Alternatively, startid and endid attributes may be used. An accidental for the
          trill may be supplied in the accid attribute.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.trill">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tuplet">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tuplet">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.tuplet">
               <desc>Logical domain attributes: The dur attribute is the time taken up by the
          tuplet. If dur is omitted, the default is to calculate the total duration of the
          included notes and use the next shorter un-dotted value. The dots attribute may
          be used for dotted durations. The num and numbase attributes express a ratio.
          They may be used for explicit labelling of the tuplet, i.e. '3' for an 8th-note
          triplet, '3:2' for a quarter-note triplet, etc. The rendering of the ratio,
          however, is dependent on the num.format attribute described below.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tuplet">
               <desc>Visual domain attributes: The bracket.place attribute is used to state
          where the bracket will be placed in relation to the noteheads while the
          num.place attribute gives the placement of the number or ratio label for the
          tuplet (if num.visible is 'yes'). The num.visible, bracket.visible, and
          dur.visible attributes indicate whether the numbers, bracket, and duration are
          visible. The num.format attribute controls how the num:numbase ratio is to be
          displayed. software defaults: bracket.visible 'yes' num.visible 'yes'</desc>
               <attList>
                  <attDef ident="bracket.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bracket.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.format" usage="opt">
                     <valList type="closed">
                        <valItem ident="count"/>
                        <valItem ident="ratio"/>
                     </valList>
                  </attDef>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tupletspan">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tupletspan">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.tupletspan">
               <desc>Logical domain attributes: The dur attribute encodes the logical and
          visual duration of the tuplet. Unlike other control events where the dur
          attribute is expressed as a time stamp, dur here is a true duration.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tupletspan">
               <desc>Visual domain attributes: software defaults: bracket.visible 'yes' What
          about triplets? num.visible 'yes'</desc>
               <attList>
                  <attDef ident="bracket.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bracket.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.format" usage="opt">
                     <valList type="closed">
                        <valItem ident="count"/>
                        <valItem ident="ratio"/>
                     </valList>
                  </attDef>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.turn">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.turn">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.turn">
               <desc>Logical domain attributes: Accidentals for the turn may be supplied in
          the accidupper and accidlower attributes. The a.startendid entity is expanded
          here in order to disallow the end attribute. When the delayed attribute is set
          to 'yes', the turn begins on the second half of the beat. See Read, p.
          246.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="accidupper" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accidlower" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="delayed" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="start" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.turn">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.verse">
               <desc>Analytical domain attributes:</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.ges.verse">
               <desc>Gestural domain attributes:</desc>
               <attList/>
            </classSpec>
            <classSpec type="atts" ident="att.log.verse">
               <desc>Logical domain attributes: The n attribute should be used for verse
          numbers. Numbers need not be consecutive; they may be expressed as ranges, e.g.
          2-3,6. A value of 'true' may be used in the refrain attribute in order to
          indicate a common, usually centered, refrain (Mup User's Guide, p. 44). The
          rhythm attribute may be used to specify a rhythm for the lyrics that differs
          from that of the notes on the staff.</desc>
               <attList>
                  <attDef ident="refrain" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rhythm" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.verse">
               <desc>Visual domain attributes: The a.visualoffset entity is expanded here in
          order to disallow ho.</desc>
               <classes>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <!--
                                ****
                                Defintion of Element Model Classes
                                Number of definitions found in original RNG: 104
                                ****
                            --><macroSpec type="pe" ident="model.addressLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="address"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.annotLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="annot"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.biblLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="bibl"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.dateLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="date"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editionLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="edition"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editorialLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.graphicLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="graphic"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.identifierLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="identifier"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lbLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="lb"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.milestoneLike.text">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="name"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.noteModifierLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.numLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="num"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="p"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pbLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="pb"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.rendLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.repositoryLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="repository"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.titleLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="title"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pgmetaLike">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.pgmetaLike.score">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.common">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.neume-mensural">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.mensural-cmn">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike.common">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.keyaccidLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="keyaccid"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.keysigLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="keysig"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.backLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="back"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.divLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="div"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.frontLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="front"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.headLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="head"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="l"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.listLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="list"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.quoteLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="blockquote"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.tableLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="table"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lgLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="lg"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.labelLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="label"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.instrdefLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="instrdef"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.layerLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="layer"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.layerdefLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="layerdef"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.mdivLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="mdiv"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.milestoneLike.music">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.musicPart">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.partLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="part"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.partsLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="parts"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.scoreLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="score"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffdefLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="staffdef"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffgrpLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="staffgrp"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.agent">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.geogname">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="geogname"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.place">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.label">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.figureLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="fig"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.captionLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="caption"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.availabilityPart">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.biblPart">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="model.editionLike"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editorialdeclPart">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.encodingPart">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.locrefLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.ptrLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="ptr"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.measurementLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="model.numLike"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lyricsLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="lyrics"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.sylLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="syl"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.verseLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="verse"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.ornamentLike.cmn">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.neumeModifierLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.neume">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.mensural">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.measureLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="measure"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike.instruments">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike.cmn">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.cmn">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.cmn.measureFilling">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.chordtableLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="chordtable"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.harmLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="harm"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.graphicprimitiveLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.symboltableLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="symboltable"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.apparatusLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="app"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.midiLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="midi"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.frontPart">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="titlepage"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.transcriptionLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editLike">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.choicePart">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.facsimileLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="facsimile"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.alignLike">
               <desc/>
               <content>
                  <datatype>
                     <rng:ref name="timeline"/>
                  </datatype>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.headerPart">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.physdescPart">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.profiledescPart">
               <desc/>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.pubstmtPart">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.textphraseLike">
               <desc>Phrase-level text elements.</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.textphraseLike.limited">
               <desc>Anchored text sub-elements. These occur as part of the representation of
          the score, as opposed to the textual matter which accompanies it. %
          model.anchoredtext is equivalent to % model.textphraseLike without the pb
          element.</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.paracontentPart">
               <desc>Paragraph content model. A paragraph may contain inline elements and all
          the other block-level elements except lg and itself. The % model.textphrase and
          % model.edit entities must be declared prior to the model.paracontent
          entity.</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.textcomponentLike">
               <desc>Block level text elements.</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.Incl">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.clefchangePart">
               <desc>doc:</desc>
               <content/>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffdefPart.multiplyDefinable">
               <desc>Multiple clefs</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike">
               <desc>Notated events. Sometimes referred to as "logical" events. The mrest,
          mrpt, mspace, multirest, and multirpt elements are not included in this list
          since in the measure element's content model they are alternatives to the
          elements listed here. They are, however, part of the att.events class.</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike">
               <desc>Control events modify or otherwise depend on the existence of notated
          events.</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.layerPart">
               <desc>Notated events at the layer level</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.syllablePart">
               <desc>Syllable content model</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffPart">
               <desc>Staff content model</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.measurePart">
               <desc>Measure content model</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.sectionPart">
               <desc/>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.scorePart">
               <desc>Score components</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.rdgPart">
               <desc>Reading content model</desc>
               <content>
                  <valList type="closed"/>
               </content>
            </macroSpec>
            <!--
                                ****
                                Defintion of Elements
                                Number of definitions found in original RNG: 237
                                ****
                            --><elementSpec ident="abbr">
               <desc>abbr (abbreviation) contains an abbreviation of any sort. The type
          attribute may be used to classify the abbreviation according to some convenient
          typology. Sample values include: suspension the abbreviation provides the first
          letter(s) of the word or phrase, omitting the remainder. contraction the
          abbreviation omits some letter(s) in the middle. brevigraph the abbreviation
          comprises a special symbol or mark. superscription the abbreviation includes
          writing above the line. acronym the abbreviation comprises the initial letters
          of the words of a phrase. title the abbreviation is for a title of address (Dr,
          Ms, Mr, ...) organization the abbreviation is for the name of an organization.
          geographic the abbreviation is for a geographic name. This tag is the mirror
          image of the &lt;expan&gt; tag; both allow the encoder to transcribe
          both an abbreviation and its expansion. In &lt;abbr&gt;, however, the
          original is transcribed as the content of the element and the expansion as an
          attribute value; &lt;expan&gt; reverses this. The choice between the two
          is up to the user. The &lt;abbr&gt; tag is not required; if appropriate,
          the encoder may transcribe abbreviations in the source text silently, without
          tagging them. If abbreviations are not transcribed directly but expanded
          silently, then the MEI header should so indicate. The cert attribute signifies
          the degree of certainty ascribed to the expansion of the abbreviation. The expan
          attribute gives an expansion of the abbreviation. The resp attribute contains an
          ID reference to an element containing the name of the editor or transcriber
          responsible for supplying the expansion of the abbreviation. Used by:
          model.editorialLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.trans"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="expan" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="address">
               <desc>A postal address Used by: model.addressLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="addressline"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="addressline">
               <desc>Single line of an address Used by: address Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="anchoredtext">
               <desc>Page-anchored text. The content model here is similar to paragraph
          without %model.textcomponent and %n.pb sub-elements. If the startid attribute is
          present, then the xy coordinates are relative to the xy coordinates of the
          referenced element. Otherwise, they are assumed to be absolute page coordinate
          references. Used by: model.graphicprimitiveLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.xy.required"/>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="annot">
               <desc>The annot element provides a way to group participating *events* and/or
          *control events*, the notes that form a descending bass line or phrase marks,
          for example, and provide a label for or comment regarding the group. An
          enumerated list of event IDs may be given in the plist attribute. Alternatively,
          if only the start and/or end events in a group are to be marked, then use the
          startid and endid attributes. An editorial or analytical comment or observation,
          encoded elsewhere, such as in the front or back matter, in score text elements,
          or in an external document may be pointed to using the link.common,
          link.internal, or link.external attributes. Alternatively, the observation may
          be included directly within the annot element. The annot element, along with
          other elements with %att.link.external attributes, may also be used to link/
          synchronize elements within the MEI file to external media such as images or
          sound recordings. The ID of the MEI element(s) to be linked from should be
          encoded in the plist attribute while the link to the external media may be
          encoded in the href or entityref attributes or in the body of the annotation
          using extref or extptr elements. Used by: model.annotLike Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.annot"/>
                  <rng:ref name="att.vis.annot"/>
                  <rng:ref name="att.ges.annot"/>
                  <rng:ref name="att.anl.annot"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.internal"/>
                  <rng:ref name="att.link.external"/>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="bibl">
               <desc>Bibliographic reference. May function as a hypertext reference to an
          external electronic resource. A more structured content model, similar to TEI's
          biblFull, requires new elements that function like those in the meiHead DTD, but
          that do not duplicate their names. Used by: model.biblLike Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.biblPart"/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="date">
               <desc>Date contains a date in any format. Used by: model.dateLike Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.date"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="edition">
               <desc>The edition designation is a word or text phrase that normally indicates
          a difference in either content or form between the item being described and a
          related item previously issued by the same publisher/distributor (e.g. 2nd
          edition, version 2.0, etc.), or simultaneously issued by either the same
          publisher/distributor or another publisher/distributor (e.g. large print
          edition, British edition, etc.). The %model.textphraseLike.limited entity is
          used here in order to disallow the pb element. Used by: model.biblPart
          editionstmt Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="expan">
               <desc>expan (expansion) contains the expansion of an abbreviation. The type
          attribute may be used to classify the abbreviation according to some convenient
          typology. See example values above. This tag is the mirror image of the
          &lt;abbr&gt; tag; both allow the encoder to transcribe both an
          abbreviation and its expansion. In &lt;abbr&gt;, however, the original
          is transcribed as the content of the element and the expansion as an attribute
          value; &lt;expan&gt; reverses this. The choice between the two is up to
          the user. The &lt;expan&gt; tag is not required; if appropriate, the
          encoder may expand abbreviations in the source text silently, without tagging
          them. If this is done, the MEI header should so indicate. The abbr attribute
          gives the abbreviation in its unexpanded form. The cert attribute signifies the
          degree of certainty ascribed to the expansion of the abbreviation. The resp
          attribute contains an ID reference to an element containing the name of the
          editor or transcriber responsible for supplying the expansion of the
          abbreviation held as the content of the &lt;expan&gt; element. Used by:
          model.editorialLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.trans"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="abbr" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="figdesc">
               <desc>Contains a brief prose description of the appearance or content of a
          graphic figure, for use when documenting an image without displaying it. Best
          practice suggests the use of controlled vocabulary. Don't confuse this element
          with a figure caption. A caption is text primarily intended for display with an
          illustration. It may or may not function as a description of the illustration.
          Used by: figure surface zone Module: meiFigures</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.annotLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="fw">
               <desc>Forme work, e.g. header and footer. This element is intended for capture
          of header/footer material that is non-repeating; that is, it occurs on isolated
          pages. For running headers and footers use pgheadN and pgfootN elements.
          Auto-generated page numbers may be included by using a processing instruction.
          Used by: model.pgmetaLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="graphic">
               <desc>Indicates the location of an inline graphic, illustration, or figure.
          Used by: model.graphicLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.link.external"/>
                  <attDef ident="height" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="units" usage="opt"/>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="identifier">
               <desc>Bibliographic, e.g., International Standard Book/Music Number, Library of
          Congress Control Number, Publisher's Number, or personal identifier. Used by:
          model.textphraseLike model.textphraseLike.limited model.pubstmtPart Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lb">
               <desc>Text line break. The n attribute should be used to record a label for the
          line, i.e. most likely a line number. See comment on verse element for
          description of func attribute. Used by: model.milestoneLike.text
          model.textphraseLike.limited Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="group"/>
                     </valList>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="name">
               <desc>Contains the name of an individual, such as 'Henry VIII, King of
          England', a corporate body, such as 'The Beatles', a geographical place or a
          generative mechanical process. They are available here in order to record any
          identifiers or dates, associated with the name, i.e., birth and death in the
          case of persons or creation and dissolution in the case of a corporate entity or
          place. When name parts are needed, use name sub-elements. The recommended values
          for the type attribute are: pers, corp, place, process. The role attribute may
          be used to record the function of the person, corporate body, etc. Used by:
          model.nameLike.agent Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="num">
               <desc>A number in any form Used by: model.measurementLike Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="p">
               <desc>Paragraph Used by: model.textcomponentLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.paracontentPart"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pb">
               <desc>Page break. Meta-data about an accompanying page image may be recorded in
          the pgdesc element. The n attribute records the page number in the source. It
          need not be an integer, e.g. 'iv', or 'p17-3'. The logical page number can be
          calculated by counting previous pb ancestor elements. The source attribute is
          provided for linking to the bibliographic description of the source(s) that
          contains the page break. When used in a score context, a page break implies an
          accompanying system break. Permitting the following attributes will make it
          possible to record layout changes at a pagebreak rather than forcing a new
          section element: botmar %data.NUMBER; #IMPLIED height %data.NUMBER; #IMPLIED
          leftmar %data.NUMBER; #IMPLIED rightmar %data.NUMBER; #IMPLIED topmar
          %data.NUMBER; #IMPLIED spacing.system CDATA #IMPLIED width %data.NUMBER;
          #IMPLIED Used by: model.milestoneLike.text model.milestoneLike.music Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="verso"/>
                        <valItem ident="recto"/>
                     </valList>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="model.pgmetaLike"/>
               </content>
            </elementSpec>
            <elementSpec ident="pgdesc">
               <desc>Contains a brief prose description of the appearance or description of
          the content of a physical page. Best practice suggests the use of controlled
          vocabulary. Don't confuse this element with a figure caption. A caption is text
          primarily intended for display with an illustration. It may or may not function
          as a description of the illustration. Perhaps a better model is
          (%model.locrefLike;)* with which one could force page- level meta-data to the
          header where it could be encoded in notesstmt elements. Used by: pb Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.annotLike"/>
                        <rng:ref name="model.locrefLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rend">
               <desc>Special visual rendering of text. A positive value for rotation rotates
          the text in a counter-clockwise fashion, while negative values produce clockwise
          rotation. The altrend attribute can be used to extend the values of the rend
          attribute. One or the other of the rend and altrend attributes is required. Used
          by: model.rendLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.color"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.typography"/>
                  <attDef ident="altrend" usage="opt"/>
                  <attDef ident="halign" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="justify"/>
                     </valList>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEXTRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rotation" usage="opt">
                     <datatype>
                        <rng:ref name="data.DEGREES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="valign" usage="opt">
                     <valList type="closed">
                        <valItem ident="top"/>
                        <valItem ident="middle"/>
                        <valItem ident="bottom"/>
                        <valItem ident="baseline"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="repository">
               <desc>Institution which holds a bibliographic item. Sub-units of the
          institution may be marked with nested repository elements. Used by:
          model.nameLike.place Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stack">
               <desc>Stacked text, e.g. an inline table with a single column. Used by:
          model.rendLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <attDef ident="delim" usage="opt"/>
                  <attDef ident="align" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="rightdigit"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="title">
               <desc>Title of a bibliographic entity. The type attribute may be used to
          classify the title according to some convenient typology. Sample values include:
          main main title subordinate subtitle, title of part abbreviated abbreviated form
          of title alternative alternate title by which the work is also known translated
          translated form of title uniform uniform title The type attribute is provided
          for convenience in analysing titles and processing them according to their type;
          where such specialized processing is not necessary, there is no need for such
          analysis, and the entire title, including subtitles and any parallel titles, may
          be enclosed within a single &lt;title&gt; element. The level attribute
          indicates whether this is the title of an article, monograph, journal, series,
          or unpublished material. Title parts may be encoded in title sub-elements since
          title is included in model.textphrase. Used by: model.titleLike Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="level" usage="opt">
                     <valList type="closed">
                        <valItem ident="a"/>
                        <valItem ident="m"/>
                        <valItem ident="j"/>
                        <valItem ident="s"/>
                        <valItem ident="u"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="clef">
               <desc>The clef element must be used when a staff employs multiple simultaneous
          clefs. Used by: model.clefchangePart model.staffdefPart.multiplyDefinable
          Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.anl.clef"/>
                  <rng:ref name="att.ges.clef"/>
                  <rng:ref name="att.log.clef"/>
                  <rng:ref name="att.vis.clef"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="custos">
               <desc>Custos Used by: model.eventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.custos"/>
                  <rng:ref name="att.vis.custos"/>
                  <rng:ref name="att.ges.sb"/>
                  <rng:ref name="att.anl.sb"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="clefchange">
               <desc>Mid-measure clef change. Coming as it does, in the middle of a measure, a
          clef change is an event. Used by: model.eventLike.common Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.event"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.clefchange"/>
                  <rng:ref name="att.vis.clefchange"/>
                  <rng:ref name="att.ges.clefchange"/>
                  <rng:ref name="att.anl.clefchange"/>
               </attList>
               <content>
                  <rng:ref name="model.clefchangePart"/>
               </content>
            </elementSpec>
            <elementSpec ident="pad">
               <desc>Used to create additional visual space between notational elements. Used
          by: model.eventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.log.pad"/>
                  <rng:ref name="att.vis.pad"/>
                  <rng:ref name="att.ges.pad"/>
                  <rng:ref name="att.anl.pad"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="space">
               <desc>A placeholder used to fill an incomplete measure, layer, etc. most often
          so that the combined duration of the events equals the number of beats in the
          measure. Used by: model.eventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.space"/>
                  <rng:ref name="att.vis.space"/>
                  <rng:ref name="att.ges.space"/>
                  <rng:ref name="att.anl.space"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="dir">
               <desc>Directives, e.g. text expressions that are on the score (typically above,
          below, or between staves), but not on the staff and not encoded elsewhere, such
          as in tempo or dynam elements. Examples include text strings, such as
          'affettuoso' or fingerings and music symbols, such as segno and coda symbols,
          fermatas over a barline, etc. Unlike generic text elements, directives can be
          control elements. That is, they can be used as pointers to other events. The
          %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow use of the pb sub-element. Used by:
          model.controleventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.dir"/>
                  <rng:ref name="att.vis.dir"/>
                  <rng:ref name="att.ges.dir"/>
                  <rng:ref name="att.anl.dir"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="dynam">
               <desc>The dynam element may be used for instantaneous or continuous textual
          dynamics, e.g. 'p', 'mf', or 'cresc. poco a poco'. See Read, p. 250-255. The
          hairpin element should be used for graphical dynamic markings. The
          %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow use of the pb sub-element. Used by:
          model.controleventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.dynam"/>
                  <rng:ref name="att.vis.dynam"/>
                  <rng:ref name="att.ges.dynam"/>
                  <rng:ref name="att.anl.dynam"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="phrase">
               <desc>Phrase mark, used for a "unified melodic idea" (Read, p. 265). Used by:
          model.controleventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.phrase"/>
                  <rng:ref name="att.vis.phrase"/>
                  <rng:ref name="att.ges.phrase"/>
                  <rng:ref name="att.anl.phrase"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tempo">
               <desc>Text and symbols descriptive of tempo, mood, or style, e.g., "allarg.",
          "a tempo", "cantabile", "Moderato", "[qtrnote]=60", "Moderato [qtrnote] =60").
          Both "instantaneous" and "continuous" tempo markings may be encoded using this
          element. The %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow the use of the pb sub-element. Used by:
          model.controleventLike.common Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.log.tempo"/>
                  <rng:ref name="att.vis.tempo"/>
                  <rng:ref name="att.ges.tempo"/>
                  <rng:ref name="att.anl.tempo"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mensur">
               <desc>The mensur element is provided for the encoding of mensural notation.
          Used by: model.staffdefPart.multiplyDefinable Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.mensur"/>
                  <rng:ref name="att.vis.mensur"/>
                  <rng:ref name="att.ges.mensur"/>
                  <rng:ref name="att.anl.mensur"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="proport">
               <desc>Proportion. Used by: model.staffdefPart.multiplyDefinable Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.proport"/>
                  <rng:ref name="att.vis.proport"/>
                  <rng:ref name="att.ges.proport"/>
                  <rng:ref name="att.anl.proport"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="ligature">
               <desc>The ligature element is provided for the encoding of mensural notation.
          Used by: model.eventLike.neume-mensural Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.ligature"/>
                  <rng:ref name="att.vis.ligature"/>
                  <rng:ref name="att.ges.ligature"/>
                  <rng:ref name="att.anl.ligature"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.layerPart"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mensurchange">
               <desc>Mensuration change. Used by: model.eventLike.neume-mensural Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="mensur"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="proportchange">
               <desc>Proportion change. Used by: model.eventLike.neume-mensural Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="proport"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="artic">
               <desc>Articulation. This element provides an alternative to the artic
          attributes on the note and chord elements. The element should be used when when
          specific display info, such as size or color, needs to be recorded for the
          articulation. Used by: model.noteModifierLike model.notaModifierLike
          model.neumeModifierLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typography"/>
                  <rng:ref name="att.log.artic"/>
                  <rng:ref name="att.vis.artic"/>
                  <rng:ref name="att.ges.artic"/>
                  <rng:ref name="att.anl.artic"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keyaccid">
               <desc>Accidental in a key signature. It is a semantic error not to provide x
          and y or staffloc attributes. Used by: model.keyaccidLike Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.xy"/>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="implicit"/>
                        <valItem ident="explicit"/>
                     </valList>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname">req<datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staffloc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="value">req<datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keysig">
               <desc>Key signature. This element may be used as an alternative to the key.*
          attributes (especially key.sig.mixed) on scoredef and staffdef. Used by:
          model.keysigLike Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.keyaccidLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="accid">
               <desc>Accidental. This element provides an alternative to the acci attributes
          on the note element. The element should be used when specific display info, such
          as size or color, needs to be recorded for the accidental. The func attribute
          can be used to differentiate different functions, such as 'cautionary' or
          'editorial'. Used by: model.noteModifierLike model.notaModifierLike
          model.neumeModifierLike model.eventLike.mensural-cmn Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typography"/>
                  <rng:ref name="att.log.accid"/>
                  <rng:ref name="att.vis.accid"/>
                  <rng:ref name="att.ges.accid"/>
                  <rng:ref name="att.anl.accid"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="barline">
               <desc>The barline element may be used instead of the measure element. It has
          the same attributes as measure. Used by: model.eventLike.mensural-cmn Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.internal"/>
                  <rng:ref name="att.link.external"/>
                  <rng:ref name="att.log.barline"/>
                  <rng:ref name="att.vis.barline"/>
                  <rng:ref name="att.ges.barline"/>
                  <rng:ref name="att.anl.barline"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="dot">
               <desc>The dot element is provided for the encoding of mensural notation. The
          dot element may be used for dots of augmentation or division. Used by:
          model.eventLike.mensural-cmn Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.dot"/>
                  <rng:ref name="att.vis.dot"/>
                  <rng:ref name="att.ges.dot"/>
                  <rng:ref name="att.anl.dot"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keychange">
               <desc>Key change. Used by: model.eventLike.mensural-cmn Module:
          meiShared</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.keyaccidLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="back">
               <desc>Back matter such as indexes, advertisements, etc. Used by: music Module:
          meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:ref name="model.divLike"/>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="blockquote">
               <desc>Blockquote contains a text phrase or passage attributed to a source
          external to the text. The source for the quote may be included in the optional
          bibl sub-element. Used by: model.textcomponentLike model.paracontentPart Module:
          meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.textcomponentLike"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="model.biblLike"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="div">
               <desc>Textual division. Used by: model.divLike Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.divLike"/>
                        <rng:ref name="model.textcomponentLike"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="front">
               <desc>Front matter. The pb element is allowed here in order to accommodate page
          images, e.g. cover, endpapers, etc. before and after the actual textual matter.
          Used by: music Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.divLike"/>
                        <rng:ref name="model.frontPart"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="head">
               <desc>Contains any heading, for example, the title of a text division, or the
          heading of a list. A head is not allowed to contain a sub-head in order to
          encourage the proper nesting of div elements. Used by: model.headLike Module:
          meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="item">
               <desc>Single item in a list Used by: list Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="l">
               <desc>Line contains a single line of text. The n attribute should be used to
          record a label for the line, i.e. most likely a line number. Used by:
          model.lLike Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lg">
               <desc>Line group usually contains verse although it may be used for any section
          of text that is organized as a group of lines. Used by: model.textcomponentLike
          Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="model.lLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="list">
               <desc>List. N.B. A definition list should be encoded as a 2-column table. Used
          by: model.listLike Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="simple"/>
                        <valItem ident="marked"/>
                        <valItem ident="ordered"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="item"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="table">
               <desc>Visual layout in tabular form Used by: model.tableLike Module:
          meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:optional>
                     <rng:ref name="model.captionLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="tr"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="td">
               <desc>Table cell containing data Used by: tr Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
                  <attDef ident="colspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rowspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="th">
               <desc>Table cell containing header information Used by: table Module:
          meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
                  <attDef ident="colspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rowspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="tr">
               <desc>Table row Used by: table Module: meiText</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="th"/>
                        <rng:ref name="td"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="corpname">
               <desc>Identifies an organization or group of people that acts as an entity. May
          contain name parts in corpname sub-elements since corpname is included in
          model.textphraseLike. Used by: model.nameLike.agent Module:
          meiNamesDates</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="geogname">
               <desc>Geographic name. The proper noun designation for a place, natural
          feature, or political jurisdiction. May contain name sub-parts in geogname
          sub-elements since geogname is included in model.textphrase. Used by:
          model.nameLike.place model.pubstmtPart Module: meiNamesDates</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="periodname">
               <desc>A label for a period of time, such as 'Baroque' or '3rd Style period'.
          Used by: model.nameLike.label Module: meiNamesDates</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="persname">
               <desc>Designation for an individual, including any or all of that individual's
          forenames, surnames, honorific titles, and added names. May contain name parts
          in persname sub-elements since persname is included in model.textphrase. Used
          by: model.nameLike.agent Module: meiNamesDates</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stylename">
               <desc>A label for a characteristic style of writing or performance, such as
          'bebop' or 'rock-n-roll'. May be used independently of periodname. Used by:
          model.nameLike.label Module: meiShared</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.name"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="caption">
               <desc>A label which accompanies an illustration or a table. Used by: figure
          Module: meiFigures</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="fig">
               <desc>An illustration. Used by: model.figureLike Module: meiFigures</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
                  <rng:ref name="att.xy"/>
               </attList>
               <content>
                  <rng:optional>
                     <rng:ref name="caption"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="figdesc"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="extptr">
               <desc>An empty linking element that uses attributes to connect the MEI document
          to an external electronic object. Don't confuse this element with the ptr
          element, which is an internal link for movement from one place in the MEI
          document to another in the same document. Used by: model.locrefLike Module:
          meiPtrRefs</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="extref">
               <desc>A linking element that can include text and subelements as part of its
          reference to an electronic object that is external to the MEI document. Don't
          confuse this element with the ref element, which is an internal link for
          movement from one place in the MEI document to another in the same document.
          Used by: model.locrefLike Module: meiPtrRefs</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ptr">
               <desc>An empty internal linking element that uses attributes to provide for
          movement from one place in a MEI document to another place in the same document.
          Unlike the ref element, the ptr element cannot contain text or subelements to
          describe the referenced object. Don't confuse this element with extptr which is
          used to connect the MEI document to an external electronic object. Used by:
          model.locrefLike Module: meiPtrRefs</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.internal"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="ref">
               <desc>An internal linking element that provides for movement from one place in
          a MEI document to another point in the same document. Unlike the ptr element,
          ref may contain text and subelements to describe the destination. Don't confuse
          this element with extref which provides for linking to an electronic object that
          is external to the MEI document. Used by: model.locrefLike Module:
          meiPtrRefs</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.internal"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="body">
               <desc>The body element contains the actual music data. When the music can be
          broken into high-level, discrete, linear segments, such as movements in the case
          of a symphony, there may be multiple mdiv elements within the body. This is the
          highest level indication of the structure of the music. The model
          &amp;lt;!ELEMENT %n.body; (%n.mdiv;)*&gt; allows the body element to be
          empty, which might be useful in some editing/creation situations. Used by: music
          Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.mdivLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ending">
               <desc>Alternative ending. The scoredef element is allowed so that an ending may
          have its own meta-data without the overhead of child
          &amp;lt;section&gt;s. Div sub-elements are not allowed within ending in
          order to avoid collisions with the brackets that are usually displayed over
          endings. Endings may *not* contain endings. Used by: model.endingLike ending
          Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
                  <rng:ref name="att.link.internal"/>
                  <rng:ref name="att.anl.ending"/>
                  <rng:ref name="att.ges.ending"/>
                  <rng:ref name="att.log.ending"/>
                  <rng:ref name="att.vis.ending"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.sectionPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="group">
               <desc>The group element enables the gathering of multiple documents into a
          single file. Because its model contains the music element, each of the documents
          can have its own front and back matter. Used by: music group Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:choice>
                     <rng:ref name="music"/>
                     <rng:ref name="group"/>
                  </rng:choice>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="music"/>
                        <rng:ref name="group"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="grpsym">
               <desc>Group symbol, i.e., a brace or bracket. This element may be used instead
          of the staffgrp element's symbol attribute when exact placement or editorial
          details for the brace must be recorded. Used by: staffgrp Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.grpsym"/>
                  <rng:ref name="att.vis.grpsym"/>
                  <rng:ref name="att.ges.grpsym"/>
                  <rng:ref name="att.anl.grpsym"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="instrdef">
               <desc>Default MIDI instrument declaration. This element provides a starting or
          default instrument declaration for a staff, a group of staves, or a layer. MIDI
          prog elements may then change the instrument as necessary. Used by: instrdefLike
          Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="label">
               <desc>Staff, staffgrp, or grpsym label Used by: model.labelLike Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="layer">
               <desc>Layer (voice). The n attribute should be used to establish a connection
          back to the appropriate layerdef element. Usually, the topmost layer is "1",
          next is "2", etc. *regardless of voicing*). If the n attribute is omitted,
          encoding order is presumed to match the layer order. Of course, if data is
          supplied for only a subset of layers, the n attribute must be supplied. Used by:
          model.layerLike Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.layer"/>
                  <rng:ref name="att.vis.layer"/>
                  <rng:ref name="att.ges.layer"/>
                  <rng:ref name="att.anl.layer"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.layerPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="layerdef">
               <desc>Container for layer (e.g. voice) meta-information. Used by: layerdefLike
          Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.log.layerdef"/>
                  <rng:ref name="att.vis.layerdef"/>
                  <rng:ref name="att.ges.layerdef"/>
                  <rng:ref name="att.anl.layerdef"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mdiv">
               <desc>The mdiv element may contain one or both of 2 possible views of the
          music. The score view is the traditional full and open score while the parts
          view contains each performer's view of the score; that is, his part. These 2
          views are necessary because it is not always possible or desirable to generate
          one from the other. The score and parts elements are placed here and not
          directly within the body element because score and part characteristics may
          change from mdiv to mdiv. For example, the 2nd movement of a symphony may
          require different performing forces (and therefore different score and part
          layout) than the other movements. Another possible model is &amp;lt;!ELEMENT
          mdiv (score?, parts?, sourcedesc*)&gt; which allows meta-data to accompany
          an mdiv. However, this creates a dependency between the meiBase DTD and the
          meiHead DTD. The mdiv may be recursively nested in order to represent music
          which exhibits this kind of structure. For example, an opera is normally divided
          into acts, which are in turn divided into scenes. This may be represented by the
          following markup: &amp;lt;mdiv&gt; &amp;lt;- the opera
          &amp;lt;mdiv&gt; &amp;lt;- act I &amp;lt;mdiv&gt;
          &amp;lt;- scene i &amp;lt;mdiv&gt; &amp;lt;- scene ii
          &amp;lt;/mdiv&gt; &amp;lt;mdiv&gt; &amp;lt;- act II
          &amp;lt;mdiv&gt; &amp;lt;- scene i &amp;lt;mdiv&gt;
          &amp;lt;- scene ii &amp;lt;/mdiv&gt; &amp;lt;/mdiv&gt; Used
          by: body mdiv Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:choice>
                     <rng:group>
                        <rng:optional>
                           <rng:ref name="model.scoreLike"/>
                        </rng:optional>
                        <rng:optional>
                           <rng:ref name="model.partsLike"/>
                        </rng:optional>
                     </rng:group>
                     <rng:zeroOrMore>
                        <rng:ref name="model.mdivLike"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="part">
               <desc>A part is an alternative visual rendition of the score from a particular
          performer's point of view. Part elements are not used in the score to indicate
          voice leading. Next attributes on event elements should be used for this
          purpose. Part elements are useful for encoding individual parts when there is no
          score, such as early music part books, when the music has non-aligning barlines,
          when different layout, such as page turns, are needed for the score and parts,
          or for accommodating software that requires part-by-part encoding. When assembly
          of the parts into a score is desired and there are non-aligning barlines,
          barlines which indicate points of alignment across all the parts should be
          marked as 'controlling', while non-aligning ones should be marked as 'non-
          controlling'. Used by: model.partLike Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.part"/>
                  <rng:ref name="att.vis.part"/>
                  <rng:ref name="att.ges.part"/>
                  <rng:ref name="att.anl.part"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.scorePart"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="parts">
               <desc>Parts view of the mdiv. Used by: partsLike Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.parts"/>
                  <rng:ref name="att.vis.parts"/>
                  <rng:ref name="att.ges.parts"/>
                  <rng:ref name="att.anl.parts"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.partLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pgfoot1">
               <desc>A running footer on the first page. This element is a specialized form of
          the fw element. Auto-generated page numbers may be indicated with a processing
          instruction. The pgheadN and pgfootN elements should *not* be used to encode
          textual notes! Used by: model.pgmetaLike.score Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pgfoot2">
               <desc>A running header on the pages following the first. This element is a
          specialized form of the fw element. Auto-generated page numbers may be indicated
          with a processing instruction. The pgheadN and pgfootN elements should *not* be
          used to encode textual notes! Used by: model.pgmetaLike.score Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pghead1">
               <desc>A running header on the first page. This element is a specialized form of
          the fw element for capturing the table-formatted textual data that often appears
          on the first page of printed music. It may also be used for similarly formatted
          material in manuscripts. The pgheadN and pgfootN elements should *not* be used
          to encode textual notes! Auto- generated page numbers may be indicated with a
          processing instruction. Used by: model.pgmetaLike.score Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pghead2">
               <desc>A running header on the pages following the first. This element is a
          specialized form of the fw element. The pgheadN and pgfootN elements should
          *not* be used to encode textual notes! Auto-generated page numbers may be
          indicated with a processing instruction. Used by: model.pgmetaLike.score Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sb">
               <desc>System break. Allowing staffdef content, i.e., &lt;!ENTITY %
          content.sb ''&gt; &lt;!ELEMENT %n.sb; (staffdef)*&gt;, here would
          make it possible to record layout changes without requiring these changes to be
          made at section boundaries. However, it would also allow meter and key changes,
          which is probably undesirable. Used by: model.milestoneLike.music Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.sb"/>
                  <rng:ref name="att.vis.sb"/>
                  <rng:ref name="att.ges.sb"/>
                  <rng:ref name="att.anl.sb"/>
               </attList>
               <content>
                  <rng:optional>
                     <rng:ref name="custos"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="score">
               <desc>Full score view of the mdiv. Since the measure element is optional, a
          score may consist entirely of pagebreaks, each of which points to a page image.
          Div elements are allowed preceding and following sections of music data in order
          to accommodate blocks of explanatory text. Used by: model.scoreLike Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.score"/>
                  <rng:ref name="att.vis.score"/>
                  <rng:ref name="att.ges.score"/>
                  <rng:ref name="att.anl.score"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.scorePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="scoredef">
               <desc>Container for score meta-information. Used by: model.scoredefLike Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.log.scoredef"/>
                  <rng:ref name="att.vis.scoredef"/>
                  <rng:ref name="att.ges.scoredef"/>
                  <rng:ref name="att.anl.scoredef"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.alignLike"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.chordtableLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.symboltableLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.keysigLike"/>
                  </rng:optional>
                  <rng:ref name="model.pgmetaLike.score"/>
                  <rng:choice>
                     <rng:optional>
                        <rng:ref name="model.staffgrpLike"/>
                     </rng:optional>
                     <rng:optional>
                        <rng:ref name="model.staffdefLike"/>
                     </rng:optional>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="section">
               <desc>The section element contains actual music data. The linking attributes
          are available here so that this element can point to external media objects or
          to related internal elements, such as annotations. Used by: model.rdgPart
          section Module: meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
                  <rng:ref name="att.link.internal"/>
                  <rng:ref name="att.log.section"/>
                  <rng:ref name="att.vis.section"/>
                  <rng:ref name="att.ges.section"/>
                  <rng:ref name="att.anl.section"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.sectionPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staff">
               <desc>Staff. The n attribute is a connection back to the appropriate staffdef
          element. If the n attribute is omitted, encoding order is presumed to match the
          staff order. Of course, if data is supplied for only a subset of staves, the n
          attribute must be supplied. Used by: model.staffLike Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.staff"/>
                  <rng:ref name="att.vis.staff"/>
                  <rng:ref name="att.ges.staff"/>
                  <rng:ref name="att.anl.staff"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.staffPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staffdef">
               <desc>Container for staff meta-information. Used by: model.rdgPart Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.log.staffdef"/>
                  <rng:ref name="att.vis.staffdef"/>
                  <rng:ref name="att.ges.staffdef"/>
                  <rng:ref name="att.anl.staffdef"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.keysigLike"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.instrdefLike"/>
                        <rng:ref name="model.layerdefLike"/>
                        <rng:ref name="model.staffdefPart.multiplyDefinable"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staffgrp">
               <desc>A group of staves. Bracketed staff groups may contain other bracketed or
          braced staff groups or single staves. See Read, p. 35-38, examples p. 434, 438.
          System is the more proper name for this concept (Read, p. 37-38). Split staffgrp
          into bracket and brace elements? Used by: staffgrpLike staffgrp Module:
          meiStructure</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.staffgrp"/>
                  <rng:ref name="att.vis.staffgrp"/>
                  <rng:ref name="att.ges.staffgrp"/>
                  <rng:ref name="att.anl.staffgrp"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="grpsym"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.staffgrpLike"/>
                        <rng:ref name="model.staffdefLike"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="grpsym"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="syllable">
               <desc>The syllable element is used only for neume notation. Most neume notation
          can be thought of as "neumed text". Used by: model.eventLike.neume Module:
          meiNeumes</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.syllablePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ineume">
               <desc>The interrupted neume element is provided for the encoding of neume
          notation. Used by: model.eventLike.neume Module: meiNeumes</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.ineume"/>
                  <rng:ref name="att.vis.ineume"/>
                  <rng:ref name="att.ges.ineume"/>
                  <rng:ref name="att.anl.ineume"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.neumeModifierLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="uneume">
               <desc>A single, uninterrupted neume sign. While ineume is allowed here as part
          of the model.events class, it is unlikely that an uninterrupted neume containing
          an interrupted neume is a meaningful construct. Used by: model.eventLike.neume
          Module: meiNeumes</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.log.uneume"/>
                  <rng:ref name="att.vis.uneume"/>
                  <rng:ref name="att.ges.uneume"/>
                  <rng:ref name="att.anl.uneume"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.neumeModifierLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="nota">
               <desc>A single pitched event in the mensural repertoire. The nota element is
          allowed to contain other events for situations where a single written note may
          be representative of a group of performed notes. The accid and artic
          sub-elements may be used instead of the note element's attributes when accid and
          artic represent first-class objects, e.g. when they require attributes, such as
          x and y location attributes. Similarly, the syl sub-element may be used instead
          of the syl attribute. The verse sub-element may be used to group text syllables
          by verse. Used by: model.eventLike.mensural Module: meiMensural</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.nota"/>
                  <rng:ref name="att.vis.nota"/>
                  <rng:ref name="att.ges.nota"/>
                  <rng:ref name="att.anl.nota"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sylLike"/>
                        <rng:ref name="model.verseLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pausa">
               <desc>A rest in the mensural repertoire. Used by: model.eventLike.mensural
          Module: meiMensural</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.pausa"/>
                  <rng:ref name="att.vis.pausa"/>
                  <rng:ref name="att.ges.pausa"/>
                  <rng:ref name="att.anl.pausa"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="measure">
               <desc>Measure. "In Western notation a vertical line drawn through the staff to
          mark off metrical units. Hence also the metrical unit thus indicated, which in
          American usage is called 'measure'. English usage often relies on context alone
          to make the distinction clear (e.g. 'up to the double bar', 'the end of the
          bar'), but 'bar-line' is also common." (New Grove) In MEI, the measure element
          is also a linking element that uses attributes to connect the MEI document to an
          external electronic object or to another location within the MEI instance. Any
          number of alternative encodings for the measure (ossia) can be included. Used
          by: model.measureLike Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.internal"/>
                  <rng:ref name="att.link.external"/>
                  <rng:ref name="att.log.measure"/>
                  <rng:ref name="att.vis.measure"/>
                  <rng:ref name="att.ges.measure"/>
                  <rng:ref name="att.anl.measure"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.measurePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ossia">
               <desc>The term "ossia" indicates an alternative, usually simpler, version of a
          measure *present in the source being transcribed*. An ossia may be treated as a
          substitute for the measure, in which case it is rendered on the current staff,
          or it may be rendered in addition to the measure's contents, in which case it is
          rendered above the staff on a reduced-size staff. Used by: model.ossiaLike
          Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.ossia"/>
                  <rng:ref name="att.vis.ossia"/>
                  <rng:ref name="att.ges.ossia"/>
                  <rng:ref name="att.anl.ossia"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.measurePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="beam">
               <desc>Beam. A container for a series of explicitly beamed events (Read, p.
          80-94) which begins and ends entirely within a measure. For beams which cross
          the barline, use the beamspan element. Beaming may be indicated for an entire
          score, part or section by using the beamgroup attribute on these elements.
          Secondary beams may be broken explicitly using the breaksec attribute. Stem
          direction determines whether beams are centered between notes with alternating
          stems (Read, p. 88-89). Used by: model.eventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.beam"/>
                  <rng:ref name="att.vis.beam"/>
                  <rng:ref name="att.ges.beam"/>
                  <rng:ref name="att.anl.beam"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike.common"/>
                        <rng:ref name="model.eventLike.cmn"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="beatrpt">
               <desc>A repeated single beat (Read, p. 223-224) Used by: model.eventLike.cmn
          Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.beatrpt"/>
                  <rng:ref name="att.vis.beatrpt"/>
                  <rng:ref name="att.ges.beatrpt"/>
                  <rng:ref name="att.anl.beatrpt"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="bend">
               <desc>Bend (stretching a string to make it sound higher than normal). The bend
          element can also be used for scoop, plop, falloff, and doit performance effects.
          It should *not* be used for l.v. (laissez vibrer) indications. Precise
          performance data that differs from the logical events in a measure may be
          recorded within the bend element. Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.bend"/>
                  <rng:ref name="att.vis.bend"/>
                  <rng:ref name="att.ges.bend"/>
                  <rng:ref name="att.anl.bend"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="rest"/>
                        <rng:ref name="tuplet"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="btrem">
               <desc>Bowed tremolo (Read, p. 393-394) is a rapid alternation on a single pitch
          or chord. This element should also be used for wind double and triple tonguing
          and for flutter tonguing when these are expressed as tremolandi. Used by:
          model.eventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.btrem"/>
                  <rng:ref name="att.vis.btrem"/>
                  <rng:ref name="att.ges.btrem"/>
                  <rng:ref name="att.anl.btrem"/>
               </attList>
               <content>
                  <rng:choice>
                     <rng:ref name="chord"/>
                     <rng:ref name="note"/>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="chord">
               <desc>Chord, a simultaneous sounding of 2 or more notes in the same voice *with
          the same duration*. (Read, p. 69) Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.chord"/>
                  <rng:ref name="att.vis.chord"/>
                  <rng:ref name="att.ges.chord"/>
                  <rng:ref name="att.anl.chord"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="artic"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ftrem">
               <desc>Fingered tremolo (Read, p. 235-238) is a rapid alternation between a pair
          of notes (or chords or perhaps between a note and a chord) that are (usually)
          farther apart than a major second. For rapid alternation between notes on the
          same pitch (bowed tremolo, double &amp; triple tonguing, and flutter
          tonguing) use the btrem element. Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.ftrem"/>
                  <rng:ref name="att.vis.ftrem"/>
                  <rng:ref name="att.ges.ftrem"/>
                  <rng:ref name="att.anl.ftrem"/>
               </attList>
               <content>
                  <rng:choice>
                     <rng:group>
                        <rng:ref name="chord"/>
                        <rng:choice>
                           <rng:ref name="chord"/>
                           <rng:ref name="note"/>
                        </rng:choice>
                     </rng:group>
                     <rng:group>
                        <rng:ref name="note"/>
                        <rng:choice>
                           <rng:ref name="chord"/>
                           <rng:ref name="note"/>
                        </rng:choice>
                     </rng:group>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="gliss">
               <desc>Glissando (Read, p. 243-245, 397-398). Sometimes called a 'slide'. More
          precise performance data may be recorded within the gliss element. Used by:
          model.eventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.gliss"/>
                  <rng:ref name="att.vis.gliss"/>
                  <rng:ref name="att.ges.gliss"/>
                  <rng:ref name="att.anl.gliss"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="rest"/>
                        <rng:ref name="tuplet"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="halfmrpt">
               <desc>Half-measure repeat sign Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.halfmrpt"/>
                  <rng:ref name="att.vis.halfmrpt"/>
                  <rng:ref name="att.ges.halfmrpt"/>
                  <rng:ref name="att.anl.halfmrpt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="note">
               <desc>Note (Read, p. 63), a single pitched event. The note element is allowed
          to contain other events for situations where a single written note may be
          representative of a group of performed notes. The accid and artic sub-elements
          may be used instead of the note element's attributes when accid and artic
          represent first-class objects, e.g. when they require attributes, such as x and
          y location attributes. Similarly, the syl sub-element may be used instead of the
          syl attribute. The verse sub-element may be used to group text syllables by
          verse. Used by: model.eventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.note"/>
                  <rng:ref name="att.vis.note"/>
                  <rng:ref name="att.ges.note"/>
                  <rng:ref name="att.anl.note"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.verseLike"/>
                        <rng:ref name="model.sylLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rest">
               <desc>Rest (Read, p. 96-102), i.e. a non-sounding event, found in the source
          being transcribed. Do not confuse this element with the space element which is
          used as an aid for visual alignment. Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.rest"/>
                  <rng:ref name="att.vis.rest"/>
                  <rng:ref name="att.ges.rest"/>
                  <rng:ref name="att.anl.rest"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tuplet">
               <desc>Tuplet (Read, p. 187-215), bowed tremolo (Read, p. 394) &amp; double,
          triple, or flutter tonguing (Read, p. 348-349). The beam sub-element is allowed
          so that custom beaming may be indicated, i.e. a septuplet may be divided into a
          group of 3 plus a group of 4 notes. Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.tuplet"/>
                  <rng:ref name="att.vis.tuplet"/>
                  <rng:ref name="att.ges.tuplet"/>
                  <rng:ref name="att.anl.tuplet"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike.common"/>
                        <rng:ref name="model.eventLike.cmn"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mrest">
               <desc>Complete measure rest in any meter (Read, p. 97-98). The numbering of
          consecutive measures of rest may be controlled via the multi.number attribute on
          the scoredef or staffdef elements. Used by: model.eventLike.cmn.measureFilling
          Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.mrest"/>
                  <rng:ref name="att.vis.mrest"/>
                  <rng:ref name="att.ges.mrest"/>
                  <rng:ref name="att.anl.mrest"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mrpt">
               <desc>A repeated measure (Read, p. 224-225). The numbering of consecutive
          measures of rest may be controlled via the multi.number attribute on the
          scoredef or staffdef elements. Used by: model.eventLike.cmn.measureFilling
          Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.mrpt"/>
                  <rng:ref name="att.vis.mrpt"/>
                  <rng:ref name="att.ges.mrpt"/>
                  <rng:ref name="att.anl.mrpt"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mrpt2">
               <desc>2-measure repeat sign Used by: model.eventLike.cmn.measureFilling Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.mrpt2"/>
                  <rng:ref name="att.vis.mrpt2"/>
                  <rng:ref name="att.ges.mrpt2"/>
                  <rng:ref name="att.anl.mrpt2"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mspace">
               <desc>Complete measure of space in any meter. The numbering of consecutive
          measures of space may be controlled via the multi.number attribute on the
          scoredef or staffdef elements. Used by: model.eventLike.cmn.measureFilling
          Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.mspace"/>
                  <rng:ref name="att.vis.mspace"/>
                  <rng:ref name="att.ges.mspace"/>
                  <rng:ref name="att.anl.mspace"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="multirest">
               <desc>Multiple measures of rest. Used by: model.eventLike.cmn.measureFilling
          Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.multirest"/>
                  <rng:ref name="att.vis.multirest"/>
                  <rng:ref name="att.ges.multirest"/>
                  <rng:ref name="att.anl.multirest"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="multirpt">
               <desc>Multiple repeated measures. Read (p. 225-226) says repeats of more than 2
          measures should be written out using repeat signs. Used by:
          model.eventLike.cmn.measureFilling Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.multirpt"/>
                  <rng:ref name="att.vis.multirpt"/>
                  <rng:ref name="att.ges.multirpt"/>
                  <rng:ref name="att.anl.multirpt"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="arpeg">
               <desc>Arpeggiation, roll (Read, p. 241-243). Used by:
          model.controleventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.arpeg"/>
                  <rng:ref name="att.vis.arpeg"/>
                  <rng:ref name="att.ges.arpeg"/>
                  <rng:ref name="att.anl.arpeg"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="beamspan">
               <desc>Alternative element for encoding beams, especially useful for beams which
          extend across barlines. Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.beamspan"/>
                  <rng:ref name="att.vis.beamspan"/>
                  <rng:ref name="att.ges.beamspan"/>
                  <rng:ref name="att.anl.beamspan"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="breath">
               <desc>The breathmark element is a specialized form of, i.e., syntactic sugar
          for, dir/@type="breathmark" with "," as its PCDATA content. Used by:
          model.controleventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.breath"/>
                  <rng:ref name="att.vis.breath"/>
                  <rng:ref name="att.ges.breath"/>
                  <rng:ref name="att.anl.breath"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="fermata">
               <desc>The fermata element is a specialized form of, i.e., syntactic sugar for,
          dir/@type="fermata" with &amp;ferm; or &amp;uferm; as its PCDATA
          content. Used by: model.controleventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.fermata"/>
                  <rng:ref name="att.vis.fermata"/>
                  <rng:ref name="att.ges.fermata"/>
                  <rng:ref name="att.anl.fermata"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="hairpin">
               <desc>Hairpin indicates continuous dynamics expressed on the score as graphics,
          e.g. &lt; and &gt;. See Read, p. 250-255. Used by:
          model.controleventLike.cmn Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.hairpin"/>
                  <rng:ref name="att.vis.hairpin"/>
                  <rng:ref name="att.ges.hairpin"/>
                  <rng:ref name="att.anl.hairpin"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="harppedal">
               <desc>Harp pedal diagram Used by: model.controleventLike.instruments Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.harppedal"/>
                  <rng:ref name="att.vis.harppedal"/>
                  <rng:ref name="att.ges.harppedal"/>
                  <rng:ref name="att.anl.harppedal"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="octave">
               <desc>Octave displacement. Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.octave"/>
                  <rng:ref name="att.vis.octave"/>
                  <rng:ref name="att.ges.octave"/>
                  <rng:ref name="att.anl.octave"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="pedal">
               <desc>Piano pedal mark (Read, p. 317-318). Used by:
          model.controleventLike.instruments Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.pedal"/>
                  <rng:ref name="att.vis.pedal"/>
                  <rng:ref name="att.ges.pedal"/>
                  <rng:ref name="att.anl.pedal"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="reh">
               <desc>Rehearsal mark (Read, p. 443). The content model uses a subset of
          %model.textphraseLike.limited. If the entire rehearsal mark is boxed or circled,
          the enclose attribute is preferred over a rend sub-element. Used by:
          model.controleventLike.common Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.reh"/>
                  <rng:ref name="att.vis.reh"/>
                  <rng:ref name="att.ges.reh"/>
                  <rng:ref name="att.anl.reh"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="lb"/>
                        <rng:ref name="model.rendLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="slur">
               <desc>Slur, 2 notes performed legato (Read, p. 265-266). The slur element will
          use either tstamp, duration, and place attributes or start, end, and bulge
          attributes. It is a semantic error not to specify one of these groups of
          attributes. The slur and tie elements may be used instead of the slur.* and
          tie.* attributes provided on chord and note elements when 1) they are required
          by software, or 2) multiple, alternative slurs are needed. Normally, a slur has
          only 2 participating events - the starting and ending notes/chords. Used by:
          model.controleventLike.common Module: meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.slur"/>
                  <rng:ref name="att.vis.slur"/>
                  <rng:ref name="att.ges.slur"/>
                  <rng:ref name="att.anl.slur"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tie">
               <desc>Tie (Read, p. 110-111, 122). Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.tie"/>
                  <rng:ref name="att.vis.tie"/>
                  <rng:ref name="att.ges.tie"/>
                  <rng:ref name="att.anl.tie"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tupletspan">
               <desc>Alternative element for encoding tuplets, especially useful for those
          which extend across barlines. Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.tupletspan"/>
                  <rng:ref name="att.vis.tupletspan"/>
                  <rng:ref name="att.ges.tupletspan"/>
                  <rng:ref name="att.anl.tupletspan"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="lyrics">
               <desc>Lyrics. The staff attribute gives the staff to which the lyrics are
          attached. The rhythm of the lyrics will be taken from the notes of that staff.
          If there is more than 1 layer on that staff, the layer attribute may be used to
          indicate the layer from which the rhythm should be taken. Used by:
          model.controleventLike.cmn Module: meiLyrics</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.log.lyrics"/>
                  <rng:ref name="att.vis.lyrics"/>
                  <rng:ref name="att.ges.lyrics"/>
                  <rng:ref name="att.anl.lyrics"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="verse"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="verse">
               <desc>Lyric verse. The lb element is allowed here in order to facilitate
          karaoke applications. The func attribute on lb may be used to distinguish true
          line ends from line group ends for these applications. Used by:
          model.noteModifierLike model.notaModifierLike model.neumeModifierLike Module:
          meiLyrics</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
                  <rng:ref name="att.log.verse"/>
                  <rng:ref name="att.vis.verse"/>
                  <rng:ref name="att.ges.verse"/>
                  <rng:ref name="att.anl.verse"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="dir"/>
                        <rng:ref name="dynam"/>
                        <rng:ref name="tempo"/>
                        <rng:ref name="space"/>
                     </rng:choice>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:ref name="syl"/>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="lb"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="syl">
               <desc>Individual lyric syllable. Used by: model.noteModifierLike
          model.notaModifierLike model.rdgPart Module: meiLyrics</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.syl"/>
                  <rng:ref name="att.vis.syl"/>
                  <rng:ref name="att.ges.syl"/>
                  <rng:ref name="att.anl.syl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mordent">
               <desc>Events may be contained within mordent in order to record precise
          performance data. (Read, p. 245-246) Used by: model.ornamentLike.cmn Module:
          meiCMNOrnaments</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.mordent"/>
                  <rng:ref name="att.vis.mordent"/>
                  <rng:ref name="att.ges.mordent"/>
                  <rng:ref name="att.anl.mordent"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="trill">
               <desc>Trill (Read, p. 232-235). Events may be contained within trill in order
          to record precise performance data. Used by: model.ornamentLike.cmn Module:
          meiCMNOrnaments</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.trill"/>
                  <rng:ref name="att.vis.trill"/>
                  <rng:ref name="att.ges.trill"/>
                  <rng:ref name="att.anl.trill"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="turn">
               <desc>Turn (Read, p. 246-247). Events may be contained within turn in order to
          record precise performance data. Whether the turn is accented or unaccented may
          be inferred from the timestamp - accented turns occur directly on the affected
          beat, unaccented ones do not. Used by: model.ornamentLike.cmn Module:
          meiCMNOrnaments</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.turn"/>
                  <rng:ref name="att.vis.turn"/>
                  <rng:ref name="att.ges.turn"/>
                  <rng:ref name="att.anl.turn"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="barre">
               <desc>An indication of fingering in a chord tablature grid. The from and to
          attributes should contain the id of a chordmember element. Used by: chorddef
          Module: meiHarmony</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="fret">req<valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                     </valList>
                  </attDef>
                  <attDef ident="from">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chorddef">
               <desc>Chord/tablature definition. An individual chord in the chord table. An id
          isn't required here but harm elements can only reference a particular chorddef
          via an id. Therefore, if a chorddef will ever be referenced, an id is necessary.
          The pos (position) attribute is provided in order to create displayable chord
          tablature grids. (Read, p. 409-410) Used by: chordtable Module:
          meiHarmony</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="pos" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="chordmember"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="barre"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="chordmember">
               <desc>Chord member. An individual pitch in a chord. The fing and fret
          attributes are provided in order to create displayable chord tablature grids.
          The inth (harmonic interval) attribute gives the number of 1/2 steps above the
          bass. Of course, for the bass note itself, inth should be set to '0'. The inth
          attribute may be used to provide "playable" chords. Used by: chordmember Module:
          meiHarmony</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fing" usage="opt">
                     <valList type="closed">
                        <valItem ident="x"/>
                        <valItem ident="o"/>
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                     </valList>
                  </attDef>
                  <attDef ident="fret" usage="opt">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                     </valList>
                  </attDef>
                  <attDef ident="inth" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname">req<datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chordtable">
               <desc>Chord/tablature look-up table. A table may be shared between mei
          instances through the use of an external parsed entity containing the look-up
          table to be shared. Used by: model.chordtableLike Module: meiHarmony</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="chorddef"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="harm">
               <desc>Indication of harmony, e.g. chord names, tablature grids, harmonic
          analysis, figured bass. Read, p. 411. The %model.textphraseLike.limited entity
          is employed here instead of %model.textphrase in order to disallow the use of
          the pb sub-element. Used by: model.controleventLike.cmn Module:
          meiHarmony</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.log.harm"/>
                  <rng:ref name="att.vis.harm"/>
                  <rng:ref name="att.ges.harm"/>
                  <rng:ref name="att.anl.harm"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="curve">
               <desc>Curve. The x1,y1 and x2,y2 attributes identify the two terminal points of
          the curve. If the startid or endid attributes are present, then the x,y and
          x2,y2 coordinates are relative to the xy coordinates of the referenced
          element(s). Otherwise, they are assumed to be absolute page coordinate
          references. The bulge or, alternatively, the bezier attribute, describe the
          shape of the curve. The bulge attribute describes the curve as a set of distance
          values above or below an imaginary line connecting the endpoints of the curve
          while the bezier attribute records the placement of Bezier control points as a
          series of space-separated xy coordinate pairs, eg. 19 45 -32 118. The bulge
          attribute must contain one or more values of the %NUMBER type. Either the bezier
          attribute or the bulge and xy coordinates are required. Used by:
          model.graphicprimitiveLike Module: meiUserSymbols</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.color"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.startendid"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.xy.required"/>
                  <rng:ref name="att.xy2.required"/>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="line">
               <desc>Line. The x,y and x2,y2 attributes identify the two terminal points of
          the line. Text content of the line element, e.g. 'gliss.', may be rendered with
          the line. If the startid or endid attributes are present, then the x,y and x2,y2
          coordinates are relative to the xy coordinates of the referenced element(s).
          Otherwise, they are assumed to be absolute page coordinate references. Used by:
          model.graphicprimitiveLike Module: meiUserSymbols</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.color"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.startendid"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.xy.required"/>
                  <rng:ref name="att.xy2.required"/>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="symbol">
               <desc>A reference to a previously defined symbol. The x and y attributes
          identify the starting point, e.g. "hotspot" of the symbol. If the startid
          attribute is present, then the xy coordinates are relative to the xy coordinates
          of the referenced element. Otherwise, they are assumed to be absolute page
          coordinate references. The ref attribute must contain the id of a symboldef
          element. The scale attribute indicates that the printed output must be scaled by
          the specified percentage. Used by: model.graphicprimitiveLike Module:
          meiUserSymbols</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.color"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.xy.required"/>
                  <attDef ident="ref">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="symboldef">
               <desc>Declaration of an individual symbol. Used by: symboltable Module:
          meiUserSymbols</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.graphicprimitiveLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="symboltable">
               <desc>Symboltable contains individual, user-defined symbols. Like a chord
          table, a symboltable may be shared between mei instances through the use of an
          external parsed entity containing the symboltable to be shared. Used by:
          model.symboltableLike Module: meiUserSymbols</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="symboldef"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="app">
               <desc>An app (apparatus) element contains one or more alternative encodings.
          The alternatives may be thought of as exclusive or as parallel. The type
          attribute may contain any convenient descriptive word, describing the extent of
          the variation (e.g. note, phrase, measure, etc.), its text-critical significance
          (e.g. significant, accidental, unclear), or the nature of the variation or the
          principles required to understand it (e.g. lectio difficilior, usus auctoris,
          etc.) Used by: model.apparatusLike Module: meiCritApp</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:ref name="rdg"/>
                  <rng:zeroOrMore>
                     <rng:ref name="rdg"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rdg">
               <desc>Reading. Since a reading can be a multi-measure section, the scoredef
          element is allowed so that a reading may have its own meta- data without the
          overhead of child sections. The measure sub-element is declared in the meiBase
          DTD and the pb sub-element is declared in the meiShared DTD. The app sub-element
          is permitted in order to allow nested sub-variants. Used by: app Module:
          meiCritApp</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.crit"/>
                  <rng:ref name="att.typed"/>
                  <rng:ref name="att.link.common"/>
                  <rng:ref name="att.link.external"/>
                  <rng:ref name="att.link.internal"/>
                  <rng:ref name="att.anl.rdg"/>
                  <rng:ref name="att.ges.rdg"/>
                  <rng:ref name="att.log.rdg"/>
                  <rng:ref name="att.vis.rdg"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.rdgPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="accessdesc">
               <desc>Description of the access that may be obtained. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.availabilityPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="acqsource">
               <desc>Source from which access to this item may be obtained, e.g. vendor,
          distributor, etc. The %model.textphraseLike.limited entity is used here in order
          to disallow the pb element. Used by: model.availabilityPart Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="altmeiid">
               <desc>The altmeiid element may contain a bibliographic identifier that does not
          fit within the meihead id attribute, for example because the id does not fit the
          definition of an XML id or because multiple identifiers are needed. Used by:
          meihead Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="appinfo">
               <desc>Appinfo (application information) groups information about applications
          which have acted upon the MEI file. This is not to be confused with applications
          which were used to create the MEI file. These are recorded in the projectdesc
          element. Used by: model.encodingPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="application"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="application">
               <desc>Application provides information about an application which has acted
          upon the document. Used by: appinfo Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.date"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="version" usage="opt"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="name"/>
                  </rng:oneOrMore>
                  <rng:choice>
                     <rng:zeroOrMore>
                        <rng:ref name="model.ptrLike"/>
                     </rng:zeroOrMore>
                     <rng:zeroOrMore>
                        <rng:ref name="model.pLike"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="availability">
               <desc>Availability information/qualifications. Used by: model.pubstmtPart
          Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:ref name="model.availabilityPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="change">
               <desc>Individual change within the revision description. The resp attribute
          contains a pointer to an element containing info about the person/entity
          responsible for change. The date element is declared in the meiShared DTD. Used
          by: revisiondesc Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:ref name="respstmt"/>
                  <rng:ref name="changedesc"/>
                  <rng:ref name="model.dateLike"/>
               </content>
            </elementSpec>
            <elementSpec ident="changedesc">
               <desc>Description of a revision. The p element is declared in the meiShared
          DTD. Used by: change Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="classcode">
               <desc>A classification code, i.e., LC subject or call number, or a thesaurus or
          ontology citation. The source of controlled-vocabulary terms used in the
          keywords element. Used by: classification Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="classification">
               <desc>The classification element groups information which describes the nature
          or topic of a musical work in terms of a standard classification scheme,
          thesaurus, etc. Used by: model.profiledescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="classcode"/>
                        <rng:ref name="keywords"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="condition">
               <desc>The physical condition of an item, particularly any variances between the
          physical makeup of the item and that of other copies of the same item (e.g.,
          missing pages, plates, etc.). Condition may reflect other aspects of the
          physical condition of the item as well (e.g., brittleness, faded images, etc.).
          The %model.textphraseLike.limited entity is used here in order to disallow the
          pb element. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="correction">
               <desc>States how and under what circumstances corrections have been made in the
          music/text. Used by: model.editorialdeclPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="method" usage="opt">
                     <valList type="closed">
                        <valItem ident="silent"/>
                        <valItem ident="tags"/>
                     </valList>
                  </attDef>
                  <attDef ident="status" usage="opt">
                     <valList type="closed">
                        <valItem ident="high"/>
                        <valItem ident="medium"/>
                        <valItem ident="low"/>
                        <valItem ident="unknown"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="creation">
               <desc>Non-bibliographic creation details for the work being encoded, in
          narrative form. The model.textcomponent class elements are declared in the
          meiShared DTD. Used by: model.profiledescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.textcomponentLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="dimensions">
               <desc>Physical dimensions of a bibliographic source. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. There are no height and width sub-elements; however, the num element
          may be used. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="editionstmt">
               <desc>Container for meta-data pertaining to the edition. Used by: filedesc
          source Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="edition"/>
                     <rng:zeroOrMore>
                        <rng:ref name="respstmt"/>
                     </rng:zeroOrMore>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="editorialdecl">
               <desc>Editorialdecl should be used to provide details of editorial principles
          and practices applied during the encoding of musical text. Used by:
          model.encodingPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:choice>
                     <rng:oneOrMore>
                        <rng:ref name="model.pLike"/>
                     </rng:oneOrMore>
                     <rng:group>
                        <rng:oneOrMore>
                           <rng:ref name="model.editorialdeclPart"/>
                        </rng:oneOrMore>
                        <rng:zeroOrMore>
                           <rng:ref name="model.pLike"/>
                        </rng:zeroOrMore>
                     </rng:group>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="encodingdesc">
               <desc>Documents the relationship between an electronic file and the source or
          sources from which it was derived as well as applications used in the
          encoding/editing process. Used by: meihead Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:ref name="model.encodingPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="exhibithist">
               <desc>Exhibition history is a record of public exhibitions, including dates,
          venues, etc. The %model.textphraseLike.limited entity is used here in order to
          disallow the pb element. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="extent">
               <desc>The extent element is used to express size in terms other than physical
          dimensions, such as number of pages, number of records in file, number of bytes,
          performance duration for music, audio recordings and visual projections, etc.
          For physical dimensions use the dimensions element. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.physdescPart filedesc Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="filedesc">
               <desc>Filedesc contains a full bibliographic description of the MEI file.
          Extent in this context is file size. Used by: meihead Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:ref name="titlestmt"/>
                  <rng:optional>
                     <rng:ref name="editionstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="extent"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="fingerprint"/>
                  </rng:optional>
                  <rng:ref name="pubstmt"/>
                  <rng:optional>
                     <rng:ref name="seriesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="notesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="sourcedesc"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="fingerprint">
               <desc>Traditionally, an identifier constructed by combining groups of
          characters transcribed from specified pages of a printed item. For an electronic
          item, however, the fingerprint should be a checksum. The checksum makes it
          possible to signal differences between copies of the item. Used by: filedesc
          Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="hand">
               <desc>The hand element is used to define each distinct scribe or handwriting
          style. The initial attribute indicates whether this is the first or main scribe
          of the document. The medium attribute describes the writing medium, e.g.,
          'pencil', or the tint or type of ink, e.g. 'brown'. The resp attribute contains
          an ID reference to an element containing the name of the editor or transcriber
          responsible for identifying the hand. The characteristics of the hand,
          particularly those related to the quality of the writing, such as 'shaky',
          'thick', etc. may be described within the content of the hand element. Used by:
          handlist Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="initial" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="medium" usage="opt"/>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="handlist">
               <desc>The handlist element contains a series of &lt;hand&gt; elements
          listing the different hands of the source. Used by: model.physdescPart Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="hand"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="inscription">
               <desc>An inscription added to an item, such as a bookplate, a note designating
          the item as a gift, and/or the author's signature. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="interpretation">
               <desc>Describes the scope of any analytic or interpretive information added to
          the musical text in addition to the transcription. Used by:
          model.editorialdeclPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="keywords">
               <desc>Collection of keywords or text phrases which describe the work. Used by:
          classification Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="term"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="language">
               <desc>The name of a language. The language of text elements may be related to
          this element via its id, which may take the form of a code, drawn from a coded
          list, such as RFC 3066 or iso639-2b. The authority attribute should contain the
          name of the list from which a controlled value is taken. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: langusage Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="authority" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="langusage">
               <desc>Langusage describes the languages, sublanguages, dialects, etc.,
          represented within the encoded work. Used by: model.profiledescPart Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="language"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="normalization">
               <desc>Indicates the extent of normalization or regularization of the original
          source carried out in converting it to electronic form. Used by:
          model.editorialdeclPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="method" usage="opt">
                     <valList type="closed">
                        <valItem ident="silent"/>
                        <valItem ident="tags"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="notesstmt">
               <desc>Collects together any bibliographic notes providing information
          additional to that recorded in other parts of the bibliographic description.
          Used by: filedesc Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.annotLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physdesc">
               <desc>Physical description of a source for the electronic edition. Dedicatory
          text and title page features may be encoded here when they are not transcribed
          as part of the front or back matter; i.e., when they are considered to be
          meta-data. Used by: source Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.physdescPart"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physloc">
               <desc>Location of the source within a repository, e.g., shelf mark or other
          locational information. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physmedium">
               <desc>Physmedium is used to record the physical materials used in the source,
          such as ink and paper. The authority attribute should contain the name of the
          list from which a controlled value is taken. The %model.textphraseLike.limited
          entity is used here in order to disallow the pb element. Used by:
          model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="authority" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="price">
               <desc>The cost of access. The %model.textphraseLike.limited entity is used here
          in order to disallow the pb element. Used by: model.availabilityPart Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="profiledesc">
               <desc>Profiledesc provides a detailed description of the non- bibliographic
          aspects of the creation of a work, specifically the languages and sublanguages
          used, the situation in which it was produced, e.g. the participants, setting,
          reception history, etc. Used by: meihead Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:ref name="model.profiledescPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="projectdesc">
               <desc>Project-level meta-data describing the aim or purpose for which the
          electronic file was encoded, funding agencies, etc. together with any other
          relevant information concerning the process by which it was assembled or
          collected. Used by: model.encodingPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="provenance">
               <desc>The record of ownership or custodianship of an item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.listLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pubstmt">
               <desc>Publication meta-data. Used by: filedesc source Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:choice>
                     <rng:optional>
                        <rng:ref name="unpub"/>
                     </rng:optional>
                     <rng:zeroOrMore>
                        <rng:ref name="model.pubstmtPart"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="resp">
               <desc>Contains a phrase describing the nature of a person's intellectual
          responsibility. The authority attribute should contain the name of the list from
          which a controlled value is taken. Used by: respStmt Module: meiHeader</desc>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="respstmt">
               <desc>A statement of responsibility names one or more individuals, groups, or
          in rare cases, mechanical processes, responsible for creation or realization of
          the intellectual or artistic content. Used by: model.pubstmtPart model.respLike
          titlestmt editionstmt seriesstmt Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="resp"/>
                        <rng:ref name="model.nameLike"/>
                        <rng:ref name="model.nameLike.agent"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="revisiondesc">
               <desc>The revision history for an MEI file. Used by: meihead Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="change"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="samplingdecl">
               <desc>Contains a prose description of the rationale and methods used in
          sampling texts in the creation of a corpus or collection. Used by:
          model.encodingPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="segmentation">
               <desc>Describes the principles according to which the musical text has been
          segmented, for example into movements, sections, etc. Used by:
          model.editorialdeclPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="seriesstmt">
               <desc>Groups information about the series, if any, to which a publication
          belongs. In this context, the title element records the series title, the
          respStmt element records the person or group responsible for the series, and the
          identifier element contains a series identifier. The list element should be used
          when it is necessary to enumerate the contents of the series. The seriesstmt is
          provided within seriesstmt for the description of a sub-series. Used by:
          filedesc source seriesstmt Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="title"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="respstmt"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:ref name="identifier"/>
                  </rng:zeroOrMore>
                  <rng:choice>
                     <rng:ref name="model.listLike"/>
                     <rng:zeroOrMore>
                        <rng:ref name="seriesstmt"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="source">
               <desc>Source contains a bibliographic description of a source for the
          electronic file. When there are multiple sources, the data attribute may be used
          to link the description to a particular data element, i.e., mdiv, part, section,
          ending, reading, measure, staff or layer. Within source, the extent element may
          be used when only a portion of the source, pages 1-3 for example, are encoded.
          If extent is absent, then the entire source is presumed to have been encoded.
          Multiple physdesc sub-elements may be used to describe the physically separate
          parts of a single source. Used by: sourcedesc Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="data" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="identifier"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="titlestmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="editionstmt"/>
                  </rng:optional>
                  <rng:ref name="pubstmt"/>
                  <rng:optional>
                     <rng:ref name="physdesc"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="seriesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="notesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="langusage"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="classification"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="sourcedesc">
               <desc>Sourcedesc is a container for the descriptions of the source(s) used in
          the creation of the electronic file. The sourcedesc element is required where
          the MEI file is a transcription of existing music. In the case where the data is
          originally created in MEI form, the sourcedesc element is not required. Used by:
          meihead Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="source"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stdvals">
               <desc>Specifies the format used when standardized date or number values are
          supplied. Used by: model.editorialdeclPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sysreq">
               <desc>System requirements for using the electronic item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.availabilityPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="term">
               <desc>Individual keywords or phrases which describe the work. The classcode
          attribute may be used to link the term to a terminological source given in a
          classcode element. The %model.textphraseLike.limited entity is used here in
          order to disallow the pb element. The term element may include other term
          elements in order to allow the creation of coordinated terms; i.e., terms
          created from a combination of other, independent terms. Used by: keywords
          Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
                  <attDef ident="classcode" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="term"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="titlestmt">
               <desc>Container for title and responsibility meta-data. Used by: filedesc
          source Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="title"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="respstmt"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="treatmenthist">
               <desc>A record of the treatment the item has undergone (e.g., deacidification,
          restoration, etc.) Treatment history may also comprise details of the treatment
          process (e.g., chemical solutions used, techniques applied, etc.), the date the
          treatment was applied, etc. The %model.textphraseLike.limited entity is used
          here in order to disallow the pb element. Used by: model.physdescPart Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="treatmentsched">
               <desc>Scheduled treatment, e.g. deacidification, restoration, etc., for an
          item. The %model.textphraseLike.limited entity is used here in order to disallow
          the pb element. Used by: model.physdescPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="unpub">
               <desc>The unpub element should be used to explicitly indicate that a
          bibliographic source is unpublished. Used by: pubstmt Module:
          meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="userestrict">
               <desc>Usage restrictions, e.g., copyright statement in the filedesc, or
          (re-)publication rights in the source element. The %model.textphraseLike.limited
          entity is used here in order to disallow the pb element. Used by:
          model.availabilityPart Module: meiHeader</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.bibl"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="cc">
               <desc>Parameter/control change. The n attribute specifies parameter number,
          while val contains the parameter value. Each must fall in the range 0-127. A
          sampling of controllers and their numbers: 0 Bank Select MSB 1 Modulation 2
          Breath Control 5 Portamento Time 7 Main Volume 10 Pan 11 Expression 32 Bank
          Select LSB 64 Sustain Pedal (0=up, 127=down) 65 Portamento Pedal (0=off, 127=on)
          91 Reverb 93 Chorus Depth 120 All Sounds Off (0) 121 Reset All Controllers (0)
          123 All Notes Off (0) Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="val">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chan">
               <desc>Channel assignment Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chanpr">
               <desc>Channel pressure/after touch. The n attribute must be in the range 0-127.
          Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="cue">
               <desc>Cue point Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="hex">
               <desc>Arbitrary MIDI data in hex Used by: model.midieventLike Module:
          meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="marker">
               <desc>Marker meta event Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="metatext">
               <desc>Text meta event Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="midi">
               <desc>Container for a collection of elements which contain information useful
          when generating MIDI output. The n attribute can be used to differentiate
          between multiple MIDI data streams, e.g. quantized/unquantized, straight/swing,
          ornamented/as notated, etc. Used by: model.midiLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.log.midi"/>
                  <rng:ref name="att.vis.midi"/>
                  <rng:ref name="att.ges.midi"/>
                  <rng:ref name="att.anl.midi"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="cc"/>
                        <rng:ref name="chan"/>
                        <rng:ref name="chanpr"/>
                        <rng:ref name="cue"/>
                        <rng:ref name="hex"/>
                        <rng:ref name="marker"/>
                        <rng:ref name="metatext"/>
                        <rng:ref name="noteoff"/>
                        <rng:ref name="noteon"/>
                        <rng:ref name="port"/>
                        <rng:ref name="prog"/>
                        <rng:ref name="seqnum"/>
                        <rng:ref name="trkname"/>
                        <rng:ref name="vel"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="noteoff">
               <desc>Note-off Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="noteon">
               <desc>Note-on Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="port">
               <desc>MIDI port. The n attribute must be in the range 0-127. Used by:
          model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="prog">
               <desc>Program change/new instrument. The n attribute must be in the range
          0-127. Used by: model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="seqnum">
               <desc>Sequence number. The n attribute must be in the range 0-65535 Used by:
          model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="trkname">
               <desc>Track/sequence name Used by: model.midieventLike Module:
          meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="vel">
               <desc>Note-on/off velocity. For on velocity, the attribute must be in the range
          1-127. For off velocity, the n attribute must be in the range 0-127. Used by:
          model.midieventLike Module: meiMIDI</desc>
               <attList>
                  <rng:ref name="att.common.anl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.midi.event"/>
                  <attDef ident="form">req<valList type="closed">
                        <valItem ident="on"/>
                        <valItem ident="off"/>
                     </valList>
                  </attDef>
                  <attDef ident="num">req</attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="add">
               <desc>Marks an addition to the musical text. The add element contains material
          inserted by an author, scribe, annotator, or corrector. The resp attribute
          contains a ID reference to an element containing the editor or transcriber
          responsible for identifying the hand of the addition. The cert attribute
          signifies the degree of certainty ascribed to the identification of the hand of
          the addition. The hand attribute signifies the hand of the agent which made the
          addition. Used by: model.transcriptionLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.trans"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="choice">
               <desc>Choice Used by: model.editLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="choice"/>
                        <rng:ref name="model.choicePart"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="corr">
               <desc>Correction contains the correct form of an apparent erroneous passage.
          The resp attribute contains an ID reference to an element containing the name of
          the editor or transcriber responsible for suggesting the correction held as the
          content of the &lt;corr&gt; element. If the correction was made in the
          source, resp should be used to identify the hand of the corrector. Used by:
          model.transcriptionLike model.choicePart Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.trans"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="damage">
               <desc>Contains an area of damage to the carrier. In the case of damage
          resulting from an identifiable cause, the agent attribute signifies the
          causative agent. The degree attribute signifies the degree of damage according
          to a convenient scale. The &lt;damage&gt; tag with this attribute should
          only be used where the text may be read with some confidence; data supplied from
          other sources should be tagged as &lt;supplied&gt;. The extent attribute
          indicates approximately how much text is in the damaged area, in notes,
          measures, inches, or any appropriate unit, where this cannot be deduced from the
          contents of the tag. For example, the damage may span structural divisions in
          the text so that the tag must then be empty of content. In the case of damage
          (deliberate defacement, etc.) assignable to an identifiable hand, the hand
          attribute signifies the hand responsible for the damage. Used by:
          model.transcriptionLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="degree" usage="opt"/>
                  <attDef ident="extent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="del">
               <desc>Del contains information deleted, marked as deleted, or otherwise
          indicated as superfluous or spurious in the copy text by an author, scribe,
          annotator, or corrector. The resp attribute contains an ID reference to an
          element containing the name of the editor or transcriber responsible for
          identifying the hand of the deletion. The cert attribute signifies the degree of
          certainty ascribed to the identification of the hand of the deletion. The hand
          of the agent which made the deletion should be pointed to using the hand
          attribute. The rend attribute may be used to record the method used to make the
          deletion (overstrike, strike[through], etc.) or how the deleted matter should be
          displayed. Used by: model.transcriptionLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.trans"/>
                  <attDef ident="rend" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="gap">
               <desc>Indicates a point where material has been omitted in a transcription,
          whether as part of sampling practice or for editorial reasons described in the
          MEI header. When material is omitted because it is illegible or inaudible,
          &lt;unclear&gt; should be used instead. Similarly, use
          &lt;damage&gt; if the omission is due to damage and &lt;del&gt;
          if the omission is because the material is marked as deleted, or otherwise
          indicated as superfluous or spurious in the copy text by an author, scribe,
          annotator, or corrector. An indication of how much material has been omitted
          from the transcription may be recorded in the extent attribute. The unit
          attribute names the unit used for describing the extent of the gap. The reason
          attribute gives the reason for omission. Sample values include 'sampling',
          'irrelevant', 'cancelled'. The resp attribute contains an ID reference to an
          element containing the name of the editor, transcriber or encoder responsible
          for the decision not to provide any transcription of the material and hence the
          application of the &lt;gap&gt; tag. Used by: model.editLike Module:
          meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <attDef ident="extent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reason" usage="opt"/>
                  <attDef ident="unit" usage="opt"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="handshift">
               <desc>Marks the beginning of a passage written in a new hand, or of a change in
          the scribe, writing style, ink or character of the document hand. The character
          attribute describes characteristics of the hand, particularly those related to
          the quality of the writing, e.g., 'shaky', 'thick', regular'. A description of
          the tint or type of ink, e.g. 'brown' or the writing medium, e.g. 'pencil', may
          be placed in the medium attribute. The new hand may be identified using the new
          attribute, while the previous hand may be recorded in the old attribute. The
          resp attribute contains an ID reference to an element containing the name of the
          editor or transcriber responsible for identifying the change of hand. Used by:
          model.editLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.facsimile"/>
                  <attDef ident="character" usage="opt"/>
                  <attDef ident="medium" usage="opt"/>
                  <attDef ident="new" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="old" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="orig">
               <desc/>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.typed"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="reg">
               <desc/>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="restore">
               <desc>Restore indicates restoration of musical material to an earlier state by
          cancellation of an editorial or authorial marking or instruction. The desc
          (description) attribute gives a prose description of the means of restoration,
          'stet' or 'strike-down', for example. The cert attribute signifies the degree of
          certainty ascribed to the identification of the hand of the restoration. The
          type attribute may be used to indicate the action cancelled by the restoration.
          The resp attribute contains an ID reference to an element containing the name of
          the editor or transcriber responsible for identifying the hand of the
          restoration. The hand attribute signifies the hand of the agent which made the
          restoration. Used by: model.transcriptionLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.trans"/>
                  <rng:ref name="att.typed"/>
                  <attDef ident="desc" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sic">
               <desc>Contains apparently incorrect or inaccurate musical material. A
          correction for the apparent error may be given in an accompanying child or
          sibling corr element. Used by: model.transcriptionLike model.choicePart Module:
          meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="subst">
               <desc>Substitution Used by: model.editLike Module: meiEditTrans</desc>
               <attList>
                  <attDef ident="meiform" usage="opt">
                     <defaultVal>subst</defaultVal>
                     <valList type="closed">
                        <valItem ident="subst"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="model.transcriptionLike"/>
                  <rng:oneOrMore>
                     <rng:ref name="model.transcriptionLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="supplied">
               <desc>Supplied contains musical material supplied by the transcriber or editor
          in place of text which cannot be read, either because of physical damage or loss
          in the original or because it is illegible for any reason. When the presumed
          loss of text arises from an identifiable cause, agent signifies the causative
          agent. When the presumed loss of text arises from action (partial deletion,
          etc.) assignable to an identifiable hand, the hand attribute signifies the hand
          responsible for the action. The reason attribute indicates why the text has to
          be supplied, e.g. 'overbinding', 'faded ink', 'lost folio', 'omitted in
          original', etc. The source attribute contains the source of the supplied text.
          Used by: model.transcriptionLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.facsimile"/>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="reason" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="titlepage">
               <desc>The titlepage element contains a transcription of the title page of a
          text. It may be used within the physdesc element when no other transcription is
          provided. Used by: model.frontPart model.physdescPart Module:
          meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.facsimile"/>
                  <rng:ref name="att.lang"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.milestoneLike.text"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="unclear">
               <desc>Unclear contains musical material which cannot be transcribed with
          certainty because it is illegible or inaudible in the source. Where the
          difficulty in transcription arises from an identifiable cause, the agent
          attribute signifies the causative agent. The cert attribute signifies the degree
          of certainty ascribed to the transcription of the text contained within the
          &lt;unclear&gt; element. Where the difficulty in transcription arises
          from action (partial deletion, etc.) assignable to an identifiable hand, the
          hand attribute signifies the hand responsible for the action. The reason
          attribute indicates why the material is difficult to transcribe. The resp
          attribute indicates the individual responsible for the transcription of the
          word, phrase, or passage contained with the &lt;unclear&gt; element.
          Used by: model.transcriptionLike model.choicePart Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.edit"/>
                  <rng:ref name="att.facsimile"/>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reason" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="section"/>
                        <rng:ref name="measure"/>
                        <rng:ref name="staff"/>
                        <rng:ref name="layer"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="facsimile">
               <desc>Facsimile contains a representation of some written source in the form of
          a set of images rather than as transcribed or encoded text. The source attribute
          may be used to link the collection of images with a particular source. Used by:
          model.facsimileLike Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.graphicLike"/>
                        <rng:ref name="surface"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="surface">
               <desc>The surface element defines a written surface in terms of a rectangular
          coordinate space, optionally grouping one or more graphic representations of
          that space, and rectangular zones of interest within it. Used by: zone Module:
          meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.coordinated"/>
                  <attDef ident="start" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="figdesc"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="zone"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="zone">
               <desc>The zone element defines a rectangular area contained within a surface
          element. Used by: surface Module: meiEditTrans</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.coordinated"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="figdesc"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="timeline">
               <desc>Timeline provides a set of ordered points in time to which musical
          elements can be linked in order to create a temporal alignment of those
          elements. The origin attribute designates the origin of the timeline, i.e. the
          time at which it begins. It must point to one of the when elements in its
          content. Units specifies the unit of time corresponding to the value of the
          interval attribute of the timeline or of its constituent points in time. The
          mediacontent attribute is provided in order to link the timeline to a particular
          external media file, such as an audio file. The medialength attribute specifies
          the length of the external media file in terms of the units attribute. Used by:
          model.alignLike Module: meiLinkAlign</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="mediacontent" usage="opt">
                     <datatype>
                        <rng:ref name="data.URI"/>
                     </datatype>
                  </attDef>
                  <attDef ident="medialength" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="origin">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="units" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="when"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="when">
               <desc>The when element indicates a point in time either absolutely (using the
          absolute attribute), or relative to other elements in the same timeline element
          (using the interval and since attributes). The absolute attribute provides an
          absolute value for the time associated with this point. It is required for the
          element designated as the origin by the parent timeline. Unit specifies the unit
          of time in which the @interval value is expressed, if this is not inherited from
          the parent timeline. Interval specifies a positive numeric time interval. The
          since attribute identifies the reference point for determining the time of the
          current when element, which is obtained by adding the interval to the time of
          the reference point. It should point to another when element in the same
          timeline. If this attribute is omitted, and the absolute attribute is not
          specified, then the reference point is understood to be the preceding when
          element. Used by: timeline Module: meiLinkAlign</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="absolute" usage="opt"/>
                  <attDef ident="interval" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="since" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="unit" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mei">
               <desc>The names of the potential document elements, i.e., mei, meicorpus,
          meihead, and music, should not be changed in order to assure an absolute minimum
          level of MEI compliance. The version attribute contains the version of the DTD
          used by the instance. The document element for a single document contains a
          header and data.</desc>
               <attList>
                  <attDef ident="id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="meihead"/>
                  <rng:ref name="music"/>
               </content>
            </elementSpec>
            <elementSpec ident="meicorpus">
               <desc>The document element for a group of documents, each with its own complete
          header, contains a header for the group, and one or more mei elements.</desc>
               <attList>
                  <attDef ident="id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="meihead"/>
                  <rng:oneOrMore>
                     <rng:ref name="mei"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="meihead">
               <desc>The meihead element contains general information about the encoded
          file.</desc>
               <attList>
                  <rng:ref name="att.bibl"/>
                  <rng:ref name="att.common"/>
                  <rng:ref name="att.lang"/>
                  <attDef ident="type" usage="opt">
                     <valList type="closed">
                        <valItem ident="music"/>
                        <valItem ident="corpus"/>
                     </valList>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="altmeiid"/>
                  </rng:zeroOrMore>
                  <rng:ref name="filedesc"/>
                  <rng:ref name="model.headerPart"/>
                  <rng:optional>
                     <rng:ref name="revisiondesc"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="music">
               <desc>This element is a container for everything else in the document besides
          the header. The front and back elements are declared in the meiText
          DTD.</desc>
               <attList>
                  <rng:ref name="att.common"/>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.facsimileLike"/>
                  </rng:zeroOrMore>
                  <rng:ref name="model.musicPart"/>
               </content>
            </elementSpec>
         </schemaSpec>
      </body>
   </text>
</TEI>