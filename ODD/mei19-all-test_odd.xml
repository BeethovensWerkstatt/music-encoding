<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_all.rng" type="xml"?><TEI xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
     xmlns="http://www.tei-c.org/ns/1.0"
     xmlns:xhtml="http://www.w3.org/1000/xhtml"
     xmlns:rng="http://relaxng.org/ns/structure/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>MEI</title>
            <respStmt xml:id="RV">
               <resp>automated and manual editing</resp>
               <name>Raffaele Viglianti</name>
            </respStmt>
         </titleStmt>
         <publicationStmt>
            <p>Converted from rng through an XSLT script written by Raffaele Viglianti</p>
         </publicationStmt>
         <sourceDesc>
            <p>created on 2009-07-16T17:07:25.968+01:00</p>
         </sourceDesc>
      </fileDesc>
      <revisionDesc>
         <change who="#RV" when="2009-08-02">Added modules automatically converted from DTD using: Scripts/Modules_DTD2ODD.py</change>
      </revisionDesc>
   </teiHeader>
   <text>
      <front>
         <divGen type="toc"/>
      </front>
      <body>
         <p>MEI</p>
         <schemaSpec ident="mei" start="mei" ns="http://www.edirom.de/ns/mei">
            
            
            <!-- Modules -->
            
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="shared" type="pe"
               ident="MEI.shared">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="header" type="pe"
               ident="MEI.header">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="structure" type="pe"
               ident="MEI.structure">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="analysis" type="pe"
               ident="MEI.analysis">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="gestural" type="pe"
               ident="MEI.gestural">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="visual" type="pe"
               ident="MEI.visual">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="text" type="pe"
               ident="MEI.text">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="figures" type="pe"
               ident="MEI.figures">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="namesdates" type="pe"
               ident="MEI.namesdates">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="neumes" type="pe"
               ident="MEI.neumes">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="mensural" type="pe"
               ident="MEI.mensural">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="cmn" type="pe"
               ident="MEI.cmn">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="midi" type="pe"
               ident="MEI.midi">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="cmnornaments" type="pe"
               ident="MEI.cmnornaments">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="lyrics" type="pe"
               ident="MEI.lyrics">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="harmony" type="pe"
               ident="MEI.harmony">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="usersymbols" type="pe"
               ident="MEI.usersymbols">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="facsimile" type="pe"
               ident="MEI.facsimile">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="edittrans" type="pe"
               ident="MEI.edittrans">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="critapp" type="pe"
               ident="MEI.critapp">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="linkalign" type="pe"
               ident="MEI.linkalign">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            <macroSpec xmlns="http://www.tei-c.org/ns/1.0" module="mei" xml:id="ptrrefs" type="pe"
               ident="MEI.ptrrefs">
               <gloss>Insert short description here. Example: MEI analytical mechanisms</gloss>
               <desc>Insert description here. Example: controls the inclusion of elements and attribute
                  declarations for analytical mechanisms.</desc>
               <content>
                  <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="'INCLUDE'"/>
               </content>
               <remarks>
                  <p>Usage remarks</p>
               </remarks>
            </macroSpec>
            
            <!--
                                ****
                                Definition of Macros. Datatypes and Attribute Value Lists
                                Number of definitions found in original RNG: 90
                                ****
                            --><macroSpec type="dt" ident="data.BEND.AMOUNT">
               <desc>
    Either a decimal value or a token. The decimal values are limited
    to .25, .5, .75, or 1, while the token values are restricted to
    'full'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:data type="decimal">
                        <rng:param name="pattern">1|\.25|\.5|\.75</rng:param>
                     </rng:data>
                     <rng:data type="token">
                        <rng:param name="pattern">full</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BEAT">
               <desc>
    A beat location, i.e., [0-9]+(\.?[0-9]*)? The value must fall
    between 0 and the numerator of the time signature + 1, where 0
    represents the left barline and the upper bound represents the right
    barline.  For example, in 12/8 the value must be in the range from 0 to
    13.
  </desc>
               <content>
                  <rng:data type="decimal">
                     <rng:param name="minInclusive">0</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.COLOR">
               <desc>
    EITHER a hexadecimal color value, ie., x[0-9A-Fa-f]{6,6} OR a
    descriptive word, i.e., aqua, black, blue, fuchsia, gray, green, lime,
    maroon, navy, olive, purple, red, silver, teal, white, or yellow, for
    colors defined by the HTML 4.01 specification.
  </desc>
               <content>
                  <rng:choice>
                     <rng:data type="token">
                        <rng:param name="pattern">(x[0-9A-Fa-f]{6,6}|aqua|black|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow)</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DEGREES">
               <desc>
    360th-unit measure of a cirle's circumference; optionally signed
    decimal number, i.e., [+-]?[0-9]+(\.?[0-9]*)?
  </desc>
               <content>
                  <rng:data type="decimal"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INTEGERNONNEGATIVE">
               <desc>
    unsigned positive integer values including '0', i.e., [0-9]+
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INTEGERPOSITIVE">
               <desc>
    unsigned positive integer values excluding '0', i.e., 1 to
    infinity.
  </desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ISODATE">
               <desc> ISO date formats: </desc>
               <content>
                  <rng:choice>
                     <rng:data type="date"/>
                     <rng:data type="gYear"/>
                     <rng:data type="gMonth"/>
                     <rng:data type="gDay"/>
                     <rng:data type="gYearMonth"/>
                     <rng:data type="gMonthDay"/>
                     <rng:data type="time"/>
                     <rng:data type="dateTime"/>
                     <rng:data type="token">
                        <rng:param name="pattern">[0-9.,DHMPRSTWYZ/:+\-]+</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ISOTIME">
               <desc>
     ISO 24-hour time format: HH:MM:SS.ss, i.e.,
    [0-9][0-9]:[0-9][0-9]:[0-9][0-9](\.?[0-9]*)?
  </desc>
               <content>
                  <rng:data type="time"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MEASUREBEAT">
               <desc>
    A duration expressed as a count of measures plus a beat location,
    i.e., [0-9]+m *\+ *[0-9]+(\.?[0-9]*)?, e.g., dur="1m + 3.5" indicates a
    duration of 1 measure plus 3 and one half beats or, in other words, on
    the 2nd half of the 3rd beat of the next measure. The measure number
    must be in the range of 0 to the number of remaining measures and the
    beat number must be in the range from 0 to the numerator of the time
    signature plus 1.  For example, for an event starting in the first
    measure of a piece containing 6 measures in 6/8, the measure number must
    be between 0 to 5 and the beat number must be within the range from 0 to
    7, e.g., "4m+3".
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">([0-9]+m *\+ *)?[0-9]+(\.?[0-9]*)?</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MIDITEMPO">
               <desc>
    MIDI quarter notes per minute: positive integer in the range
    10-1000
  </desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">10</rng:param>
                     <rng:param name="maxInclusive">1000</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.NUMBER">
               <desc>
    optionally signed decimal number, i.e., [+-]?[0-9]+(\.?[0-9]*)?
  </desc>
               <content>
                  <rng:data type="decimal"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.NUMBERPOSITIVE">
               <desc>
    unsigned positive decimal values excluding '0', i.e., 1 to
    infinity.
  </desc>
               <content>
                  <rng:data type="decimal">
                     <rng:param name="minInclusive">1</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.OCTAVE.DIS">
               <desc>
    The amount of octave displacement; that is, '8' (as in '8va' for
    1 octave), '15' (for 2 octaves), or rarely '22' (for 3 octaves).
  </desc>
               <content>
                  <rng:data type="integer">
                     <rng:param name="pattern">8|15|22</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PERCENT">
               <desc>
    positive decimal number plus '%', i.e., [0-9]+(\.?[0-9]*)?\%
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[0-9]+(\.?[0-9]*)?%</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.RATIO">
               <desc>
     a ratio, i.e., [0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)?  For example,
    "40:7.2319"
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)?</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STRINGNUMBER">
               <desc>
    In string tablature, the number of the string to be played, i.e.,
    [1-9]+.
  </desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TEMPOVALUE">
               <desc>
    Beats (meter signature denominator) per minute, e.g. 120.
  </desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TSTAMPOFFSET">
               <desc>
    A positive or negative offset from the value given in the tstamp
    attribute. The datatype of this attribute must be the same as that of
    the tstamp, tstamp.ges, or tstamp.real attribute.
  </desc>
               <content>
                  <rng:text/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.URI">
               <desc>
    a Uniform Resource Identifier, see [RFC2396]
  </desc>
               <content>
                  <rng:data type="anyURI"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ACCIDENTAL.EXPLICIT">
               <desc>
    Accidental attribute values: s = sharp, f = flat, ss = dblsharp,
    x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n =
    natural, nf = naturalflat, ns = naturalsharp. ss indicates the use
    of 2 sharp signs, while x indicates the use of a single double
    sharp. nf and ns are used to cancel dbflats and dblsharps,
    respectively. su = sharp note qtr. tone up, sd = sharp note qtr.
    tone down, fu = flat note qtr. tone up, fd = flat note qtr. tone
    down, nu = natural note qtr. tone up, nd = natural note quarter
    tone down. Quarter-tone accidentals listed in Read, p. 145.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>s</rng:value>
                     <rng:value>f</rng:value>
                     <rng:value>ss</rng:value>
                     <rng:value>x</rng:value>
                     <rng:value>ff</rng:value>
                     <rng:value>xs</rng:value>
                     <rng:value>tb</rng:value>
                     <rng:value>n</rng:value>
                     <rng:value>nf</rng:value>
                     <rng:value>ns</rng:value>
                     <rng:value>su</rng:value>
                     <rng:value>sd</rng:value>
                     <rng:value>fu</rng:value>
                     <rng:value>fd</rng:value>
                     <rng:value>nu</rng:value>
                     <rng:value>nd</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ACCIDENTAL.IMPLICIT">
               <desc>
    Accidental attribute values: s = sharp, f = flat, ss = dblsharp,
    x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n =
    natural, nf = naturalflat, ns = naturalsharp. ss indicates the use
    of 2 sharp signs, while x indicates the use of a single double
    sharp. nf and ns are used to cancel dbflats and dblsharps,
    respectively. su = sharp note qtr. tone up, sd = sharp note qtr.
    tone down, fu = flat note qtr. tone up, fd = flat note qtr. tone
    down, nu = natural note qtr. tone up, nd = natural note quarter
    tone down. Quarter-tone accidentals listed in Read, p. 145.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>s</rng:value>
                     <rng:value>f</rng:value>
                     <rng:value>ss</rng:value>
                     <rng:value>ff</rng:value>
                     <rng:value>n</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ARTICULATION">
               <desc>
    The following list of articulations mostly corresponds to symbols
    1D110-1D111, 1D17B-1D182, 1D185-1D189, 1D1AA-1D1AD, 1D1B3-1D1B5 from
    the Western Musical Symbols portion of the Unicode Standard, v. 3.1.
    The dot and stroke values may be used in cases where interpretation is
    not desirable.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>acc</rng:value>
                     <rng:value>stacc</rng:value>
                     <rng:value>ten</rng:value>
                     <rng:value>stacciss</rng:value>
                     <rng:value>marc</rng:value>
                     <rng:value>marc-stacc</rng:value>
                     <rng:value>acc-marc</rng:value>
                     <rng:value>loure</rng:value>
                     <rng:value>spicc</rng:value>
                     <rng:value>rip</rng:value>
                     <rng:value>doit</rng:value>
                     <rng:value>plop</rng:value>
                     <rng:value>fall</rng:value>
                     <rng:value>bend</rng:value>
                     <rng:value>flip</rng:value>
                     <rng:value>smear</rng:value>
                     <rng:value>dnbow</rng:value>
                     <rng:value>upbow</rng:value>
                     <rng:value>harm</rng:value>
                     <rng:value>snap</rng:value>
                     <rng:value>fingernail</rng:value>
                     <rng:value>damp</rng:value>
                     <rng:value>dampall</rng:value>
                     <rng:value>open</rng:value>
                     <rng:value>stop</rng:value>
                     <rng:value>dbltongue</rng:value>
                     <rng:value>trpltongue</rng:value>
                     <rng:value>heel</rng:value>
                     <rng:value>toe</rng:value>
                     <rng:value>tap</rng:value>
                     <rng:value>pluck</rng:value>
                     <rng:value>dot</rng:value>
                     <rng:value>stroke</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ARTICULATIONS">
               <desc>
    1 or more from the list given in the definition of the
    ARTICULATION entity. Changing this to CDATA, however, would allow the
    use of character entities.
  </desc>
               <content>
                  <rng:list>
                     <rng:zeroOrMore>
                        <rng:ref name="data.ARTICULATION"/>
                     </rng:zeroOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.AUGMENTDOT">
               <desc>
    Dots attribute values (number of augmentation dots) (Read,
    113-119, ex. 8-21)
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">4</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BARPLACE">
               <desc>
    Placement of barlines: 'mensur' = between staves only, 'staff'
    = between and across staves as necessary, 'takt' = short line
    above staff or through top line
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>mensur</rng:value>
                     <rng:value>staff</rng:value>
                     <rng:value>takt</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BARRENDITION">
               <desc>
    Renderings of barlines
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>dashed</rng:value>
                     <rng:value>dotted</rng:value>
                     <rng:value>dbl</rng:value>
                     <rng:value>dbldashed</rng:value>
                     <rng:value>dbldotted</rng:value>
                     <rng:value>end</rng:value>
                     <rng:value>invis</rng:value>
                     <rng:value>rptstart</rng:value>
                     <rng:value>rptboth</rng:value>
                     <rng:value>rptend</rng:value>
                     <rng:value>single</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BEAM">
               <desc>
    Beam attribute values: initial, medial, terminal. Nested beaming
    is permitted.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t][1-6]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BEAMS">
               <desc>
    1 or more from the list given in the definition of the BEAM entity.
  </desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.BEAM"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.BOOLEAN">
               <desc>
    Boolean attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>true</rng:value>
                     <rng:value>false</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CERTAINTY">
               <desc>
    Values for certainty attribute
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>high</rng:value>
                     <rng:value>medium</rng:value>
                     <rng:value>low</rng:value>
                     <rng:value>unknown</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLEFLINE">
               <desc>
    Clef line attribute values
  </desc>
               <content>
                  <rng:ref name="data.INTEGERPOSITIVE"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLEFSHAPE">
               <desc>
    Clef shape attribute values (Read, p.53-56)
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>G</rng:value>
                     <rng:value>GG</rng:value>
                     <rng:value>F</rng:value>
                     <rng:value>C</rng:value>
                     <rng:value>perc</rng:value>
                     <rng:value>TAB</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLEFTRAN">
               <desc>
    Clef trans attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>8va</rng:value>
                     <rng:value>8vb</rng:value>
                     <rng:value>15va</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CLUSTER">
               <desc>
    Tone-clusters
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>whbox</rng:value>
                     <rng:value>blbox</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.CURVERENDITION">
               <desc>
    Renderings of curves
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>medium</rng:value>
                     <rng:value>wide</rng:value>
                     <rng:value>dashed</rng:value>
                     <rng:value>dotted</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION.BASE">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>long</rng:value>
                     <rng:value>breve</rng:value>
                     <rng:value>1</rng:value>
                     <rng:value>2</rng:value>
                     <rng:value>4</rng:value>
                     <rng:value>8</rng:value>
                     <rng:value>16</rng:value>
                     <rng:value>32</rng:value>
                     <rng:value>64</rng:value>
                     <rng:value>128</rng:value>
                     <rng:value>256</rng:value>
                     <rng:value>512</rng:value>
                     <rng:value>1024</rng:value>
                     <rng:value>2048</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION.MEN">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>maxima</rng:value>
                     <rng:value>longa</rng:value>
                     <rng:value>brevis</rng:value>
                     <rng:value>semibrevis</rng:value>
                     <rng:value>minima</rng:value>
                     <rng:value>semiminima</rng:value>
                     <rng:value>fusa</rng:value>
                     <rng:value>semifusa</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.BASE"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATION.MENSURAL">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.MEN"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.DURATIONS">
               <desc>
    Logical, that is, written, duration attribute values. Whole note
    duration = '1'.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.BASE"/>
                     <rng:ref name="data.DURATION.MEN"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.ENCLOSURE">
               <desc>
    Enclosures for editorial notes and accidentals
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>paren</rng:value>
                     <rng:value>brack</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTFAMILY">
               <desc>
    Font family (for text) attribute values
    Mup-acceptable values: &lt;!ENTITY % FONTFAMILY
                         '(avantgarde|bookman|courier|helvetica|
                         newcentury|palatino|times)'&gt;
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTNAME">
               <desc>
    Font name (for text) attribute values
    Mup-acceptable values: &lt;!ENTITY % FONTNAME  '(rom|ital|bold|boldital)'&gt;
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTSTYLE">
               <desc>
    Font style (for text) attribute values. 'normal' = 'rom' in Mup.
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>ital</rng:value>
                     <rng:value>normal</rng:value>
                     <rng:value>oblique</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FONTWEIGHT">
               <desc>
    Font weight (for text) attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>bold</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.XPATH">
               <desc>
    Fragment referencing method.  Setting this entity to '%data.XPATH;' or
    '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.XPOINTER">
               <desc>
    Fragment referencing method.  Setting this entity to '%data.XPATH;' or
    '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FRAGMENT">
               <desc>
    Fragment referencing method.  Setting this entity to '%data.XPATH;' or
    '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.XPATH"/>
                     <rng:ref name="data.XPOINTER"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.FRETNUMBER">
               <desc>
    In string tablature, the fret number, i.e., [0-9]+. The value '0'
    indicates the open string.
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">9</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.GLISSANDO">
               <desc>
    Analytical glissando attribute values: i(nitial), m(edial),
    t(erminal)
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>i</rng:value>
                     <rng:value>m</rng:value>
                     <rng:value>t</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.GRACE">
               <desc>
    Do grace notes get time from the current (acc) or previous (unacc)
    one?
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>acc</rng:value>
                     <rng:value>unacc</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.HEADSHAPE">
               <desc>
    Allowed notehead shapes
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>quarter</rng:value>
                     <rng:value>half</rng:value>
                     <rng:value>whole</rng:value>
                     <rng:value>dblwhole</rng:value>
                     <rng:value>filldiamond</rng:value>
                     <rng:value>diamond</rng:value>
                     <rng:value>dwdiamond</rng:value>
                     <rng:value>fillisotriangle</rng:value>
                     <rng:value>isotriangle</rng:value>
                     <rng:value>dwhisotriangle</rng:value>
                     <rng:value>fillpiewedge</rng:value>
                     <rng:value>piewedge</rng:value>
                     <rng:value>dwhpiewedge</rng:value>
                     <rng:value>fillrectangle</rng:value>
                     <rng:value>rectangle</rng:value>
                     <rng:value>dwhrectangle</rng:value>
                     <rng:value>fillrtriangle</rng:value>
                     <rng:value>rtriangle</rng:value>
                     <rng:value>dwrtriangle</rng:value>
                     <rng:value>fillurtriangle</rng:value>
                     <rng:value>urtriangle</rng:value>
                     <rng:value>dwurtriangle</rng:value>
                     <rng:value>fillsemicircle</rng:value>
                     <rng:value>semicircle</rng:value>
                     <rng:value>dwsemicircle</rng:value>
                     <rng:value>fillslash</rng:value>
                     <rng:value>slash</rng:value>
                     <rng:value>dwslash</rng:value>
                     <rng:value>x</rng:value>
                     <rng:value>blank</rng:value>
                     <rng:value>circlex</rng:value>
                     <rng:value>cross</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INEUMENAME">
               <desc>
    Interrupted neume, i.e. neumes written as 2 or more sub-neumes
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>pessubpunctis</rng:value>
                     <rng:value>climacus</rng:value>
                     <rng:value>scandicus</rng:value>
                     <rng:value>bistropha</rng:value>
                     <rng:value>tristropha</rng:value>
                     <rng:value>pressusminor</rng:value>
                     <rng:value>pressusmaior</rng:value>
                     <rng:value>pressusliquescens</rng:value>
                     <rng:value>virgastrata</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.INEUMEFORM">
               <desc>
    Interrupted neume forms
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>liquescent1</rng:value>
                     <rng:value>liquescent2</rng:value>
                     <rng:value>tied</rng:value>
                     <rng:value>tiedliquescent1</rng:value>
                     <rng:value>tiedliquescent2</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.KEYSIGTOKEN">
               <desc>
    Interrupted neume forms
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[a-g][s|f|ss|x|ff|n|nf|ns|su|sd|fu|fd|nu|nd][0-9]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.KEYSIGNATURE">
               <desc>
    Key signature is normally indicated by a value showing where the
    key is in the circle of fifths. Mixed key signatures, e.g. those
    consisting of a mixture of flats and sharps, and key signatures with
    unorthodox placement of the accidentals (Read, p. 143) must be
    indicated by setting the key.sig attribute to 'mixed' and providing
    explicit keysig info in the key.sig.mixed attribute.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">mixed|0|[1-7][f|s]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.LAYERSCHEME">
               <desc>
    Indicates how stems should be drawn when more than one layer is
    present and stem directions are not indicated on the notes/chords
    themselves. '1' indicates that there is only a single layer on a staff.
    '2o' means there are two layers with opposing stems. '2f' indicates
    two 'free' layers; that is, opposing stems will be drawn unless one of
    the layers has 'space'. In that case, stem direction in the remaining
    layer will be determined as if there were only one layer. '3o' and
    '3f' are analogous to '2o' and '2f' with three layers allowed. What
    about more than 3 layers?
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>1</rng:value>
                     <rng:value>2o</rng:value>
                     <rng:value>2f</rng:value>
                     <rng:value>3o</rng:value>
                     <rng:value>3f</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.LIGATUREFORM">
               <desc>
    Ligature forms
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>recta</rng:value>
                     <rng:value>obliqua</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.LINERENDITION">
               <desc>
    Renderings of lines
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>narrow</rng:value>
                     <rng:value>medium</rng:value>
                     <rng:value>wide</rng:value>
                     <rng:value>dashed</rng:value>
                     <rng:value>dotted</rng:value>
                     <rng:value>wavy</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MENSURATIONSIGN">
               <desc>
    Mensuration attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>C</rng:value>
                     <rng:value>O</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.METERSIGN">
               <desc>
    Meter.sym attribute values for common-practice notation
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>common</rng:value>
                     <rng:value>cut</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MIDICHANNEL">
               <desc>
    MIDI channel numbers
  </desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="maxInclusive">16</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MIDIVALUE">
               <desc>
    MIDI values are in the following range
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">127</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MODE">
               <desc>
    Modes
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>major</rng:value>
                     <rng:value>minor</rng:value>
                     <rng:value>dorian</rng:value>
                     <rng:value>phrygian</rng:value>
                     <rng:value>lydian</rng:value>
                     <rng:value>mixolydian</rng:value>
                     <rng:value>aeolian</rng:value>
                     <rng:value>locrian</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.MUSICFONT">
               <desc>
    Music font family
  </desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.OCTAVE">
               <desc>
    Oct attribute values. The default values conform to Acoustical
    Society of America representation. Read, p. 44. The entity name is
    plural so as not to conflict with the %octave entity used in the
    definition of the octave element.
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">9</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PGSCALE">
               <desc>
    Page scale factor datatype.  Setting this to %data.RATIO; allows
    page.scale attributes to contain a virtual units to real units conversion
    ratio.
  </desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.PERCENT"/>
                     <rng:ref name="data.RATIO"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PGUNITS">
               <desc>
    Values for unit attribute
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>in</rng:value>
                     <rng:value>cm</rng:value>
                     <rng:value>mm</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHCLASS">
               <desc>
    Pclass (pitch class) attribute values
  </desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">11</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHNAME">
               <desc>
    The pitch names (gamut) used within a single octave. The default
    values conform to Acoustical Society of America representation.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[a-g]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHNAME.GES">
               <desc>
    Gestural pitch names need an additional value for when the notated
    pitch is not to be played.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[a-g]|none</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PITCHNUMBER">
               <desc>
    Pnum (pitch number, e.g. MIDI) attribute values
  </desc>
               <content>
                  <rng:ref name="data.INTEGERNONNEGATIVE"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PLIST">
               <desc>
    Participant list referencing method.  Setting this entity to '%data.XPATH;'
    or '%data.XPOINTER;' makes it possible to document the use of these methods.
  </desc>
               <content>
                  <rng:data type="IDREFS"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.PLACE">
               <desc>
    Place, i.e., relative location of musical material
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>above</rng:value>
                     <rng:value>below</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SIZE">
               <desc> 
    Size attribute values
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>normal</rng:value>
                     <rng:value>cue</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SLUR">
               <desc>
    i=initial, t=terminal. Number is used to match endpoints of the
    slur when slurs are nested or overlap, e.g. 
    &lt;note slur='i1 i2'/&gt;&lt;note slur='t1'/&gt;&lt;note slur='t2'/&gt; encodes the
    fact that two slurs begin on note 1, one which terminates on note 2
    and one which terminates on note 3. % SLUR isn't currently invoked in
    the DTD; it serves as documentation for the tokens that can be used
    where % SLURS is invoked.
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t][1-6]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SLURS">
               <desc>
    1 or more from the list given in the definition of the SLUR
    entity.
  </desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.SLUR"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.SLURDIRECTION">
               <desc>
    Slur direction
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>up</rng:value>
                     <rng:value>down</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STAFFLOC">
               <desc>
    Staff location. Staff location includes staff lines, spaces, and
    the spaces directly above and below the staff. The value ranges between
    0 (just below the staff) to 2 * number of staff lines (directly above
    the staff).  For example, on a 5-line staff the lines would be numbered
    1,3,5,7, and 9 while the spaces would be numbered 0,2,4,6,8,10.
  </desc>
               <content>
                  <rng:ref name="data.INTEGERNONNEGATIVE"/>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STEMDIRECTION">
               <desc>
    Stem direction
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>up</rng:value>
                     <rng:value>down</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STEMMODIFIER">
               <desc>
    Stem modification
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>1slash</rng:value>
                     <rng:value>2slash</rng:value>
                     <rng:value>3slash</rng:value>
                     <rng:value>4slash</rng:value>
                     <rng:value>5slash</rng:value>
                     <rng:value>6slash</rng:value>
                     <rng:value>sprech</rng:value>
                     <rng:value>z</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.STEMPOSITION">
               <desc>
    Which side of stem?
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>left</rng:value>
                     <rng:value>right</rng:value>
                     <rng:value>center</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TEMPERAMENT">
               <desc>
    Temperament
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>equal</rng:value>
                     <rng:value>just</rng:value>
                     <rng:value>mean</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TEXTRENDITION">
               <desc>
    Text renditions
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>box</rng:value>
                     <rng:value>circle</rng:value>
                     <rng:value>dblunderline</rng:value>
                     <rng:value>none</rng:value>
                     <rng:value>quoted</rng:value>
                     <rng:value>smcaps</rng:value>
                     <rng:value>strike</rng:value>
                     <rng:value>sub</rng:value>
                     <rng:value>sup</rng:value>
                     <rng:value>underline</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TIE">
               <desc>
    Tie attribute values: initial, medial, terminal
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TIEDIRECTION">
               <desc>
    Tie direction
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>up</rng:value>
                     <rng:value>down</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.TUPLET">
               <desc>
    Tuplet attribute values: initial, medial, terminal
  </desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t][1-6]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.UNEUMENAME">
               <desc>
    Basic, i.e., single, uninterrupted, neume names
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>punctum</rng:value>
                     <rng:value>virga</rng:value>
                     <rng:value>pes</rng:value>
                     <rng:value>clivis</rng:value>
                     <rng:value>torculus</rng:value>
                     <rng:value>torculusresupinus</rng:value>
                     <rng:value>porrectus</rng:value>
                     <rng:value>porrectusflexus</rng:value>
                     <rng:value>apostropha</rng:value>
                     <rng:value>oriscus</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.UNEUMEFORM">
               <desc>
    Basic, i.e., single, uninterrupted, neume names
  </desc>
               <content>
                  <rng:choice>
                     <rng:value>liquescent1</rng:value>
                     <rng:value>liquescent2</rng:value>
                     <rng:value>liquescent3</rng:value>
                     <rng:value>quilismatic</rng:value>
                     <rng:value>rectangular</rng:value>
                     <rng:value>rhombic</rng:value>
                     <rng:value>tied</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="dt" ident="data.VISUALOFFSET">
               <desc>
    Visual, i.e. ho and vo, offsets are expressed in terms of staff
    interline distance; that is, in "stepsizes", which are half the
    distance between staff lines.
  </desc>
               <content>
                  <rng:ref name="data.NUMBER"/>
               </content>
            </macroSpec>
            <!--
                                ****
                                Defintion of Attribute Classes
                                Number of definitions found in original RNG: 350
                                ****
                            --><classSpec type="atts" ident="att.alignment">
               <desc>The when attribute indicates a particular kind, i.e., temporal, correspondence. It
          should be used to point to when elements in one or more timeline elements. This class of
          attributes is unavailable unless the meiLinkAlign module is INCLUDEd.</desc>
               <attList>
                  <attDef ident="when" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.altsym">
               <desc>The altsym attribute provides a way of pointing to a user- defined symbol. It must
          contain an ID of a symboldef element elsewhere in the document.</desc>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.bibl">
               <desc>Bibliographic attributes: The analog attribute contains a reference to a field or
          element in another descriptive encoding system to which an MEI element is comparable.
          Mapping elements from one system to another may help a repository harvest selected data
          from the MEI file to build a basic catalog record. The encoding system from which fields
          are taken must be specified. When possible, subfields as well as fields should be
          specified, e.g., subfields within MARC fields.</desc>
               <attList>
                  <attDef ident="analog" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.color">
               <desc>The color attribute is used to indicate visual appearance. Do not confuse this with
          the musical term 'color' as used in pre-CMN notation.</desc>
               <attList>
                  <attDef ident="color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.common.anl">
               <desc>Common analytical attributes: corresp may be used to point to other events or
          control events that correspond to this event in some fashion. When the meiLinkAlign module
          is INCLUDEd, the when attribute is also a member of this attribute class.</desc>
               <classes>
                  <memberOf key="att.alignment"/>
               </classes>
               <attList>
                  <attDef ident="corresp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.common">
               <desc>Common attributes: Each id attribute within a document must have a unique value.
          The id attribute regularizes the naming of the element and thus facilitates building links
          between it and other resources. The n attribute may be used to provide a label (name or
          number) for the element. While its value need not be unique, it is required to be a single
          token.</desc>
               <attList>
                  <attDef ident="id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="n" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.controlevent">
               <desc>Events which rely on other events for their existence: For example, a slur/phrase
          marking must be drawn between or over a group of notes. The slur is therefore a control
          event. The layer and staff attributes allow the control event to express its scope of
          influence. The plist (participant list) attribute may contain ID references or xPointer
          fragment identifiers (depending on how % PLIST is configured) that identify logical events
          that participate in the control event, e.g., notes under a phrase mark. The tstamp
          attribute encodes the onset time of a musical feature in terms of musical time, i.e.,
          beats. The tstamp.ges attribute may be used to record the onset time in pulses per quarter
          note (ppq, MusicXML divisions, or MIDI clicks) since the start of the measure, while the
          tstamp.real attribute records the onset time as a real-time offset, i.e., HH:MM:SS.ss,
          since the beginning of the file.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="plist" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLIST"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.coordinated">
               <desc>This attribute class records position within a two-dimensional coordinate
          system.</desc>
               <attList>
                  <attDef ident="ulx" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="uly" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lrx" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lry" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.crit">
               <desc>Attributes common to all elements representing variant readings: The cause
          attribute classifies the cause for the variant reading, according to any appropriate
          typology of possible origins. The hand attribute signifies the hand responsible for a
          particular reading in a witness. The value of hand should correspond to the ID of a hand
          element given elsewhere in the document. The editor(s) responsible for asserting a
          particular reading in a witness may be recorded in the resp attribute. The value of resp
          must point to one or more of the identifiers declared in the document header, associated
          with a person asserted as responsible for some aspect of the text's creation,
          transcription, editing, or encoding. The seq attribute provides an integer indicating the
          position of this reading in a sequence, when there is reason to presume a sequence of the
          variant readings. The source attribute contains a list of one or more pointers indicating
          the sources which attest to a given reading. Each value should correspond to the ID of a
          source element given elsewhere in the document.</desc>
               <attList>
                  <attDef ident="cause" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="seq" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.date">
               <desc>Attributes common to dates: calendar indicates the system or calendar to which the
          date belongs, for example, Gregorian, Julian, Roman, Mosaic, Revolutionary, Islamic; cert
          indicates the degree of precision to be attributed to the date. from contains the starting
          point of a date range; notafter should contain an upper boundary for an uncertain date
          while notbefore should contain a lower boundary, e.g, &lt;date notbefore='1957'
          notafter='1960'&gt;Feb. 5&lt;/date&gt;; reg gives the value of the date in
          standard ISO form; to contains the end point of a date range.</desc>
               <attList>
                  <attDef ident="calendar" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="cert" usage="opt">
                     <datatype>
                        <rng:ref name="data.CERTAINTY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="from" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="notafter" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="notbefore" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reg" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.edit">
               <desc>Attributes describing the nature of an encoded scholarly intervention or
          interpretation: cert signifies the degree of certainty associated with the intervention or
          interpretation. evidence indicates the nature of the evidence supporting the reliability
          or accuracy of the intervention or interpretation. Suggested values include: 'internal',
          'external', 'conjecture'. The resp attribute indicates responsibility for the
          identification or content within the element to which it is attached. It must point to one
          or more of the identifiers declared in the document header, associated with a person
          asserted as responsible for some aspect of the text's creation, transcription, editing, or
          encoding. The source attribute contains a list of one or more pointers indicating the
          sources which support the given reading.</desc>
               <attList>
                  <attDef ident="cert" usage="opt">
                     <datatype>
                        <rng:ref name="data.CERTAINTY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="evidence" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.event">
               <desc>Attributes that apply to all written events, e.g., beam, beatrpt, chord, note, etc.
          The tstamp attribute encodes the onset time of a musical feature in terms of musical time,
          i.e., beats. The tstamp.ges attribute may be used to record the onset time in pulses per
          quarter note (ppq, MusicXML divisions, or MIDI clicks) since the start of the measure,
          while the tstamp.real attribute records the onset time as a real-time offset, i.e., in
          HH:MM:SS.ss format, since the beginning of the file.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.facsimile">
               <desc>All elements subscribing to this class may include one or more ID references to an
          image or to an image zone which corresponds to the element. This attribute class is
          unavailable unless the meiFacsimile module is INCLUDEd.</desc>
               <attList>
                  <attDef ident="facs" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.common">
               <desc>Attributes common to all linking elements: actuate defines whether a link occurs
          automatically or must be requested by the user. It is used in conjunction with the show
          attribute to determine link behavior. show defines whether a remote resource that is the
          target of a link appears at the point of the link, replaces the existing link, or appears
          in a new window. The targettype attribute allows the target resource to be characterized,
          using any convenient classification scheme or typology.</desc>
               <attList>
                  <attDef ident="actuate" usage="opt">
                     <valList type="closed">
                        <valItem ident="onLoad"/>
                        <valItem ident="onRequest"/>
                        <valItem ident="other"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="arcrole" usage="opt"/>
                  <attDef ident="role" usage="opt"/>
                  <attDef ident="show" usage="opt">
                     <valList type="closed">
                        <valItem ident="new"/>
                        <valItem ident="replace"/>
                        <valItem ident="other"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="targettype" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="title" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.external">
               <desc>Linking attributes for external referencing elements: entityref references a
          previously-declared entity which represents a complete document. The href attribute allows
          the use of an previously- undeclared URI. The fragment attribute allows one to identify
          one or more sub-parts within the document being pointed to.</desc>
               <attList>
                  <attDef ident="entityref" usage="opt">
                     <datatype>
                        <rng:data type="ENTITY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fragment" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRAGMENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="href" usage="opt">
                     <datatype>
                        <rng:ref name="data.URI"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.internal">
               <desc>Linking attributes for internal referencing elements: plist contains an ID
          reference for each of the participants in a collection of elements.</desc>
               <attList>
                  <attDef ident="plist" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLIST"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.midi.event">
               <desc>Attributes common to MIDI events: %att.controlevent is expanded here in order to
          allow only the staff, layer, and tstamp attributes from this class. The layer and staff
          attributes allow the event to express its scope of influence. tstamp encodes the onset
          time of the feature in terms of musical time, i.e., beats.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.name">
               <desc>Attributes shared by names: The authority attribute should contain the name of the
          list from which a controlled value is taken, such as the Thesaurus of Geographic Names
          (TGN), etc. The key attribute may be used to record a value which serves as a primary key
          in an external database. The reg attribute may be used to record a regularized form of the
          name.</desc>
               <attList>
                  <attDef ident="authority" usage="opt"/>
                  <attDef ident="key" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reg" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.nextprev">
               <desc>The next attribute may be used to point to the next control event(s) in a
          user-defined collection, while the prev attribute may point to the previous
          event(s).</desc>
               <attList>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.placement">
               <desc>The place attribute captures the placement of the item with respect to the staff
          with which it is associated.</desc>
               <attList>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.startendid">
               <desc>These attributes record the IDs of a sequence of elements to which the current
          element is associated. startid holds a reference to the first element in the sequence,
          while endid indicates the final element in the sequence.</desc>
               <attList>
                  <attDef ident="endid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.lang">
               <desc>Attributes common to text elements: The lang attribute should be used to identify
          the language of the word or text phrase marked. Its value must be the identifier of a
          language element supplied in the MEI header of the current document.</desc>
               <attList>
                  <attDef ident="lang" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.trans">
               <desc>Attributes for elements encoding authorial or scribal intervention when
          transcribing manuscript or similar sources: The hand attribute signifies the hand of the
          agent which made the intervention. Its value must be the ID of a hand element declared in
          the header. The seq attribute may be used to assign a sequence number related to the order
          in which the encoded features carrying this attribute are believed to have
          occurred.</desc>
               <attList>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="seq" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.typed">
               <desc>Attributes which can be used to classify or subclassify elements in any way: type
          characterizes the element in some sense, using any convenient classification scheme or
          typology. The subtype attribute may be used to provide any sub-classification for the
          element, additional to that given by its type attribute.</desc>
               <attList>
                  <attDef ident="subtype" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="type" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.typography">
               <desc>Typographical attributes: fontfam contains the name of a font- family. fontname
          records the name of the font. fontsize indicates the size of the font in points. fontstyle
          records the style of the font, i.e, italic, oblique, or normal. fontweight may be used to
          indicate bold type.</desc>
               <attList>
                  <attDef ident="fontfam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontname" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontsize" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontstyle" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontweight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset.ho">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of
          offsets from their programmatically-determined location. The ho attribute records the
          horizontal offset.</desc>
               <attList>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset.to">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of
          offsets from their programmatically-determined location. The to attribute records a
          timestamp offset.</desc>
               <attList>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset.vo">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of
          offsets from their programmatically-determined location. The vo attribute records the
          vertical offset.</desc>
               <attList>
                  <attDef ident="vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of
          offsets from their programmatically-determined location. The ho attribute records the
          horizontal offset while vo records the vertical. The to attribute holds a timestamp
          offset, the most common use of which is as an alternative to the ho attribute.</desc>
               <classes>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.visualoffset.vo"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2.ho">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of a
          pair of offsets from their programmatically- determined location. The startho and endho
          attributes record the horizontal offsets of the start and end points of the item,
          respectively.</desc>
               <attList>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2.to">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of
          of a pair of offsets from their programmatically- determined location. The startto and
          endto attributes record the timestamp offsets of the start and end points of the item,
          respectively.</desc>
               <attList>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2.vo">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of a
          pair of offsets from their programmatically- determined location. The startvo and endvo
          attributes record the vertical offsets of the start and end points of the item,
          respectively.</desc>
               <attList>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2">
               <desc>Visual offset attributes: Some items may have their location recorded in terms of
          pairs of offsets from their programmatically- determined location. The startho and endho
          attributes record the horizontal offsets of the start and end points of the item,
          respectively. Similarly, the startvo and endvo attributes record the vertical offsets of
          the start and end points of the item. The startto and endto attributes hold timestamp
          offsets, the most common use of which is as alternatives to the ho attributes.</desc>
               <classes>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.visualoffset2.vo"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.xy">
               <desc>Output coordinate attributes: Some elements may have their exact *output*
          coordinates recorded. x and y indicate where to place the rendered output. Recording the
          coordinates of a feature in a facsimile requires the use of the facs attribute.</desc>
               <attList>
                  <attDef ident="x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy.required">
               <desc>Output coordinate attributes: Some elements must have their exact *output*
          coordinates recorded. x and y indicate where to place the rendered output. Recording the
          coordinates of a feature in a facsimile requires the use of the facs attribute.</desc>
               <attList>
                  <attDef ident="x" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy2">
               <desc>Output coordinate attributes: Some elements may need 2 coordinate pairs to record
          their *output* coordinates.</desc>
               <attList>
                  <attDef ident="x2" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y2" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy2.required">
               <desc>Output coordinate attributes: Some elements must have 2 coordinate pairs to record
          their *output* coordinates.</desc>
               <attList>
                  <attDef ident="x2" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y2" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.barline">
               <desc>Analytical domain attributes: barline uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.barline">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="tstamp" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.barline">
               <desc>Logical domain attributes: The complete attribute allows the encoding of whether
          the measure preceding this barline matches the prevailing meter: a value of 'c' indicates
          a metrically complete measure, 'i' indicates a measure with not enough beats, while 'o' is
          for measures with too many beats. The control attribute indicates whether or not the
          barline is "controlling"; that is, if it indicates a point of alignment across all the
          parts. Barlines within a score are usually controlling' that is, they "line up". Barlines
          within parts may or may not be controlling. When the preceding measure contents indicate a
          repetition of a earlier measure's contents, the measref attribute may be employed to
          reference the barline preceding the contents of this earlier measure. The rend attribute
          records the appearance of the barline.</desc>
               <attList>
                  <attDef ident="complete" usage="opt">
                     <valList type="closed">
                        <valItem ident="c"/>
                        <valItem ident="i"/>
                        <valItem ident="o"/>
                     </valList>
                  </attDef>
                  <attDef ident="control" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.barline">
               <desc>Visual domain attributes: The barplace attribute records the location of the
          barline. If takt barlines are to be used, then the taktplace attribute may be used to
          denote the staff location of the shortened barline. For rendering purposes, some music
          data systems rely on measure width data. The width attribute allows for the capture of
          this data in MEI for output back to these systems.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="barplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="taktplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.clef">
               <desc>Analytical domain attributes: clef uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.clef">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.clef">
               <desc>Logical domain attributes: The shape and line attributes capture the clef symbol
          and its location on the staff. The default octave, used when the first note of a measure
          provides no oct attribute, is set by the octave.default attribute. trans encodes any
          octave offset included in the clef symbol, such as an '8' above or below the
          clef.</desc>
               <attList>
                  <attDef ident="line" usage="req">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="shape" usage="req">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.clef">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.custos">
               <desc>Logical domain attributes: The pname and oct attributes identify the location where
          the custos appears. This is usually, but not always, the same as the target pitch. The
          target pitch may be referenced using the target attribute.</desc>
               <attList>
                  <attDef ident="oct" usage="req">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="req">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="target" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.custos">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dot">
               <desc>Analytical domain attributes: dot uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dot">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.dot">
               <desc>Logical domain attributes: The form attribute records the function of the dot; that
          is dot of augmentation or dot of division. loc encodes the staff location of the
          dot.</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="aug"/>
                        <valItem ident="div"/>
                     </valList>
                  </attDef>
                  <attDef ident="loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dot">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ending">
               <desc>Analytical domain attributes: ending uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ending">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ending">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ending">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.grpsym">
               <desc>Analytical domain attributes: grpsym uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.grpsym">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.grpsym">
               <desc>Logical domain attributes: symbol specifies the symbol used to group a set of
          staves.</desc>
               <attList>
                  <attDef ident="symbol" usage="req">
                     <valList type="closed">
                        <valItem ident="brace"/>
                        <valItem ident="bracket"/>
                        <valItem ident="line"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.grpsym">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ineume">
               <desc>Analytical domain attributes: ineume uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ineume">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ineume">
               <desc>Logical domain attributes: The name attribute records a name associated with this
          neume symbol while the form attribute provides a subclass or functional label for the
          neume.</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.INEUMEFORM"/>
                     </datatype>
                  </attDef>
                  <attDef ident="name" usage="opt">
                     <datatype>
                        <rng:ref name="data.INEUMENAME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ineume">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.layer">
               <desc>Analytical domain attributes: layer uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.layer">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.layer">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layer">
               <desc>Visual domain attributes: visible determines if the entire layer is to be
          displayed.</desc>
               <attList>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.layerdef">
               <desc>Analytical domain attributes: Since the layer element carries analytical attributes
          for the layer, no analysis attributes are defined for layerdef.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.layerdef">
               <desc>Gestural domain attributes: Setting the grace attribute here provides the
          possibility of changing all the grace attribute values in a given layer without having to
          individually change each note's grace attribute value. The midi.* attributes function as
          default values when creating sounding output: midi.channel sets the default MIDI channel,
          midi.duty specifies the 'on' part of the duty cycle as a percentage, midi.instr sets the
          default MIDI instrument number, midi.instrname provides a label for the MIDI instrument,
          midi.port sets the default MIDI port value, and midi.track sets the default MIDI track
          number.</desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef.mensural">
               <desc>Logical domain attributes: The beam.group attribute contains an example of how
          beaming (including secondary beams) is to be carried out, e.g. '(4.,4.,4.)' indicates one
          outer beam per measure with secondary beams broken at each dotted quarter duration.
          beam.rests determines whether rests are allowed under a beam. A default duration is
          captured by dur.default for those situations when the first note, rest, chord, etc. in a
          measure does not have a duration specified. The octave.default attribute behaves in a
          similar fashion.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef">
               <desc/>
               <classes>
                  <memberOf key="att.log.layerdef.base"/>
                  <memberOf key="att.log.layerdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef.mensural">
               <desc>Visual domain attributes: The beam.rend attribute captures whether a beam is
          feathered and in which direction - 'acc' indicates that the secondary beams get
          progressively closer together, coming together at the end of the beam, while 'rit' means
          that the secondary beams start at the same point and get progressively more distant. The
          default value for the slope of beams is recorded in beam.slope. The slur.rend and tie.rend
          attributes provide default values for the appearance of slurs and ties when this
          information is not provided on the individual elements. Similarly, the text.* attributes
          provide default values for text associated with the layer.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef">
               <desc/>
               <classes>
                  <memberOf key="att.vis.layerdef.base"/>
                  <memberOf key="att.vis.layerdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ligature">
               <desc>Analytical domain attributes: ligature uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ligature">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ligature">
               <desc>Logical domain attributes: The form attribute provides an indication of the
          function of the ligature.</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.LIGATUREFORM"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ligature">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mensur">
               <desc>Analytical domain attributes: mensur uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mensur">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mensur">
               <desc>Logical domain attributes: The tempus, prolatio, modusmaior, and modusminor
          attributes specify the relationship between the four principle levels of note value, i.e.,
          the long, breve, semibreve and minim, in mensural notation. Modusminor describes the
          long-breve relationship, while tempus describes the breve-semibreve, and prolatio the
          semibreve-minim relationship, respectively. Modusmaior is for the maxima-long
          relationship.</desc>
               <attList>
                  <attDef ident="modusmaior" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mensur">
               <desc>Visual domain attributes: These attributes describe the physical appearance of the
          mensuration sign/time signature of mensural notation. Sign is the base symbol, while the
          dot, form, loc (location), orient, size, and slash attributes describe the attributes of
          the sign. Dot records if a dot is added to the base symbol, form indicates whether the
          base symbol is written vertically or horizontally, and loc specifies the placement of the
          base symbol on the staff. Orient describes the rotation or reflection of the base symbol,
          size its relative size, and slash indicates the number of lines added to it, for example,
          one slash is added for what we now call 'alla breve'.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="orient" usage="opt">
                     <valList type="closed">
                        <valItem ident="reversed"/>
                        <valItem ident="90CW"/>
                        <valItem ident="90CCW"/>
                     </valList>
                  </attDef>
                  <attDef ident="sign" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.midi">
               <desc>Analytical domain attributes: midi uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.midi">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.midi">
               <desc>Logical domain attributes: The layer and staff attributes for a group of MIDI
          events may be set for all the midi element's children by using the layer and staff
          attributes.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.midi">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.proport">
               <desc>Analytical domain attributes: proport uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.proport">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.proport">
               <desc>Logical domain attributes: These attributes describe augmentation or diminution of
          the normal value of the notes in mensural notation. Together, num and numbase specify the
          change as a ratio, e.g., 1:3. Numbase is for the first value in the ratio and numbase the
          second.</desc>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.proport">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.part">
               <desc>Analytical domain attributes: part uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.part">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.part">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.part">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.parts">
               <desc>Analytical domain attributes: parts uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.parts">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.parts">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.parts">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.rdg">
               <desc>Analytical domain attributes: rdg uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.rdg">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.rdg">
               <desc>Logical domain attributes: The expan attribute contains an ordered list of IDs of
          descendant section, ending or rdg elements. This 'expansion list' indicates how the
          section should be expanded into its 'through-composed' form. For example, expan="A End1 A
          End2" indicates that the section labelled 'A' comes first, then the ending labelled
          'End1', followed by the 'A' section again, and finally the ending lablled
          'End2'.</desc>
               <attList>
                  <attDef ident="expan" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.rdg">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.sb">
               <desc>Analytical domain attributes: sb uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.sb">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.sb">
               <desc>Logical domain attributes: Source descriptions in the header may be pointed to by
          putting their IDs in the source attribute. This allows system breaks from multiple sources
          to be encoded.</desc>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.sb">
               <desc>Visual domain attributes: The rend attribute indicates whether hash marks should be
          rendered between systems. See Read, p. 436, ex. 26-3.</desc>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="hash"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.score">
               <desc>Analytical domain attributes: score uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.score">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.score">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.score">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.scoredef">
               <desc>Analytical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.scoredef">
               <desc>Gestural domain attributes: The values set in these attributes act as score-wide
          defaults for attributes that are not set in descendant elements. For example, the grace
          attribute value here applies to all the grace attribute values in the score (or, more
          accurately, until the next scoredef element) without having to individually set each
          note's grace attribute value. The midi.* attributes function as default values when
          creating sounding output: midi.channel sets the default MIDI channel, midi.duty specifies
          the 'on' part of the duty cycle as a percentage, midi.instr sets the default MIDI
          instrument number, midi.instrname provides a label for the MIDI instrument, midi.port sets
          the default MIDI port value, and midi.track sets the default MIDI track number. Tempo in
          beats (meter signature denominator) per minute can be set using the tempo attribute. The
          tune.* attributes provide the capability of recording a tuning reference pitch. tune.pname
          holds the pitch name, such as 'a', while tune.Hz holds a value for cycles per second,
          i.e., Hertz, and tune.temper provides a label for the tuning system, 'just', for example.
          Suggested software default values are: grace - 'acc', midi.channel - '1', midi.div - '96',
          midi.duty - '80', midi.instr - '1' (General MIDI instrument number 1), midi.instrname -
          'Acoustic Piano' (General MIDI instrument name), midi.port - '1', midi.tempo - '120',
          midi.track - '1', tempo - beats per minute '120', tune.pname - 'a', tune.Hz - '440',
          tune.temper - 'equal'</desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.tempo" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDITEMPO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempo" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPOVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.Hz" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.temper" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPERAMENT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef.mensural">
               <desc>Logical domain attributes: The attributes in the class att.log.scoredef.mensural
          are provided for mensural notation. The tempus, prolatio, modusmaior, and modusminor
          attributes specify the relationship between the four principle levels of note value, i.e.,
          the long, breve, semibreve and minim, in mensural notation. Modusminor describes the
          long-breve relationship, while tempus describes the breve- semibreve, and prolatio the
          semibreve-minim relationship, respectively. Modusmaior is for the maxima-long
          relationship. The proport.* attributes describe augmentation or diminution of the normal
          value of the notes in mensural notation. Together, proport.num and proport.numbase specify
          the change as a ratio, e.g., 1:3. Proport.numbase is for the first value in the ratio and
          proport.numbase the second. The attributes in the class att.log.scoredef.base are provided
          for common Western music notation. The values set in these attributes act as score-wide
          defaults for attributes that are not set in descendant elements. The beam.group attribute
          provides an example of how beaming (including secondary beams) is to be performed. It can
          be used to set a default beaming pattern to be used when no beaming is indicated at the
          event level. beam.group must contain a comma-separated list of time values that add up to
          a measure, e.g., in 4/4 time '4,4,4,4' indicates each quarter note worth of shorter notes
          would be beamed together. Parentheses can be used to indicate sub-groupings of secondary
          beams. For example, '(4.,4.,4.)' in 9/8 meter indicates one outer beam per measure with
          secondary beams broken at each dotted quarter duration, while a measure of 16th notes in
          4/4 with beam.group equal to '(4,4),(4,4)' will result in a primary beam covering all the
          notes and secondary beams each group of 4 notes. This beaming "directive" can be
          overridden by using beam elements. If neither beam elements or the beam.group attribute is
          used, then no beaming is rendered. Beaming can be 'turned off' by setting beam.group to an
          empty string. The beam.rests attribute indicates whether beams should include rests
          shorter than a quarter note duration. clef.line contains a default value for the position
          of the clef, while clef.shape encodes a value for the clef symbol and clef.trans records
          an octave shift to be applied to the clef. The default duration is held by the dur.default
          attribute. The value here is used to determine the duration value of the first note in a
          layer if it has no dur attribute. The key.* attributes encode information regarding the
          key and key signature. key.pname holds the pitch name of the tonic key, e.g. 'c' for the
          key of C, while key.accid contains an accidental for the tonic key, if one is required,
          e.g., if key.pname equals 'c' and key.accid equals 's', then a tonic of C# is indicated.
          The mode in major-minor tonality is encoded in the key.mode attribute. Key signature is
          normally indicated by a value in key.sig showing where the key is in the circle of fifths.
          Mixed key signatures, e.g. those consisting of a mixture of flats and sharps (Read, p.
          143, ex. 9-39), and key signatures with unorthodox placement of the accidentals (Read, p.
          141) must be indicated by setting the key.sig attribute to 'mixed' and providing explicit
          keysig info in the key.sig.mixed attribute or in the keysig element. It is intended that
          key.sig.mixed contain a series of tokens with each token containing pitch name,
          accidental, and octave, such as 'As4 Cs5 Ef5' that indicate what key accidentals should be
          rendered and where they should be placed. The number of beats in a measure, that is, the
          top number of the meter signature, should be captured in the meter.count attribute and the
          beat unit, that is, the bottom number of the meter signature, should be placed in the
          meter.unit attribute. If rendering of a meter symbol, such as 'C' for common time, is
          desired instead of a numerical meter signature, the meter.sym attribute should be used.
          octave.default functions similarly to dur.default. If the oct attribute isn't given on the
          first note of a measure, then the value of octave.default is used. The trans.* attributes
          accommodate transposing scores. The amount of diatonic pitch shift, e.g. C to C# = 0, C to
          Db = 1, can be recorded in trans.diat, while trans.semi holds the amount of pitch shift in
          semitones, C to C# = 1, C to Db = 1. Transposition requires both trans.diat and trans.semi
          attributes in order to distinguish the difference, for example, between a transposition
          from C to C# and one from C to Db. Suggested software default values: beam.group - empty
          string, beam.rests - 'no', clef.line - '2', clef.shape - 'G', clef.trans - '0',
          dur.default - '4', key.accid -empty string, key.mode - 'major', key.pname - empty string,
          key.sig - empty string, key.sig.mixed - empty string, meter.count - empty string,
          meter.unit - empty string, meter.sym - empty string, octave.default - '4', trans.diat -
          '0', trans.semi -'0'.</desc>
               <attList>
                  <attDef ident="modusmaior" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="proport.num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig" usage="opt">
                     <datatype>
                        <rng:ref name="data.KEYSIGNATURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.mixed" usage="opt"/>
                  <attDef ident="meter.count" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.sym" usage="opt">
                     <datatype>
                        <rng:ref name="data.METERSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.unit" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.diat" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.semi" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef">
               <desc/>
               <classes>
                  <memberOf key="att.log.scoredef.base"/>
                  <memberOf key="att.log.scoredef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef.mensural">
               <desc>Visual domain attributes: Definitions and suggested software default values:
          bar.place placement of barlines, 'norm' beam.rend encodes whether a beam is feathered and
          in which direction, 'norm' beam.slope default beam slope, Mup uses '1.0, 25.0' clef.color
          hexadecimal RGB/name color value clef.visible are clefs visible?, 'yes' dynam.dist how far
          from staff to render dynamic marks, '2' ending.rend where to draw ending marks, 'top'
          grid.show display chord grids?, 'no' harm.dist how far from staff to render harmony, '2'
          key.sig.show display key signature?, 'yes' key.sig.showchange display cautionary key
          signature change?, 'yes' lyric.align alignment of lyrics beneath notes, Mup uses '0.25'
          lyric.fam font family for lyrics, 'times' lyric.name font name for lyrics, 'rom'
          lyric.size point size of lyrics, '12' lyric.style font style, e.g., 'ital', 'normal',
          'oblique', no default lyric.weight weight value, e.g., 'bold', for lyrics, no default
          meter.rend display meter normally (3/4), with symbol as denom, or invis, 'norm'
          meter.sig.showchange display cautionary meter signature change?, 'yes' mnum.visible are
          measure numbers visible?, 'no' multi.number programmatically calculate number of
          consecutive measures of rest (mrest) and whole measure repeats (mrpt)?, 'no' ontheline
          governs display of notes on a 1-line staff, 'yes' optimize display only those staves with
          notes?, 'no' ** page.* attributes apply to the entire score/part page.height height of
          page, '11' page.width width of page, '8.5' page.units real-world measurement (inches,
          centimeters, millimeters), 'in' page.topmar top page margin, '1' page.botmar bottom page
          margin, '1' page.leftmar left page margin, '.5' page.rightmar right page margin, '.5'
          page.panels number of logical pages to place on physical page, '1' page.scale scale
          printed output by the specified percentage, '100' pedal.rend are piano pedal marks drawn
          as lines or as terms (e.g. 'Ped.' &amp;amp; '*'), 'term' reh.enclose default look of
          rehearsal letters/numbers, 'box' slur.rend default look of slurs, 'medium' spacing.packexp
          note spacing relative to its time value, '0.8' spacing.packfact note spacing of output,
          '1' spacing.staff minimum amount of space between staves in the same system, '2'
          spacing.system minimum and maximum amount of space between systems, '12, 20'
          system.leftmar left system margin relative to page.leftmar, '0' system.rightmar right
          system margin relative to page.rightmar, '0' system.topmar distance from page's top edge
          to the first system, used for first page only text.dist how far from staff to render text,
          '2' text.fam font family for text, 'times' text.nam font name for text, 'rom' text.size
          point size of text, '12' text.style font style, e.g., 'ital', 'normal', 'oblique', no
          default text.weight weight value, e.g., 'bold', for text other than lyrics, no default
          tie.rend default look of ties, 'medium'</desc>
               <attList>
                  <attDef ident="mensur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.orient" usage="opt">
                     <valList type="closed">
                        <valItem ident="reversed"/>
                        <valItem ident="90CW"/>
                        <valItem ident="90CCW"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef.base">
               <desc/>
               <attList>
                  <attDef ident="bar.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dynam.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ending.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="top"/>
                        <valItem ident="barred"/>
                        <valItem ident="grouped"/>
                     </valList>
                  </attDef>
                  <attDef ident="grid.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="harm.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.align" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="denomsym"/>
                        <valItem ident="norm"/>
                        <valItem ident="invis"/>
                     </valList>
                  </attDef>
                  <attDef ident="meter.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mnum.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="multi.number" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="music.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.MUSICFONT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="music.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ontheline" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="optimize" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.height" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.units" usage="opt">
                     <datatype>
                        <rng:ref name="data.PGUNITS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.topmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.botmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.leftmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.rightmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.panels" usage="opt">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                     </valList>
                  </attDef>
                  <attDef ident="page.scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.PGSCALE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pedal.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="term"/>
                     </valList>
                  </attDef>
                  <attDef ident="reh.enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.packexp" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.packfact" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.system" usage="opt"/>
                  <attDef ident="system.leftmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="system.rightmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="system.topmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef">
               <desc/>
               <classes>
                  <memberOf key="att.vis.scoredef.base"/>
                  <memberOf key="att.vis.scoredef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.section">
               <desc>Analytical domain attributes: section uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.section">
               <desc>Gestural domain attributes: The expan attribute contains a list of ids of child
          section, ending or app elements. This 'expansion list' indicates how the section should be
          expanded into its 'through- composed' form. See Read, p. 226 (ex. 12-10), 228-229 (ex.
          12-16).</desc>
               <attList>
                  <attDef ident="expan" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.section">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.section">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staff">
               <desc>Analytical domain attributes: staff uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staff">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.staff">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staff">
               <desc>Visual domain attributes: The visible attribute may be used to indicate if a staff
          should be displayed when the score is rendered. A staff with this attribute set to 'false'
          should not be included in a sounded rendition.</desc>
               <attList>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staffdef">
               <desc>Analytical domain attributes: Since the staff element carries analytical attributes
          for the staff, no analysis attributes are defined for staffdef.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef.tablature">
               <desc>Gestural domain attributes: Setting the grace attribute here provides the
          possibility of changing all the grace attribute values in a given layer without having to
          individually change each note's grace attribute value. The tab.strings attribute lists a
          written pitch and octave for each open string, e.g. "e3 a3 d4 g4 b4 e5" for standard
          guitar tuning. It should contain the number of tokens indicated by the lines attribute.
          Chromatic alteration may be indicated with '-' (flat) and '#' (sharp). Double sharps and
          flats are not permitted. Adding tune.pname, tune.Hz, and tune.temper attributes here would
          allow each staff to establish its own tuning standard.</desc>
               <attList>
                  <attDef ident="tab.strings" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef.base">
               <desc/>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef">
               <desc/>
               <classes>
                  <memberOf key="att.ges.staffdef.base"/>
                  <memberOf key="att.ges.staffdef.tablature"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef.mensural">
               <desc>Logical domain attributes: The attributes in the class att.log.scoredef.mensural
          are provided for mensural notation. The attributes in the class att.log.scoredef.base are
          provided for common Western music notation. For descriptions of the individual attributes
          in these classes, see the comments associated with % att.log.scoredef.</desc>
               <attList>
                  <attDef ident="mensur.sign" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusmaior" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
                  <attDef ident="proport.num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <valList type="closed">
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig" usage="opt">
                     <datatype>
                        <rng:ref name="data.KEYSIGNATURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.mixed" usage="opt"/>
                  <attDef ident="meter.count" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.sym" usage="opt">
                     <datatype>
                        <rng:ref name="data.METERSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.unit" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.diat" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.semi" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef">
               <desc/>
               <classes>
                  <memberOf key="att.log.staffdef.base"/>
                  <memberOf key="att.log.staffdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef.mensural">
               <desc>Visual domain attributes: It is a semantic error if the clef.shape, clef.line,
          key.sig, meter.count, and meter.unit attributes are not supplied or are not available from
          a scoredef ancestor. The layerscheme attribute indicates the number of layers and the stem
          direction. The lines attribute indicates the number of stafflines. The lines.color
          attribute is structured; that is, it should have the same number of space-separated RGB
          values as indicated by the lines attribute. A line can be made invisible by assigning it
          the same RGB value as the background, usually white. The spacing attribute should be used
          to record the absolute distance (as opposed to the relative distances recorded in scoredef
          elements) between this staff and the preceding one in the same system. This value is
          meaningless for the first staff in a system since the spacing.system attribute indicates
          the spacing between systems.</desc>
               <attList>
                  <attDef ident="mensur.form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.orient" usage="opt">
                     <valList type="closed">
                        <valItem ident="reversed"/>
                        <valItem ident="90CW"/>
                        <valItem ident="90CCW"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef.base">
               <desc/>
               <attList>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dynam.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grid.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="harm.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="label.full" usage="opt"/>
                  <attDef ident="label.abbr" usage="opt"/>
                  <attDef ident="layerscheme" usage="opt">
                     <datatype>
                        <rng:ref name="data.LAYERSCHEME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines.color" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.align" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="denomsym"/>
                        <valItem ident="norm"/>
                        <valItem ident="invis"/>
                     </valList>
                  </attDef>
                  <attDef ident="meter.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="multi.number" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ontheline" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pedal.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="term"/>
                     </valList>
                  </attDef>
                  <attDef ident="reh.enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef">
               <desc/>
               <classes>
                  <memberOf key="att.vis.staffdef.base"/>
                  <memberOf key="att.vis.staffdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staffgrp">
               <desc>Analytical domain attributes: staffgrp uses only common analysis
          attributes.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffgrp">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffgrp">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffgrp">
               <desc>Visual domain attributes: barthru indicates whether barlines go across the space
          between staves (yes) or are only drawn across the stafflines of each staff (no),
          label.full is used on the first page while label.abbr is used thereafter, symbol indicates
          the left-hand connecting symbol for the group, and the visible attribute indicates whether
          this group is to be printed. The brace and bracket attributes may be used (instead of
          additional staffgrp sub-elements) to indicate sub-groupings of staves.</desc>
               <attList>
                  <attDef ident="barthru" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="label.abbr" usage="opt"/>
                  <attDef ident="label.full" usage="opt"/>
                  <attDef ident="symbol" usage="opt">
                     <valList type="closed">
                        <valItem ident="brace"/>
                        <valItem ident="bracket"/>
                        <valItem ident="line"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.uneume">
               <desc>Analytical domain attributes: accid.cautionary cautionary accidental
          accid.editorial editorial accidental or musica ficta hfunc harmonic function, e.g. root,
          3rd, 5th inth harmonic interval from pitch in same chord intm melodic interval from
          previous pitch mfunc melodic function, e.g. appogg., N.T. pclass pitch class psolfa solfa,
          e.g. do, re, mi, etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.uneume">
               <desc>Gestural domain (performance) attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.uneume">
               <desc>Logical domain attributes: The name and form attributes record the name and
          function of the neume. Syl holds a textual syllable associated with the neume.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.UNEUMEFORM"/>
                     </datatype>
                  </attDef>
                  <attDef ident="name" usage="opt">
                     <datatype>
                        <rng:ref name="data.UNEUMENAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.uneume">
               <desc>Visual domain attributes: The relative size of the neume is encoded in the size
          attribute. The visibility of the neume is captured in the visible attribute.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.accid">
               <desc>Analytical domain attributes: accid uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.accid">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.accid">
               <desc>Logical domain attributes: If an accidental has an editorial or cautionary
          function, its function may be captured in the func attribute. The value attribute records
          the accidental.</desc>
               <attList>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="caution"/>
                        <valItem ident="edit"/>
                     </valList>
                  </attDef>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.accid">
               <desc>Visual domain attributes: The enclose attribute records the characters often used
          to mark the accidental as having an cautionary or editorial function. The placement of the
          accidental, either above the staff, below the staff, or in its usual place on the staff,
          is captured in the place attribute. The ho and vo attributes encode the visual placement
          of the accidental in terms of interline distance.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.vo"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <valList type="closed">
                        <valItem ident="above"/>
                        <valItem ident="below"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.annot">
               <desc>Analytical domain attributes: The dur.anl attribute records the durational scope of
          the annotation when it differs from the written values of the participants. The dur.ges
          attribute (performed duration) may be expressed in several forms, such as measures[s]+
          beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip values, or MusicXML 'divisions',
          etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="dur.anl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.annot">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.annot">
               <desc>Logical domain attributes: % att.controlevent is expanded here in order to allow
          staff to be IMPLIED. Values for the type attribute can be taken from any convenient
          typology of annotation suitable to the work in hand; e.g. annotation, gloss, citation,
          digression, preliminary, temporary, etc. The tstamp attribute encodes the onset time of a
          musical feature in terms of musical time, i.e., beats. The tstamp.ges attribute may be
          used to record the onset time in pulses per quarter note (ppq, MusicXML divisions, or MIDI
          clicks) since the start of the measure, while the tstamp.real attribute records the onset
          time as a real-time offset, i.e., HH:MM:SS.ss, since the beginning of the file.</desc>
               <classes>
                  <memberOf key="att.nextprev"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.annot">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.arpeg">
               <desc>Analytical domain attributes: arpeg uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.arpeg">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.arpeg">
               <desc>Logical domain attributes: dir=nonarp indicates a non- arpeggiated chord, usually
          rendered with a preceding bracket instead of a wavy line. Arpeggiation across multiple
          staves requires 2 values in staff attribute; if there's more than 1 layer in either staff,
          2 values are required in the layer attribute.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="dir" usage="opt">
                     <valList type="closed">
                        <valItem ident="up"/>
                        <valItem ident="down"/>
                        <valItem ident="nonarp"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.arpeg">
               <desc>Visual domain attributes: The arrow attribute may be used when an arrowhead is to
          be drawn as part of the arpeggiation symbol.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="arrow" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.artic">
               <desc>Analytical domain attributes: artic uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.artic">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.artic">
               <desc>Logical domain attributes: The value attribute records the name of the articulation
          symbol.</desc>
               <attList>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ARTICULATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.artic">
               <desc>Visual domain attributes: The character used to enclose an accidental may be
          recorded in the enclose attribute.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beam">
               <desc>Analytical domain attributes: beam uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beam">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.beam">
               <desc>Logical domain attributes: In the case of cross-staff beams, the with attribute is
          used to indicate which staff the beam is connected to; that is, the staff above or the
          staff below.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beam">
               <desc>Visual domain attributes: Secondary beams may be broken explicitly using the
          breaksec attribute. Its value should contain a space-separated list of rhythmic durations
          that form a single beat. For example,'8 8' indicates a division of the beam into 2
          8th-note groups. The rend attribute captures whether a beam is feathered and in which
          direction: 'acc' indicates that the secondary beams get progressively closer together,
          coming together at the end of the beam, while 'rit' means that the secondary beams start
          at the same point and get progressively more distant. The slope of the beam is recorded in
          the slope attribute.</desc>
               <attList>
                  <attDef ident="breaksec" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beamspan">
               <desc>Analytical domain attributes: beamspan uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beamspan">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.beamspan">
               <desc>Logical domain attributes: In the case of cross-staff beams, the with attribute is
          used to indicate which staff the beam is connected to; that is, the staff above or the
          staff below.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beamspan">
               <desc>Visual domain attributes: Secondary beams may be broken explicitly using the
          breaksec attribute. Its value should contain a space-separated list of rhythmic durations
          that form a single beat. For example,'8 8' indicates a division of the beam into 2
          8th-note groups. The rend attribute captures whether a beam is feathered and in which
          direction: 'acc' indicates that the secondary beams get progressively closer together,
          coming together at the end of the beam, while 'rit' means that the secondary beams start
          at the same point and get progressively more distant. The slope of the beam is recorded in
          the slope attribute.</desc>
               <attList>
                  <attDef ident="breaksec" usage="opt"/>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beatrpt">
               <desc>Analytical domain attributes: beatrpt uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beatrpt">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.beatrpt">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beatrpt">
               <desc>Visual domain attributes: The expand attribute indicates whether to render the
          repeated beat symbol or the source material. The rend attribute indicates the number of
          slashes required to render the appropriate beat repeat symbol when the beat is divided
          into even notes - 4ths or 8ths=1, 16ths=2, 32nds=3, 64ths=4, 128ths=5. When the beat is
          comprised of mixed duration values, the symbol is always rendered as 2 slashes and 2 dots.
          See Read, pg. 223-224.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="req">
                     <valList type="closed">
                        <valItem ident="4"/>
                        <valItem ident="8"/>
                        <valItem ident="16"/>
                        <valItem ident="32"/>
                        <valItem ident="64"/>
                        <valItem ident="128"/>
                        <valItem ident="mixed"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.bend">
               <desc>Analytical domain attributes: bend uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.bend">
               <desc>Gestural domain attributes: The amount of detuning is recorded in the amount
          attribute. The decimal values should be rendered as a fraction (or an integer plus a
          fraction) along with the bend symbol.</desc>
               <attList>
                  <attDef ident="amount" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEND.AMOUNT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.bend">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.bend">
               <desc>Visual domain attributes: If the bulge or bezier attributes are present, the bend
          should be rendered as a curve. Otherwise, it should be rendered using lines. The bulge
          attribute describes the curve as a set of distance values above or below an imaginary line
          connecting the endpoints of the curve while the bezier attribute records the placement of
          Bezier control points as a series of space-separated xy coordinates, eg. 19 45 -32 118.
          The bulge attribute must contain one or more values of type %NUMBER. The rend attribute
          records the appearance of the curve or line while the ho and vo attributes describe the
          visual offset of the entire rendered bend. The endho, endvo and startho, startvo attribute
          pairs may be used to encode start and end points relative to their programmatic placement.
          For exact placement of the endpoints of the bend use the xy coordinate pair
          attributes.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.breath">
               <desc>Analytical domain attributes: breath uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.breath">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.breath">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.breath">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.btrem">
               <desc>Analytical domain attributes: btrem uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.btrem">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.btrem">
               <desc>Logical domain attributes: The slash attribute, indicating the exact note values
          desired, should be explicitly set for measured tremolandi, i.e., 4ths or 8ths=1, 16ths=2,
          32nds=3, 64ths=4, 128ths=5, 256ths=6. See Read, p. 393-394. The stem modifier (slash or z)
          must also be explicity set on the child note or chord element for a complete visual
          representation. The num attribute may be used to store a number to be rendered along with
          the note. See Read, p. 394, ex. 23-21, line 5.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="meas"/>
                        <valItem ident="unmeas"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slash" usage="opt">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                        <valItem ident="6"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.btrem">
               <desc>Visual domain attributes: num.place records where the number accompanying the
          tremolo note or chord should be rendered.</desc>
               <attList>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.chord">
               <desc>Analytical domain attributes: The hfunc and mfunc attributes may use any convenient
          typology to indicate harmonic and melodic function, respectively.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.chord">
               <desc>Gestural domain (performance) attributes: Setting the grace attribute here provides
          the possibility of changing all the grace attribute values in a given layer without having
          to individually change each note's grace attribute value. The artic.ges and dur.ges
          attributes record the articulation and duration information when the performed values
          differ from the written values. The dur.ges attribute (performed duration) may be
          expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
          Humdrum *recip values, or MusicXML 'divisions', etc. Because dur.ges isn't limited to the
          standard duration values, a dots.ges attribute is unnecessary. The instr attribute
          provides a way of pointing to a MIDI instrument definition. It must contain the ID of an
          instrdef element elsewhere in the document.</desc>
               <attList>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.chord">
               <desc>Logical domain attributes: The artic, dots, and dur attributes encode the *written*
          articulations, augmentation dots, and duration values. The beam, fermata, lv, slur, syl,
          tie, and tuplet attributes may be used to indicate the attachment of these things to this
          chord. If visual information about these things needs to be recorded, then the elements
          corresponding to these attributes should be employed.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="artic" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lv" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
                  <attDef ident="tie" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.chord">
               <desc>Visual domain attributes: The headshape attribute may be used to indicate a cluster
          notehead should be displayed instead of individual noteheads. See Read, p. 320-321 re:
          tone clusters. Processing of chords and notes will be easier if a distinction is made
          between articulations, which indicate sound quality, and text strings, such as numbers for
          fingering, etc. Only articulations should be encoded in the artic attribute; fingerings
          should be encoded using the &lt;dir&gt; element. Articulations may be encoded in
          order from the notehead outward; that is, away from the stem. See additional notes at
          a.vis.note. The slur, slur.dir, slur.rend, tie, tie.dir, and tie.rend attributes here are
          syntactic sugar for these attributes on each of the chord's individual notes. The values
          here apply to all the notes in the chord. If some notes are slurred or tied while others
          aren't, then the individual note attributes must be used. The coloration attribute should
          not be confused with visual color. Coloration is when a void notehead is displayed filled
          and vice versa. The dot.ho and dot.vo attributes record the offset of the dot from its
          "normal" position while the dot.x and dot.y attributes record the precise rendered
          position of the dot. The %att.visualoffset entity is expanded here in order to disallow a
          vertical offset.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLUSTER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.clefchange">
               <desc>Analytical domain attributes: clefchange uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.clefchange">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.clefchange.base">
               <desc>Logical domain attributes: The line attribute records a value for the position of
          the clef, while shape encodes a value for the clef symbol and trans records an octave
          shift to be applied to the clef. If the oct attribute isn't given on the first note
          following the clef change, then the value of octave.default is used.</desc>
               <attList>
                  <attDef ident="line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFTRAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.clefchange">
               <desc/>
               <classes>
                  <memberOf key="att.log.clefchange.base"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.clefchange">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dir">
               <desc>Analytical domain attributes: dir uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dir">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the directive when it differs from the logical and visual durations. It may be expressed
          in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.dir">
               <desc>Logical domain attributes: Currently, the dur attribute encodes the logical and
          visual durations of the directive. If cases arise where the logical and visual durations
          differ, it may be necessary to add a dur.vis attribute. Please note that the dur attribute
          is not a true duration, but rather a time stamp for the end point of the
          directive.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dir">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dynam">
               <desc>Analytical domain attributes: dynam uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dynam">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the dynamic marking when it differs from the logical and visual durations. It may be
          expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
          Humdrum *recip values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="value" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.dynam">
               <desc>Logical domain attributes: The dur attribute encodes the logical and visual
          duration of the dynamic symbol or text while the dur.ges attribute encodes the performed
          duration. If logical and visual duration differ, it may be necessary to add a dur.vis
          attribute. Please note that the dur attribute is not a true duration, but rather a time
          stamp for the end point of the dynamic indication.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dynam">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.fermata">
               <desc>Analytical domain attributes: fermata uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.fermata">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the fermata when it differs from the logical and visual durations. It may be expressed in
          several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.fermata">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.fermata">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ftrem">
               <desc>Analytical domain attributes: ftrem uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ftrem">
               <desc>Gestural domain attributes:</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="meas"/>
                        <valItem ident="unmeas"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.ftrem">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ftrem">
               <desc>Visual domain attributes: The slash attribute indicates the number of slashes
          required - 4ths or 8ths=1, 16ths=2, 32nds=3, 64ths=4, 128ths=5, 256ths=6.</desc>
               <attList>
                  <attDef ident="slash" usage="req">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                        <valItem ident="6"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.gliss">
               <desc>Analytical domain attributes: gliss uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.gliss">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.gliss">
               <desc>Logical domain attributes:</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.gliss">
               <desc>Visual domain attributes: The text attribute may be used to record any text, such
          as 'gliss.', that accompanies the glissando mark. The appearance of the glissando mark is
          captured in the rend attribute.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.hairpin">
               <desc>Analytical domain attributes: hairpin uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.hairpin">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the hairpin when it differs from the logical and visual durations. It may be expressed in
          several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.hairpin">
               <desc>Logical domain attributes: The dur attribute encodes the logical and visual
          duration of the hairpin. If the logical and visual durations differ, it may be necessary
          to add a dur.vis attribute. Please note that the dur attribute is not a true duration, but
          rather a time stamp for the end point of the hairpin.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="req">
                     <valList type="closed">
                        <valItem ident="cres"/>
                        <valItem ident="dim"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.hairpin">
               <desc>Visual domain attributes: The startho and startvo attributes record the horizontal
          and vertical offsets of the left end, endho and endvo record the horizontal and vertical
          offsets of the right end, and the width attribute records the width of the opening on the
          open end in one-half staff inter-line units. The x1 and y1 attributes give the absolute
          coordinates of the left side of the hairpin while x2 and y2 record the coordinates of the
          right side. Width specifies the distance, in interline units, between the points of the
          open end of the mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.halfmrpt">
               <desc>Analytical domain attributes: halfmrpt uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.halfmrpt">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.halfmrpt">
               <desc>Logical domain attributes: The dur attribute states the logical duration of the
          repeat symbol.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.halfmrpt">
               <desc>Visual domain attributes: The expand attribute indicates whether or not to render
          the source material.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.harm">
               <desc>Analytical domain attributes: harm uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.harm">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the harmony when it differs from the logical and visual durations. It may be expressed in
          several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.harm">
               <desc>Logical domain attributes: The dur attribute encodes the logical and visual
          duration of the harmony. If the logical and visual durations differ, it may be necessary
          to add a dur.vis attribute. Please note that the dur attribute here is not a true
          duration, but rather a time stamp for the end point of the directive.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="chordref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.harm">
               <desc>Visual domain attributes: If the rendgrid attribute is set to 'grid', then the
          chord tablature grid defined in the chordtable should be rendered instead of the text
          contents of the harm element; if rendgrid equals 'gridname', both the harm element's text
          and the grid should be displayed; otherwise, only the 'name' of the chord, i.e., the text
          content of the harm element, e.g. 'Cmaj' or 'V7/III', should be rendered. The presence of
          an extension symbol, typically a dash or underscore, drawn from the end of the harmonic
          indication to the point indicated by the dur attribute, is indicated via the extender
          attribute.</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="extender" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rendgrid" usage="opt">
                     <valList type="closed">
                        <valItem ident="grid"/>
                        <valItem ident="gridname"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.harppedal">
               <desc>Analytical domain attributes: harppedal uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.harppedal">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the harppedal when it differs from the logical and visual durations. It may be expressed
          in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.harppedal">
               <desc>Logical domain attributes: The pedal setting, flat, natural, or sharp, for each
          diatonic pitch name is indicated by the seven letter- named attributes.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="c" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="d" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="e" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="f" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="g" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="a" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="b" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.harppedal">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.lyrics">
               <desc>Analytical domain attributes: lyrics uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.lyrics">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.lyrics">
               <desc>Logical domain attributes: %att.controlevent is expanded here in order to allow
          only the staff and layer attributes from this class.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.lyrics">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.typography"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.measure">
               <desc>Analytical domain attributes: measure uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.measure">
               <desc>Gestural domain attributes: The tstamp.ges and tstamp.real attributes encode the
          onset time of the measure. In reality, this is usually the onset time of the first event
          in the measure. The tstamp.ges attribute may be used to record the onset time in pulses
          per quarter note (ppq, MusicXML divisions, or MIDI clicks) since the start of the file,
          while the tstamp.real attribute records the onset time as a real- time offset, i.e.,
          HH:MM:SS.ss, since the beginning of the file.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.measure">
               <desc>Logical domain attributes: The complete attribute allows the encoding of whether a
          measure matches the prevailing meter: a value of 'c' indicates a metrically complete
          measure, 'i' indicates a measure with not enough beats, while 'o' is for measures with too
          many beats. The control attribute indicates whether or not the right barline is
          "controlling", that is, indicates a point of alignment across all the parts. Barlines
          within a score are usually 'controlling'; that is, they 'line up'. Barlines within a part
          may or may not be 'controlling' with respect to other parts. The left attribute indicates
          the visual rendition of the left barline. It is present here only for facilitation of
          translation from legacy encodings which use it. Usually, it can be safely ignored. The
          right attribute, on the other hand, indicates the function of the right barline and is
          structurally important. The n attribute may contain a name or number associated with the
          measure (Read, p. 445). Often, this is an integer, but not always. For example, some
          measures, especially incomplete measures or those under an ending mark, may have labels
          that contain an integer plus a suffix, such as '12a'. Measures may even have labels,
          especially in editorial or analytical uses of MEI, that are entirely non-numeric strings.
          Measure numbers may be machine-generated instead of encoding them in the markup. However,
          an explicit measure number should restart numbering with the given value. If this
          measure's contents duplicate another (probably preceding) measure, the measure which
          contains the content being repeated can be referenced using the measref
          attribute.</desc>
               <attList>
                  <attDef ident="complete" usage="opt">
                     <valList type="closed">
                        <valItem ident="c"/>
                        <valItem ident="i"/>
                        <valItem ident="o"/>
                     </valList>
                  </attDef>
                  <attDef ident="control" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="left" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="right" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.measure">
               <desc>Visual domain attributes: The taktplace attribute value must be a number between 1
          and the number of stafflines. For example, a value of '5' puts the barline through the top
          line of a 5-line staff. The width attribute records a fixed width for the
          measure.</desc>
               <attList>
                  <attDef ident="barplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="taktplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mordent">
               <desc>Analytical domain attributes: mordent uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mordent">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mordent">
               <desc>Logical domain attributes: In the form attribute, 'norm' signals the normal form,
          that is, the written note, followed by its lower neighbor, with a return to the written
          note, while 'inv' indicates the inverted form, that is, the principal note, followed by
          its upper neighbor, with a return to the principal note. When the long attribute is set to
          'yes', a double or long mordent, consisting of 5 notes, is indicated. Traditionally, the
          'normal' mordent is written as a short wavy line with a vertical line through it and the
          inverted mordent is written without the vertical line. However, the meaning of these signs
          is sometimes reversed. See Read, p. 245-246. Another attribute in the visual domain would
          be necessary in order to be completely explicit about which visual symbol is actually to
          be rendered.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="accidupper" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accidlower" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="long" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mordent">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrest">
               <desc>Analytical domain attributes: mrest uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrest">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the measure rest when it differs from the logical and visual durations. It may be
          expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
          Humdrum *recip values, or MusicXML 'divisions', etc. The instr attribute provides a way of
          pointing to a MIDI instrument definition. It must contain the ID of an instrdef element
          elsewhere in the document.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrest">
               <desc>Logical domain attributes: The fermata attribute may be used to indicate the
          attachment of a fermata to this element. If visual information about the fermata needs to
          be recorded, then a fermata element should be employed.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrest">
               <desc>Visual domain attributes: When set to 'rest' the cutout attribute indicates that
          the staff lines are to be displayed but not the rest itself. When set to 'staff' even the
          staff lines should not be drawn for this measure. See _56 Songs You Like to Sing_, p. 32.
          The dur.vis attribute should be used to record the durational symbol used in the source.
          The relative typographical size of the rest can be captured in the size
          attribute.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="cutout" usage="opt">
                     <valList type="closed">
                        <valItem ident="rest"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur.vis" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrpt">
               <desc>Analytical domain attributes: mrpt uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrpt">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrpt">
               <desc>Logical domain attributes: The measure which contains the content being repeated
          can be referenced using the measref attribute.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrpt">
               <desc>Visual domain attributes: The expand attribute indicates whether to render the
          source measure instead of the repeat symbol.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrpt2">
               <desc>Analytical domain attributes: mrpt2 uses on common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrpt2">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrpt2">
               <desc>Logical domain attributes: The measures which contain the content being repeated
          can be referenced using the measref attribute.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrpt2">
               <desc>Visual domain attributes: The expand attribute indicates whether to render the
          source measures instead of the repeat symbol.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mspace">
               <desc>Analytical domain attributes: The n attribute is used to explicitly encode this
          measure's position in a string of measures containing only mrest elements.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mspace">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the measure space when it differs from the logical and visual durations. It may be
          expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
          Humdrum *recip values, or MusicXML 'divisions', etc. The instr attribute provides a way of
          pointing to a MIDI instrument definition. It must contain the ID of an instrdef element
          elsewhere in the document.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.mspace">
               <desc>Logical domain attributes: The fermata attribute may be used to indicate the
          attachment of a fermata to this element. If visual information about the fermata needs to
          be recorded, then a fermata element should be employed.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mspace">
               <desc>Visual domain attributes: When set to 'rest' the cutout attribute indicates that
          the staff lines are to be displayed but not the rest itself. When set to 'staff' even the
          staff lines should not be drawn for this measure. See _56 Songs You Like to Sing_, p. 32.
          The dur.vis attribute should be used to record the durational symbol used in the
          source.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="cutout" usage="opt">
                     <valList type="closed">
                        <valItem ident="rest"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur.vis" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.multirest">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.multirest">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the multiple measure rest when it differs from the logical and visual durations. It may be
          expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
          Humdrum *recip values, or MusicXML 'divisions', etc. The instr attribute provides a way of
          pointing to a MIDI instrument definition. It must contain the ID of an instrdef element
          elsewhere in the document.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.multirest">
               <desc>Logical domain attributes: The num attribute contains the number of measures of
          rest.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.multirest">
               <desc>Visual domain attributes: When the block attribute is used, combinations of the 1,
          2, &amp;amp; 4 measure rest forms (Read, p. 104) should be rendered instead of the
          modern form or the alternative symbol.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
               </classes>
               <attList>
                  <attDef ident="block" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.multirpt">
               <desc>Analytical domain attributes: multirpt uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.multirpt">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.multirpt">
               <desc>Logical domain attributes: The measures which contain the content being repeated
          can be referenced using the measref attribute. The num attribute contains the number of
          measures to be repeated.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="measref" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.multirpt">
               <desc>Visual domain attributes: The expand attribute indicates whether or not to render
          the source measures instead of the repeat marking.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.nota">
               <desc>Analytical domain attributes: accid.cautionary cautionary accidental
          accid.editorial editorial or musica ficta accidental hfunc harmonic function, e.g. root,
          3rd, 5th inth harmonic interval from another, lower pitch in chord intm melodic interval
          from pitch in previous note/chord mfunc melodic function, e.g. appogg., N.T., etc. pclass
          pitch class psolfa solfa, e.g. do, re, mi, etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota.tablature">
               <desc>Gestural domain (performance) attributes: Setting the grace attribute here provides
          the possibility of changing all the grace attribute values in a given layer without having
          to individually change each note's grace attribute value. The artic.ges, dur.ges, oct.ges,
          pname.ges attributes record the articulation, duration, octave, and pitch name when the
          performed value differs from the written value. The accid.ges attribute may be used to
          record the implicit accidental, that is, the pitch alteration required by the key
          signature, for use in conversion to sound and for harmonic analysis. Therefore, only the
          flat, double flat, sharp and double sharp values are permitted. Unlike dur attributes
          elsewhere, the dur.ges attribute (performed duration) type is CDATA. This allows the
          expression of performance duration in user- defined terms, such as
          measures[s]:beat[s].beatpart, MIDI clicks, Humdrum *recip values, etc. Because dur.ges
          isn't limited to the standard duration values, a dots.ges attribute is unnecessary. See
          Read, p. 238-241, for a discussion of grace notes. The pnum attribute holds a
          pitch-to-number mapping, a base-40 or MIDI note number, for example. The instr attribute
          provides a way of pointing to a MIDI instrument definition. It must contain the ID of an
          instrdef element elsewhere in the document. The num and numbase attributes are provided
          for use when the performed duration of the note is best expressed as a ratio. String
          tablature information can be recorded in the tab.fret and tab.string attributes.</desc>
               <attList>
                  <attDef ident="tab.fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRETNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.string" usage="opt">
                     <datatype>
                        <rng:ref name="data.STRINGNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota.base">
               <desc/>
               <attList>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="gliss" usage="opt">
                     <datatype>
                        <rng:ref name="data.GLISSANDO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME.GES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pnum" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota">
               <desc/>
               <classes>
                  <memberOf key="att.ges.nota.base"/>
                  <memberOf key="att.ges.nota.tablature"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.nota">
               <desc>Logical domain attributes: The pname, accid, oct, dur, dots, and artic attributes
          encode the *written* note name, accidental, octave, duration, articulations, augmentation
          dots, and articulations. The acci attribute records the notated accidental for the note,
          e.g. flat, sharp, natural, double flat, double sharp (both forms), natural+flat,
          natural+sharp, and the quarter tone accidentals. The beam attribute records the presence
          of a beam in which this note participates. Software may use this attribute or beam
          elements for rendering. The dots attribute records the number of augmentation dots
          required by a dotted duration. The corona (the name for fermata in the mensural
          repertoire), slur, syl, tie, lv (laissez vibrer), and tuplet attributes encode the
          presence of a fermata, slur, syl, tie, lv, or tuplet in which this note participates.
          Software may render fermata, slur, syl, tie, lv or tuplet indications based on these
          attributes or require separate fermata, slur, syl, tie, generic curve, or tuplet elements
          for visual rendition. Similarly, the lig attribute indicates participation of this note in
          a ligature.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corona" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION.MENSURAL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lig" usage="opt">
                     <valList type="closed">
                        <valItem ident="recta"/>
                        <valItem ident="obliqua"/>
                     </valList>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.nota">
               <desc>Visual domain attributes: The distance between the accidental and the note it
          modifies should be recorded in the accid.ho attribute. The headshape attribute may be used
          to override the headshape normally used for the given duration. The enclose.accid and
          enclose.note attributes record the symbol to be used around the accidental and the entire
          note, respectively. For an example of cautionary accidentals enclosed in parentheses or
          brackets see Read, p. 131, ex. 9-14. The coloration attribute may be used to indicate a
          reverse coloration, i.e., black instead of white or white instead of black. The dot.ho and
          dot.vo attributes record the offset of the dot from its "normal" position while the dot.x
          and dot.y attributes record the precise position of the dot. The %att.visualoffset entity
          is expanded here in order to disallow a vertical offset.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="accid.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="colored" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.note" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.note">
               <desc>Analytical domain attributes: accid.cautionary cautionary accidental
          accid.editorial editorial accidental or musica ficta hfunc harmonic function, e.g. root,
          3rd, 5th inth harmonic interval from pitch in same chord intm melodic interval from
          previous pitch mfunc melodic function, e.g. appogg., N.T. pclass pitch class psolfa solfa,
          e.g. do, re, mi, etc.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note.tablature">
               <desc>Gestural domain (performance) attributes: Setting the grace attribute here provides
          the possibility of changing all the grace attribute values in a given layer without having
          to individually change each note's grace attribute value. The artic.ges, dur.ges, oct.ges,
          pname.ges attributes record the articulation, duration, octave, and pitch name when the
          performed value differs from the written value. The accid.ges attribute may be used to
          record the implicit accidental, that is, the pitch alteration required by the key
          signature, for use in conversion to sound and for harmonic analysis. Therefore, only the
          flat, double flat, sharp and double sharp values are permitted. Unlike dur attributes
          elsewhere, the dur.ges attribute (performed duration) type is CDATA. This allows the
          expression of performance duration in user- defined terms, such as
          measures[s]:beat[s].beatpart, MIDI clicks, Humdrum *recip values, etc. Because dur.ges
          isn't limited to the standard duration values, a dots.ges attribute is unnecessary. See
          Read, p. 238-241, for a discussion of grace notes. The pnum attribute holds a
          pitch-to-number mapping, a base-40 or MIDI note number, for example. String tablature
          information can be recorded in the tab.fret and tab.string attributes. The instr attribute
          provides a way of pointing to a MIDI instrument definition. It must contain the ID of an
          instrdef element elsewhere in the document.</desc>
               <attList>
                  <attDef ident="tab.fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRETNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.string" usage="opt">
                     <datatype>
                        <rng:ref name="data.STRINGNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note.base">
               <desc/>
               <attList>
                  <attDef ident="accid.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="gliss" usage="opt">
                     <datatype>
                        <rng:ref name="data.GLISSANDO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME.GES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pnum" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note">
               <desc/>
               <classes>
                  <memberOf key="att.ges.note.base"/>
                  <memberOf key="att.ges.note.tablature"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.note">
               <desc>Logical domain attributes: The pname, accid, oct, dur, dots, and artic attributes
          encode the *written* note name, accidental, octave, duration, articulations, augmentation
          dots, and articulations. The acci attribute records the notated accidental for the note,
          e.g. flat, sharp, natural, double flat, double sharp (both forms), natural+flat,
          natural+sharp, and the quarter tone accidentals. The beam attribute records the presence
          of a beam in which this note participates. Software may use this attribute or beam
          elements for rendering. The dots attribute records the number of augmentation dots
          required by a dotted duration. The fermata, slur, syl, tie, lv (laissez vibrer), and
          tuplet attributes encode the presence of a fermata, slur, syl, tie, lv, or tuplet in which
          this note participates. Software may render fermata, slur, syl, tie, lv or tuplet
          indications based on these attributes or require separate fermata, slur, syl, tie, generic
          curve, or tuplet elements for visual rendition.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lv" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
                  <attDef ident="tie" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.note">
               <desc>Visual domain attributes: The distance between the accidental and the note it
          modifies should be recorded in the accid.ho attribute. The headshape attribute may be used
          to override the headshape normally used for the given duration. The enclose.accid and
          enclose.note attributes record the symbol to be used around the accidental and the entire
          note, respectively. For an example of cautionary accidentals enclosed in parentheses or
          brackets see Read, p. 131, ex. 9-14. The coloration attribute may be used to indicate a
          reverse coloration, i.e., black instead of white or white instead of black. The dot.ho and
          dot.vo attributes record the offset of the dot from its "normal" position while the dot.x
          and dot.y attributes record the precise position of the dot. The %att.visualoffset entity
          is expanded here in order to disallow a vertical offset.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="accid.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.note" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.octave">
               <desc/>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.octave">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the octave displacement when it differs from the logical and visual durations. It may be
          expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
          Humdrum *recip values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.octave">
               <desc>Logical domain attributes: The dur attribute encodes the logical and visual
          duration of the octave displacement. If logical and visual duration differ, it may be
          necessary to add a dur.vis attribute. Please note that the dur attribute here is not a
          true duration, but rather a time stamp for the end point of the octave displacement. The
          dur attribute is NOT REQUIRED because the octave displacement can be visually
          instantaneous. The place attribute indicates direction of displacement and display
          location and therefore is REQUIRED. The dis attribute states the amount of displacement
          while coll (Read, p. 47-48) encodes whether the octave displacement should be performed
          simultaneously with the written notes.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="coll" usage="opt">
                     <valList type="closed">
                        <valItem ident="coll"/>
                     </valList>
                  </attDef>
                  <attDef ident="dis" usage="req">
                     <datatype>
                        <rng:ref name="data.OCTAVE.DIS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="req">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.octave">
               <desc>Visual domain attributes: The rend attribute captures the appearance of the
          continuation line associated with the octave shift.</desc>
               <classes>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ossia">
               <desc>Analytical domain attributes: ossia uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ossia">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ossia">
               <desc>Logical domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ossia">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pad">
               <desc>Analytical domain attributes: pad uses only common analysis attributes.</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pad">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.pad">
               <desc>Logical domain attributes: The num attribute is the amount of horizontal space to
          be added, expressed in one-half inter-line staff distance units.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pad">
               <desc>Visual domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pedal">
               <desc>Analytical domain attributes: pedal uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pedal">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.pedal">
               <desc>Logical domain attributes: The dir attribute records the position of the
          pedal.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dir" usage="req">
                     <valList type="closed">
                        <valItem ident="down"/>
                        <valItem ident="up"/>
                        <valItem ident="half"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pedal">
               <desc>Visual domain attributes: When style is set to 'line', the pedal mark is rendered
          with a continuous line. When it's set to pedstar, a pedal down is rendered with "Ped.", a
          pedal up is rendered as "*", and a pedal "bounce" is rendered with "Ped. *". When set to
          altpedstar pedal up and down indications are the same as with pedstar but a bounce is
          rendered with "Ped." only. The place attribute captures the placement of the pedal marking
          with respect to the staff with which it is associated. Modern publishing standards require
          the place to be 'below'; however, for transcriptions of manuscript works, this attribute
          class allows the full range of values.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="style" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="pedstar"/>
                        <valItem ident="altpedstar"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.phrase">
               <desc>Analytical domain attributes: The join attribute should be used for linking
          visually separate phrase marks, sometimes necessary due to system breaks, that form a
          single musical phrase.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.phrase">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.phrase">
               <desc>Logical domain attributes: Phrase may either use tstamp and dur or startid and
          endid attributes. It is a semantic error not to specify one of these attribute
          combinations.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.phrase">
               <desc>Visual domain attributes: The bulge or, alternatively, the bezier attribute,
          describes the shape of the phrase mark. The bulge attribute describes the curve as a set
          of distance values above or below an imaginary line connecting the endpoints of the curve
          while the bezier attribute records the placement of Bezier control points as a series of
          space-separated xy coordinates, eg. 19 45 -32 118. The bulge attribute must contain one or
          more values of type %NUMBER. The vo attribute is the vertical offset (from its normal
          position) of the entire rendered phrase mark. The rend attribute captures the appearance
          of the phrase mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.reh">
               <desc>Analytical domain attributes: reh uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.reh">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.reh">
               <desc>Logical domain attributes: %att.controlevent is expanded here in order to disallow
          the plist and layer attributes. reh may use either a tstamp or start attribute. It is a
          semantic error not to include one of these attributes. The a.startendid entity is expanded
          here in order to disallow the end attribute.</desc>
               <classes>
                  <memberOf key="att.nextprev"/>
               </classes>
               <attList>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.reh">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.rest">
               <desc>Analytical domain attributes: rest uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.rest">
               <desc>Gestural domain (performance) attributes: The dur.ges attribute encodes the
          gestural duration of the rest when it differs from the logical and visual durations. It
          may be expressed in several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI
          clicks), Humdrum *recip values, or MusicXML 'divisions', etc. The instr attribute provides
          a way of pointing to a MIDI instrument definition. It must contain the ID of an instrdef
          element elsewhere in the document.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.rest">
               <desc>Logical domain attributes: The beam, fermata, and tuplet attributes may be used to
          indicate the attachment of these things to this element. If visual information about these
          items needs to be recorded, then the elements corresponding to these attributes should be
          employed. The dots attribute records the number of augmentation dots required by a dotted
          duration.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.rest">
               <desc>Visual domain attributes: See Read, ex. 7-14 for an example of vertical offset. The
          line attribute must contain a value from 1 to the number of stafflines. The value
          indicates the line upon which the rest stands. The spaces attribute states how many spaces
          are covered by the rest.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pausa">
               <desc>Analytical domain attributes: pausa uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pausa">
               <desc>Gestural domain (performance) attributes: The dur.ges attribute records the
          performed duration of the pausa when it differs from the written duration. The instr
          attribute provides a way of pointing to a MIDI instrument definition. It must contain the
          ID of an instrdef element elsewhere in the document.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.pausa">
               <desc>Logical domain attributes: The corona (the name for fermata in the mensural
          repertoire) attribute may be used to indicate the attachment of a corona to this element.
          If visual information about the fermata needs to be recorded, then a fermata element
          should be employed. The dots attribute records the number of augmentation dots required by
          a dotted duration.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corona" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION.MENSURAL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pausa">
               <desc>Visual domain attributes: The line attribute must contain a value from 1 to the
          number of stafflines. The value indicates the line upon which the rest stands. The spaces
          attribute states how many spaces are covered by the rest.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="colored" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="line" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spaces" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.slur">
               <desc>Analytical domain attributes: The join attribute should be used for linking
          visually separate phrase marks, sometimes necessary due to system breaks, that form a
          single musical phrase.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.slur">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.slur">
               <desc>Logical domain attributes: The dur attribute encodes the logical and visual
          duration of the slur. If logical and visual duration differ, it may be necessary to add a
          dur.vis attribute. Please note that the dur attribute is not a true duration, but rather a
          time stamp for the end point of the slur. Durations of longer than one measure may give
          the number of measures followed by the timestamp, e.g. "1m+3". Values within the current
          measure may be expressed as "0m+3" or as simply "3". Slur may either use tstamp and dur or
          startid and endid attributes. It is a semantic error not to specify one of these attribute
          combinations.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.slur">
               <desc>Visual domain attributes: The bulge or, alternatively, the bezier attribute,
          describes the shape of the slur/phrase mark. The bulge attribute describes the curve as a
          set of distance values above (positive value) or below (negative value) an imaginary line
          connecting the endpoints of the curve while the bezier attribute records the placement of
          Bezier control points as a series of space-separated xy coordinates, eg. 19 45 -32 118.
          The bulge attribute must contain one or more values of type %NUMBER. The vo attribute is
          the vertical offset (from its normal position) of the entire rendered slur/phrase mark.
          The rend attribute captures the appearance of the slur mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.space">
               <desc>Analytical domain attributes: space uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.space">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the space when it differs from the logical and visual durations. It may be expressed in
          several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.space">
               <desc>Logical domain attributes: The beam, fermata, and tuplet attributes may be used to
          indicate the participation of this element in a beam or tuplet or attachment of a fermata
          to this element. If visual information about these items needs to be recorded, then the
          elements corresponding to these attributes should be employed. The dots attribute records
          the number of augmentation dots required by a dotted duration. The duration (in musical
          terms) of the space may be recorded in the dur attribute.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.space">
               <desc>Visual domain attributes: If the space is 'compressable', i.e., it may be removed
          by processing software, then the compressable attribute may be used.</desc>
               <attList>
                  <attDef ident="compressable" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.syl">
               <desc>Analytical domain attributes: syl uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.syl">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.syl">
               <desc>Logical domain attributes: Lyric syllable connectors, i.e., symbols typically used
          to indicate breaks between syllables: s (_s_pace) = word separator d (_d_ash) = syllable
          separator u (_u_nderscore) = syllable extension t (_t_ilde) = syllable elision The wordpos
          attribute records the position of the syllable within a word.</desc>
               <attList>
                  <attDef ident="con" usage="opt">
                     <valList type="closed">
                        <valItem ident="s"/>
                        <valItem ident="d"/>
                        <valItem ident="u"/>
                        <valItem ident="t"/>
                     </valList>
                  </attDef>
                  <attDef ident="wordpos" usage="opt">
                     <valList type="closed">
                        <valItem ident="i"/>
                        <valItem ident="m"/>
                        <valItem ident="t"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.syl">
               <desc>Visual domain attributes: The ho attribute allows any lyric syllable to be
          horizontally offset from its normal (centered below the note) position. Horizontal
          alignment of the syllable with respect to the note to which it is attached may be
          indicated in the halign attribute. The appearance of the text is captured in the rend
          attribute.</desc>
               <classes>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="halign" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="justify"/>
                     </valList>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEXTRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tempo">
               <desc>Analytical domain attributes: tempo uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tempo">
               <desc>Gestural domain attributes: The midi attribute must contain the number of quarter
          notes per minute in the range from 10 to 1000. The value attribute is for a
          beats-per-minute value.</desc>
               <attList>
                  <attDef ident="midi" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDITEMPO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="value" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPOVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.tempo">
               <desc>Logical domain attributes: The dur.vis attribute encodes visual duration. (Read, p.
          276-281) If logical and visual durations differ, it may be necessary to add a dur
          attribute. Please note that the dur attribute here is expressed in musical time, i.e.,
          beats or other time stamp. Therefore, it is not a true duration, but rather a time stamp
          for the end point of the directive. The a.startendid entity is expanded here in order to
          disallow the end attribute.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tempo">
               <desc>Visual domain attributes: The dur.vis attribute should be used to record the visual
          duration of the tempo marking in the source.</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="dur.vis" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tie">
               <desc>Analytical domain attributes: tie uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tie">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.tie">
               <desc>Logical domain attributes: The a.startendid entity is expanded here in order to
          make startid and endid attributes required.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="endid" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tie">
               <desc>Visual domain attributes: The bulge or, alternatively, the bezier attribute,
          describes the shape of the tie. The bulge attribute describes the curve as a set of
          distance values above or below an imaginary line connecting the endpoints of the curve
          while the bezier attribute records the placement of Bezier control points as a series of
          space-separated xy coordinates, eg. 19 45 -32 118. The bulge attribute must contain one or
          more values of type %NUMBER. The vo attribute is the vertical offset (from its normal
          position) of the entire rendered tie. The startho, startvo, endho, and endvo attributes
          describe the horizontal and vertical offsets of the start and end points of the tie in
          terms of interline distance. Startto and endto describe the start and end points in terms
          of time; that is, beats. The appearance of the tie is captured in the rend
          attribute.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.trill">
               <desc>Analytical domain attributes: trill uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.trill">
               <desc>Gestural domain attributes: The dur.ges attribute encodes the gestural duration of
          the trill when it differs from the logical and visual durations. It may be expressed in
          several forms, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks), Humdrum *recip
          values, or MusicXML 'divisions', etc.</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.trill">
               <desc>Logical domain attributes: The dur attribute encodes the logical and visual
          duration of the trill. If logical and visual duration differ, it may be necessary to add a
          dur.vis attribute. Please note that the dur attribute is not a true duration, but rather a
          time stamp for the end point of the directive. Alternatively, startid and endid attributes
          may be used. An accidental for the trill may be supplied in the accid attribute.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.trill">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tuplet">
               <desc>Analytical domain attributes: tuplet uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tuplet">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.tuplet">
               <desc>Logical domain attributes: The dur attribute is the time taken up by the tuplet.
          Unlike other control events where the dur attribute is expressed as a time stamp, dur here
          is a true duration. If dur is omitted, the default is to calculate the total duration of
          the included notes and use the next shorter un-dotted value. The dots attribute records
          the number of augmentation dots required by a dotted duration. The num and numbase
          attributes express a ratio. They may be used for explicit labelling of the tuplet, such
          as, '3' with an 8th-note triplet, '3:2' over a quarter-note triplet, etc. The rendering of
          the ratio, however, is dependent on the num.format attribute found in the att.vis.tuplet
          attribute class. In the case of tuplets that cross staves, the with attribute is used to
          indicate which staff the tuplet is connected to; that is, the staff above or the staff
          below.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tuplet">
               <desc>Visual domain attributes: The bracket.place attribute is used to state where the
          bracket will be placed in relation to the noteheads, while the num.place attribute gives
          the placement of the number or ratio label for the tuplet (if num.visible is 'yes'). The
          num.visible, bracket.visible, and dur.visible attributes indicate whether the numbers,
          bracket, and duration are visible. The num.format attribute controls how the num:numbase
          ratio is to be displayed. When set to 'count' only the num attribute is displayed;
          however, when set to 'ratio', both the num and numbase attributes are displayed, i.e.,
          '7:4'. In the case of tuplets that cross staves, the with attribute is used to indicate
          which staff the tuplet is connected to; that is, the staff above or the staff
          below.</desc>
               <attList>
                  <attDef ident="bracket.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bracket.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.format" usage="opt">
                     <valList type="closed">
                        <valItem ident="count"/>
                        <valItem ident="ratio"/>
                     </valList>
                  </attDef>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tupletspan">
               <desc>Analytical domain attributes: tupletspan uses only common analysis
          attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tupletspan">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.tupletspan">
               <desc>Logical domain attributes: The dur attribute is the time taken up by the tuplet.
          Unlike other control events where the dur attribute is expressed as a time stamp, dur here
          is a true duration. If dur is omitted, the default is to calculate the total duration of
          the included notes and use the next shorter un-dotted value. The dots attribute records
          the number of augmentation dots required by a dotted duration. The num and numbase
          attributes express a ratio. They may be used for explicit labelling of the tuplet, such
          as, '3' with an 8th-note triplet, '3:2' over a quarter-note triplet, etc. The rendering of
          the ratio, however, is dependent on the num.format attribute found in the
          att.vis.tupletspan attribute class. In the case of tuplets that cross staves, the with
          attribute is used to indicate which staff the tuplet is connected to; that is, the staff
          above or the staff below.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tupletspan">
               <desc>Visual domain attributes: The bracket.place attribute is used to state where the
          bracket will be placed in relation to the noteheads, while the num.place attribute gives
          the placement of the number or ratio label for the tuplet (if num.visible is 'yes'). The
          num.visible, bracket.visible, and dur.visible attributes indicate whether the numbers,
          bracket, and duration are visible. The num.format attribute controls how the num:numbase
          ratio is to be displayed. When set to 'count' only the num attribute is displayed;
          however, when set to 'ratio', both the num and numbase attributes are displayed, i.e.,
          '7:4'. In the case of tuplets that cross staves, the with attribute is used to indicate
          which staff the tuplet is connected to; that is, the staff above or the staff
          below.</desc>
               <attList>
                  <attDef ident="bracket.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bracket.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.format" usage="opt">
                     <valList type="closed">
                        <valItem ident="count"/>
                        <valItem ident="ratio"/>
                     </valList>
                  </attDef>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.turn">
               <desc>Analytical domain attributes: turn uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.turn">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.turn">
               <desc>Logical domain attributes: The form attribute indicates whether the turn begins on
          the note above (norm) or on the note below (inv). Accidentals for the turn may be supplied
          in the accidupper and accidlower attributes. The a.startendid entity is expanded here in
          order to disallow the end attribute. When the delayed attribute is set to 'yes', the turn
          begins on the second half of the beat. See Read, p. 246.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="accidupper" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accidlower" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="delayed" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.turn">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.verse">
               <desc>Analytical domain attributes: verse uses only common analysis attributes.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.verse">
               <desc>Gestural domain attributes:</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.verse">
               <desc>Logical domain attributes: The n attribute should be used for verse numbers.
          Numbers need not be consecutive; they may be expressed as ranges, e.g. 2-3,6. A value of
          'true' may be used in the refrain attribute in order to indicate a common, usually
          centered, refrain (Mup User's Guide, p. 44). The rhythm attribute may be used to specify a
          rhythm for the lyrics that differs from that of the notes on the staff.</desc>
               <attList>
                  <attDef ident="refrain" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rhythm" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.verse">
               <desc>Visual domain attributes:</desc>
               <classes>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.visualoffset.vo"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <!--
                                ****
                                Defintion of Element Model Classes
                                Number of definitions found in original RNG: 109
                                ****
                            --><macroSpec type="pe" ident="model.addressLike">
               <desc/>
               <content>
                  <rng:ref name="address"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.annotLike">
               <desc/>
               <content>
                  <rng:ref name="annot"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.biblLike">
               <desc/>
               <content>
                  <rng:ref name="bibl"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.dateLike">
               <desc/>
               <content>
                  <rng:ref name="date"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editionLike">
               <desc/>
               <content>
                  <rng:ref name="edition"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editorialLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="abbr"/>
                     <rng:ref name="expan"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.graphicLike">
               <desc/>
               <content>
                  <rng:ref name="graphic"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.identifierLike">
               <desc/>
               <content>
                  <rng:ref name="identifier"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lbLike">
               <desc/>
               <content>
                  <rng:ref name="lb"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.milestoneLike.text">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="lb"/>
                     <rng:ref name="pb"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike">
               <desc/>
               <content>
                  <rng:ref name="name"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.noteModifierLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="accid"/>
                     <rng:ref name="artic"/>
                     <rng:ref name="dot"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.numLike">
               <desc/>
               <content>
                  <rng:ref name="num"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pLike">
               <desc/>
               <content>
                  <rng:ref name="p"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pbLike">
               <desc/>
               <content>
                  <rng:ref name="pb"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.rendLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="rend"/>
                     <rng:ref name="stack"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.repositoryLike">
               <desc/>
               <content>
                  <rng:ref name="repository"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.titleLike">
               <desc/>
               <content>
                  <rng:ref name="title"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pgmetaLike">
               <desc/>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="fw"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="pgdesc"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pgmetaLike.score">
               <desc/>
               <content>
                  <rng:optional>
                     <rng:ref name="pghead1"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="pghead2"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="pgfoot1"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="pgfoot2"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.common">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="clefchange"/>
                     <rng:ref name="custos"/>
                     <rng:ref name="pad"/>
                     <rng:ref name="space"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.neume-mensural">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="ligature"/>
                     <rng:ref name="mensurchange"/>
                     <rng:ref name="proportchange"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.mensural-cmn">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="barline"/>
                     <rng:ref name="keychange"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike.common">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="dir"/>
                     <rng:ref name="dynam"/>
                     <rng:ref name="phrase"/>
                     <rng:ref name="tempo"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.keyaccidLike">
               <desc/>
               <content>
                  <rng:ref name="keyaccid"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.keysigLike">
               <desc/>
               <content>
                  <rng:ref name="keysig"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.backLike">
               <desc/>
               <content>
                  <rng:ref name="back"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.divLike">
               <desc/>
               <content>
                  <rng:ref name="div"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.frontLike">
               <desc/>
               <content>
                  <rng:ref name="front"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.headLike">
               <desc/>
               <content>
                  <rng:ref name="head"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lLike">
               <desc/>
               <content>
                  <rng:ref name="l"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.listLike">
               <desc/>
               <content>
                  <rng:ref name="list"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.quoteLike">
               <desc/>
               <content>
                  <rng:ref name="blockquote"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.tableLike">
               <desc/>
               <content>
                  <rng:ref name="table"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lgLike">
               <desc/>
               <content>
                  <rng:ref name="lg"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.labelLike">
               <desc/>
               <content>
                  <rng:ref name="label"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.endingLike">
               <desc/>
               <content>
                  <rng:ref name="ending"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.instrdefLike">
               <desc/>
               <content>
                  <rng:ref name="instrdef"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.layerLike">
               <desc/>
               <content>
                  <rng:ref name="layer"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.layerdefLike">
               <desc/>
               <content>
                  <rng:ref name="layerdef"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.mdivLike">
               <desc/>
               <content>
                  <rng:ref name="mdiv"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.milestoneLike.music">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="model.pbLike"/>
                     <rng:ref name="sb"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.musicPart">
               <desc/>
               <content>
                  <rng:optional>
                     <rng:ref name="model.frontLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:choice>
                        <rng:ref name="body"/>
                        <rng:ref name="group"/>
                     </rng:choice>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.backLike"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.partLike">
               <desc/>
               <content>
                  <rng:ref name="part"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.partsLike">
               <desc/>
               <content>
                  <rng:ref name="parts"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.scoreLike">
               <desc/>
               <content>
                  <rng:ref name="score"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.sectionLike">
               <desc/>
               <content>
                  <rng:ref name="section"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffLike">
               <desc/>
               <content>
                  <rng:ref name="staff"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffdefLike">
               <desc/>
               <content>
                  <rng:ref name="staffdef"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffgrpLike">
               <desc/>
               <content>
                  <rng:ref name="staffgrp"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.agent">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="corpname"/>
                     <rng:ref name="persname"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.geogname">
               <desc/>
               <content>
                  <rng:ref name="geogname"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.place">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="geogname"/>
                     <rng:ref name="model.repositoryLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.nameLike.label">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="periodname"/>
                     <rng:ref name="stylename"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.figureLike">
               <desc/>
               <content>
                  <rng:ref name="fig"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.captionLike">
               <desc/>
               <content>
                  <rng:ref name="caption"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.availabilityPart">
               <desc/>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="acqsource"/>
                     <rng:zeroOrMore>
                        <rng:ref name="accessdesc"/>
                        <rng:optional>
                           <rng:ref name="price"/>
                        </rng:optional>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="userestrict"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="sysreq"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.biblPart">
               <desc/>
               <content>
                  <rng:ref name="model.editionLike"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editorialdeclPart">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="correction"/>
                     <rng:ref name="interpretation"/>
                     <rng:ref name="normalization"/>
                     <rng:ref name="segmentation"/>
                     <rng:ref name="stdvals"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.encodingPart">
               <desc/>
               <content>
                  <rng:optional>
                     <rng:ref name="appinfo"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="projectdesc"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="samplingdecl"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="editorialdecl"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.locrefLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="extptr"/>
                     <rng:ref name="extref"/>
                     <rng:ref name="ptr"/>
                     <rng:ref name="ref"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.ptrLike">
               <desc/>
               <content>
                  <rng:ref name="ptr"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.measurementLike">
               <desc/>
               <content>
                  <rng:ref name="model.numLike"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.lyricsLike">
               <desc/>
               <content>
                  <rng:ref name="lyrics"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.sylLike">
               <desc/>
               <content>
                  <rng:ref name="syl"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.verseLike">
               <desc/>
               <content>
                  <rng:ref name="verse"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.ornamentLike.cmn">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="mordent"/>
                     <rng:ref name="trill"/>
                     <rng:ref name="turn"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.syllableLike">
               <desc/>
               <content>
                  <rng:ref name="syllable"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.neumeModifierLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="accid"/>
                     <rng:ref name="artic"/>
                     <rng:ref name="model.verseLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.neume">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="ineume"/>
                     <rng:ref name="uneume"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.mensural">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="nota"/>
                     <rng:ref name="pausa"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.measureLike">
               <desc/>
               <content>
                  <rng:ref name="measure"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.ossiaLike">
               <desc/>
               <content>
                  <rng:ref name="ossia"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike.instruments">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="harppedal"/>
                     <rng:ref name="pedal"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike.cmn">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="arpeg"/>
                     <rng:ref name="beamspan"/>
                     <rng:ref name="breath"/>
                     <rng:ref name="fermata"/>
                     <rng:ref name="hairpin"/>
                     <rng:ref name="octave"/>
                     <rng:ref name="model.ornamentLike.cmn"/>
                     <rng:ref name="reh"/>
                     <rng:ref name="slur"/>
                     <rng:ref name="model.controleventLike.instruments"/>
                     <rng:ref name="tie"/>
                     <rng:ref name="tupletspan"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.cmn">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="beam"/>
                     <rng:ref name="bend"/>
                     <rng:ref name="beatrpt"/>
                     <rng:ref name="btrem"/>
                     <rng:ref name="chord"/>
                     <rng:ref name="ftrem"/>
                     <rng:ref name="gliss"/>
                     <rng:ref name="halfmrpt"/>
                     <rng:ref name="note"/>
                     <rng:ref name="rest"/>
                     <rng:ref name="tuplet"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike.cmn.measureFilling">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="mrest"/>
                     <rng:ref name="mrpt"/>
                     <rng:ref name="mrpt2"/>
                     <rng:ref name="mspace"/>
                     <rng:ref name="multirest"/>
                     <rng:ref name="multirpt"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.chordtableLike">
               <desc/>
               <content>
                  <rng:ref name="chordtable"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.harmLike">
               <desc/>
               <content>
                  <rng:ref name="harm"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.graphicprimitiveLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="curve"/>
                     <rng:ref name="line"/>
                     <rng:ref name="symbol"/>
                     <rng:ref name="anchoredtext"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.symboltableLike">
               <desc/>
               <content>
                  <rng:ref name="symboltable"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.apparatusLike">
               <desc/>
               <content>
                  <rng:ref name="app"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.midiLike">
               <desc/>
               <content>
                  <rng:ref name="midi"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.frontPart">
               <desc/>
               <content>
                  <rng:ref name="titlepage"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.transcriptionLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="add"/>
                     <rng:ref name="corr"/>
                     <rng:ref name="damage"/>
                     <rng:ref name="del"/>
                     <rng:ref name="orig"/>
                     <rng:ref name="reg"/>
                     <rng:ref name="restore"/>
                     <rng:ref name="sic"/>
                     <rng:ref name="supplied"/>
                     <rng:ref name="unclear"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.editLike">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="choice"/>
                     <rng:ref name="handshift"/>
                     <rng:ref name="gap"/>
                     <rng:ref name="subst"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.choicePart">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="corr"/>
                     <rng:ref name="orig"/>
                     <rng:ref name="reg"/>
                     <rng:ref name="sic"/>
                     <rng:ref name="unclear"/>
                     <rng:ref name="model.editorialLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.facsimileLike">
               <desc/>
               <content>
                  <rng:ref name="facsimile"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.alignLike">
               <desc/>
               <content>
                  <rng:ref name="timeline"/>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.headerPart">
               <desc/>
               <content>
                  <rng:optional>
                     <rng:ref name="encodingdesc"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="profiledesc"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.physdescPart">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="condition"/>
                     <rng:ref name="dimensions"/>
                     <rng:ref name="exhibithist"/>
                     <rng:ref name="extent"/>
                     <rng:ref name="handlist"/>
                     <rng:ref name="inscription"/>
                     <rng:ref name="physmedium"/>
                     <rng:ref name="physloc"/>
                     <rng:ref name="provenance"/>
                     <rng:ref name="repository"/>
                     <rng:ref name="model.frontPart"/>
                     <rng:ref name="treatmenthist"/>
                     <rng:ref name="treatmentsched"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.profiledescPart">
               <desc/>
               <content>
                  <rng:optional>
                     <rng:ref name="creation"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="langusage"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="classification"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.pubstmtPart">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="model.nameLike.geogname"/>
                     <rng:ref name="model.addressLike"/>
                     <rng:ref name="respstmt"/>
                     <rng:ref name="model.dateLike"/>
                     <rng:ref name="identifier"/>
                     <rng:ref name="availability"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.textphraseLike">
               <desc>Phrase-level text elements.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.locrefLike"/>
                     <rng:ref name="model.addressLike"/>
                     <rng:ref name="model.annotLike"/>
                     <rng:ref name="model.biblLike"/>
                     <rng:ref name="model.editorialLike"/>
                     <rng:ref name="model.nameLike"/>
                     <rng:ref name="model.nameLike.agent"/>
                     <rng:ref name="model.nameLike.place"/>
                     <rng:ref name="model.nameLike.label"/>
                     <rng:ref name="model.dateLike"/>
                     <rng:ref name="model.rendLike"/>
                     <rng:ref name="model.measurementLike"/>
                     <rng:ref name="model.titleLike"/>
                     <rng:ref name="model.identifierLike"/>
                     <rng:ref name="model.figureLike"/>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.textphraseLike.limited">
               <desc>Anchored text sub-elements. These occur as part of the representation of the score,
          as opposed to the textual matter which accompanies it. % model.anchoredtext is equivalent
          to % model.textphraseLike without the pb element.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.locrefLike"/>
                     <rng:ref name="model.addressLike"/>
                     <rng:ref name="model.biblLike"/>
                     <rng:ref name="model.editorialLike"/>
                     <rng:ref name="model.nameLike"/>
                     <rng:ref name="model.nameLike.agent"/>
                     <rng:ref name="model.nameLike.place"/>
                     <rng:ref name="model.nameLike.label"/>
                     <rng:ref name="model.dateLike"/>
                     <rng:ref name="model.rendLike"/>
                     <rng:ref name="model.measurementLike"/>
                     <rng:ref name="model.titleLike"/>
                     <rng:ref name="model.identifierLike"/>
                     <rng:ref name="model.figureLike"/>
                     <rng:ref name="model.lbLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.paracontentPart">
               <desc>Paragraph content model. A paragraph may contain inline elements and all the other
          block-level elements except lg and itself. The % model.textphrase and % model.edit
          entities must be declared prior to the model.paracontent entity.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.quoteLike"/>
                     <rng:ref name="model.listLike"/>
                     <rng:ref name="model.tableLike"/>
                     <rng:ref name="model.textphraseLike"/>
                     <rng:ref name="model.editLike"/>
                     <rng:ref name="model.transcriptionLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.textcomponentLike">
               <desc>Block level text elements.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.quoteLike"/>
                     <rng:ref name="model.listLike"/>
                     <rng:ref name="model.pLike"/>
                     <rng:ref name="model.tableLike"/>
                     <rng:ref name="model.lgLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.Incl">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="model.apparatusLike"/>
                     <rng:ref name="model.divLike"/>
                     <rng:ref name="model.milestoneLike.music"/>
                     <rng:ref name="scoredef"/>
                     <rng:ref name="staffdef"/>
                     <rng:ref name="staffgrp"/>
                     <rng:ref name="model.annotLike"/>
                     <rng:ref name="model.graphicprimitiveLike"/>
                     <rng:ref name="model.editLike"/>
                     <rng:ref name="model.transcriptionLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.clefchangePart">
               <desc>doc:</desc>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="clef"/>
                  </rng:zeroOrMore>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffdefPart.multiplyDefinable">
               <desc>Multiple clefs</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="clef"/>
                     <rng:ref name="mensur"/>
                     <rng:ref name="proport"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.eventLike">
               <desc>Notated events. Sometimes referred to as "logical" events. The mrest, mrpt, mspace,
          multirest, and multirpt elements are not included in this list since in the measure
          element's content model they are alternatives to the elements listed here. They are,
          however, part of the att.events class.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.eventLike.common"/>
                     <rng:ref name="model.eventLike.neume"/>
                     <rng:ref name="model.eventLike.neume-mensural"/>
                     <rng:ref name="model.eventLike.mensural"/>
                     <rng:ref name="model.eventLike.mensural-cmn"/>
                     <rng:ref name="model.eventLike.cmn"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.controleventLike">
               <desc>Control events modify or otherwise depend on the existence of notated
          events.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.controleventLike.common"/>
                     <rng:ref name="model.controleventLike.cmn"/>
                     <rng:ref name="model.harmLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.layerPart">
               <desc>Notated events at the layer level</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.eventLike"/>
                     <rng:ref name="model.eventLike.cmn.measureFilling"/>
                     <rng:ref name="model.midiLike"/>
                     <rng:ref name="model.controleventLike"/>
                     <rng:ref name="model.lyricsLike"/>
                     <rng:ref name="model.noteModifierLike"/>
                     <rng:ref name="model.verseLike"/>
                     <rng:ref name="model.sylLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.syllablePart">
               <desc>Syllable content model</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.sylLike"/>
                     <rng:ref name="model.eventLike"/>
                     <rng:ref name="model.midiLike"/>
                     <rng:ref name="model.controleventLike"/>
                     <rng:ref name="model.lyricsLike"/>
                     <rng:ref name="model.noteModifierLike"/>
                     <rng:ref name="model.verseLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.staffPart">
               <desc>Staff content model</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.layerLike"/>
                     <rng:ref name="model.controleventLike"/>
                     <rng:ref name="model.syllableLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.measurePart">
               <desc>Measure content model</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.staffLike"/>
                     <rng:ref name="model.ossiaLike"/>
                     <rng:ref name="model.controleventLike"/>
                     <rng:ref name="model.lyricsLike"/>
                     <rng:ref name="model.midiLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.sectionPart">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="model.sectionLike"/>
                     <rng:ref name="model.endingLike"/>
                     <rng:ref name="model.measureLike"/>
                     <rng:ref name="model.staffLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.scorePart">
               <desc>Score components</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.sectionLike"/>
                     <rng:ref name="model.endingLike"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec type="pe" ident="model.rdgPart">
               <desc>Reading content model</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="model.sectionPart"/>
                     <rng:ref name="model.ossiaLike"/>
                     <rng:ref name="model.controleventLike"/>
                     <rng:ref name="model.lyricsLike"/>
                     <rng:ref name="model.midiLike"/>
                     <rng:ref name="model.layerLike"/>
                     <rng:ref name="model.syllableLike"/>
                     <rng:ref name="model.sylLike"/>
                     <rng:ref name="model.eventLike"/>
                     <rng:ref name="model.noteModifierLike"/>
                     <rng:ref name="model.verseLike"/>
                     <rng:ref name="model.eventLike.cmn.measureFilling"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <!--
                                ****
                                Defintion of Elements
                                Number of definitions found in original RNG: 237
                                ****
                            --><elementSpec ident="abbr">
               <desc>abbr (abbreviation) contains an abbreviation of any sort. The type attribute may be
          used to classify the abbreviation according to some convenient typology. Sample values
          include: suspension the abbreviation provides the first letter(s) of the word or phrase,
          omitting the remainder. contraction the abbreviation omits some letter(s) in the middle.
          brevigraph the abbreviation comprises a special symbol or mark. superscription the
          abbreviation includes writing above the line. acronym the abbreviation comprises the
          initial letters of the words of a phrase. title the abbreviation is for a title of address
          (Dr, Ms, Mr, ...) organization the abbreviation is for the name of an organization.
          geographic the abbreviation is for a geographic name. This tag is the mirror image of the
          &lt;expan&gt; tag; both allow the encoder to transcribe both an abbreviation and
          its expansion. In &lt;abbr&gt;, however, the original is transcribed as the
          content of the element and the expansion as an attribute value; &lt;expan&gt;
          reverses this. The choice between the two is up to the user. The &lt;abbr&gt; tag
          is not required; if appropriate, the encoder may transcribe abbreviations in the source
          text silently, without tagging them. If abbreviations are not transcribed directly but
          expanded silently, then the MEI header should so indicate. The cert attribute signifies
          the degree of certainty ascribed to the expansion of the abbreviation. The expan attribute
          gives an expansion of the abbreviation. The resp attribute contains an ID reference to an
          element containing the name of the editor or transcriber responsible for supplying the
          expansion of the abbreviation. Used by: model.editorialLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="expan" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="address">
               <desc>A postal address. Used by: model.addressLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="addressline"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="addressline">
               <desc>Single line of a postal address. Used by: address Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="anchoredtext">
               <desc>Page-anchored text. The content model here is similar to paragraph without
          %model.textcomponent and %n.pb sub-elements. If the startid attribute is present, then the
          xy coordinates are relative to the xy coordinates of the referenced element. Otherwise,
          they are assumed to be absolute page coordinate references. Used by:
          model.graphicprimitiveLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
               </classes>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="annot">
               <desc>The annot element provides a way to group participating *events* and/or *control
          events*, the notes that form a descending bass line or phrase marks, for example, and
          provide a label for or comment regarding the group. An enumerated list of event IDs may be
          given in the plist attribute. Alternatively, if only the start and/or end events in a
          group are to be marked, then use the startid and endid attributes. An editorial or
          analytical comment or observation, encoded elsewhere, such as in the front or back matter,
          in score text elements, or in an external document may be pointed to using the
          link.common, link.internal, or link.external attributes. Alternatively, the observation
          may be included directly within the annot element. The annot element, along with other
          elements with %att.link.external attributes, may also be used to link/synchronize elements
          within the MEI file to external media such as images or sound recordings. The ID of the
          MEI element(s) to be linked from should be encoded in the plist attribute while the link
          to the external media may be encoded in the href or entityref attributes or in the body of
          the annotation using extref or extptr elements. Used by: model.annotLike Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.annot"/>
                  <memberOf key="att.vis.annot"/>
                  <memberOf key="att.ges.annot"/>
                  <memberOf key="att.anl.annot"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.link.external"/>
               </classes>
               <attList>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="bibl">
               <desc>Bibliographic reference. May function as a hypertext reference to an external
          electronic resource. A more structured content model, similar to TEI's biblFull, requires
          new elements that function like those in the meiHead DTD, but that do not duplicate their
          names. Used by: model.biblLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.biblPart"/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="date">
               <desc>A date in any format. Used by: model.dateLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.date"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="edition">
               <desc>The edition designation is a word or text phrase that normally indicates a
          difference in either content or form between the item being described and a related item
          previously issued by the same publisher/distributor (e.g. 2nd edition, version 2.0, etc.),
          or simultaneously issued by either the same publisher/distributor or another
          publisher/distributor (e.g. large print edition, British edition, etc.). The
          %model.textphraseLike.limited entity is used here in order to disallow the pb element.
          Used by: model.biblPart editionstmt Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="expan">
               <desc>expan (expansion) contains the expansion of an abbreviation. The type attribute may
          be used to classify the abbreviation according to some convenient typology. See example
          values above. This tag is the mirror image of the &lt;abbr&gt; tag; both allow the
          encoder to transcribe both an abbreviation and its expansion. In &lt;abbr&gt;,
          however, the original is transcribed as the content of the element and the expansion as an
          attribute value; &lt;expan&gt; reverses this. The choice between the two is up to
          the user. The &lt;expan&gt; tag is not required; if appropriate, the encoder may
          expand abbreviations in the source text silently, without tagging them. If this is done,
          the MEI header should so indicate. The abbr attribute gives the abbreviation in its
          unexpanded form. The cert attribute signifies the degree of certainty ascribed to the
          expansion of the abbreviation. The resp attribute contains an ID reference to an element
          containing the name of the editor or transcriber responsible for supplying the expansion
          of the abbreviation held as the content of the &lt;expan&gt; element. Used by:
          model.editorialLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="abbr" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="figdesc">
               <desc>Contains a brief prose description of the appearance or content of a graphic
          figure, for use when documenting an image without displaying it. Best practice suggests
          the use of controlled vocabulary. Don't confuse this element with a figure caption. A
          caption is text primarily intended for display with an illustration. It may or may not
          function as a description of the illustration. Used by: figure surface zone Module:
          meiFigures</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.annotLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="fw">
               <desc>Forme work, e.g. header and footer. This element is intended for capture of
          header/footer material that is non-repeating; that is, it occurs on isolated pages. For
          running headers and footers use pgheadN and pgfootN elements. Auto-generated page numbers
          may be included by using a processing instruction. Used by: model.pgmetaLike Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="graphic">
               <desc>Indicates the location of an inline graphic, illustration, or figure. Used by:
          model.graphicLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.external"/>
               </classes>
               <attList>
                  <attDef ident="height" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="units" usage="opt"/>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="identifier">
               <desc>Bibliographic, e.g., International Standard Book/Music Number, Library of Congress
          Control Number, Publisher's Number, or personal identifier. Used by: model.textphraseLike
          model.textphraseLike.limited model.pubstmtPart Module: meiShared</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lb">
               <desc>Text line break. The n attribute should be used to record a label for the line,
          i.e., most likely a line number. See comment on verse element for description of func
          attribute. Used by: model.milestoneLike.text model.textphraseLike.limited Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="group"/>
                     </valList>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="name">
               <desc>Contains the name of an individual, such as 'Henry VIII, King of England', a
          corporate body, such as 'The Beatles', a geographical place or a generative mechanical
          process. They are available here in order to record any identifiers or dates, associated
          with the name, i.e., birth and death in the case of persons or creation and dissolution in
          the case of a corporate entity or place. When name parts are needed, use name
          sub-elements. The recommended values for the type attribute are: pers, corp, place,
          process. Used by: model.nameLike.agent Module: meiShared</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="num">
               <desc>A number in any form. Used by: model.measurementLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <attList>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="p">
               <desc>Paragraph Used by: model.textcomponentLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.paracontentPart"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pb">
               <desc>Page break. Meta-data about an accompanying page image may be recorded in the
          pgdesc element. The n attribute records the page number in the source. It need not be an
          integer, e.g. 'iv', or 'p17-3'. The logical page number can be calculated by counting
          previous pb ancestor elements. The source attribute is provided for linking to the
          bibliographic description of the source(s) that contains the page break. When used in a
          score context, a page break implies an accompanying system break. Permitting the following
          attributes will make it possible to record layout changes at a pagebreak rather than
          forcing a new section element: botmar %data.NUMBER; #IMPLIED height %data.NUMBER; #IMPLIED
          leftmar %data.NUMBER; #IMPLIED rightmar %data.NUMBER; #IMPLIED topmar %data.NUMBER;
          #IMPLIED spacing.system CDATA #IMPLIED width %data.NUMBER; #IMPLIED Used by:
          model.milestoneLike.text model.milestoneLike.music Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
               </classes>
               <attList>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="verso"/>
                        <valItem ident="recto"/>
                     </valList>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="model.pgmetaLike"/>
               </content>
            </elementSpec>
            <elementSpec ident="pgdesc">
               <desc>Contains a brief prose description of the appearance or description of the content
          of a physical page. Best practice suggests the use of controlled vocabulary. Don't confuse
          this element with a figure caption. A caption is text primarily intended for display with
          an illustration. It may or may not function as a description of the illustration. Perhaps
          a better model is (%model.locrefLike;)* with which one could force page-level meta-data to
          the header where it could be encoded in notesstmt elements. Used by: pb Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.annotLike"/>
                        <rng:ref name="model.locrefLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rend">
               <desc>Special visual rendering of text. A positive value for rotation rotates the text in
          a counter-clockwise fashion, while negative values produce clockwise rotation. The rend
          attribute captures the appearance of the text. The altrend attribute can be used to extend
          the values of the rend attribute. One or the other of the rend and altrend attributes is
          required. Used by: model.rendLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typography"/>
               </classes>
               <attList>
                  <attDef ident="altrend" usage="opt"/>
                  <attDef ident="halign" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="justify"/>
                     </valList>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEXTRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rotation" usage="opt">
                     <datatype>
                        <rng:ref name="data.DEGREES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="valign" usage="opt">
                     <valList type="closed">
                        <valItem ident="top"/>
                        <valItem ident="middle"/>
                        <valItem ident="bottom"/>
                        <valItem ident="baseline"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="repository">
               <desc>Institution which holds a bibliographic item. Sub-units of the institution may be
          marked with nested repository elements. Used by: model.nameLike.place Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stack">
               <desc>Stacked text, e.g. an inline table with a single column. Used by: model.rendLike
          Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <attList>
                  <attDef ident="delim" usage="opt"/>
                  <attDef ident="align" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="rightdigit"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="title">
               <desc>Title of a bibliographic entity. The type attribute may be used to classify the
          title according to some convenient typology. Sample values include: main main title
          subordinate subtitle, title of part abbreviated abbreviated form of title alternative
          alternate title by which the work is also known translated translated form of title
          uniform uniform title The type attribute is provided for convenience in analysing titles
          and processing them according to their type; where such specialized processing is not
          necessary, there is no need for such analysis, and the entire title, including subtitles
          and any parallel titles, may be enclosed within a single &lt;title&gt; element.
          The level attribute indicates whether this is the title of an article, monograph, journal,
          series, or unpublished material. Title parts may be encoded in title sub-elements since
          title is included in model.textphrase. Used by: model.titleLike Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="level" usage="opt">
                     <valList type="closed">
                        <valItem ident="a"/>
                        <valItem ident="m"/>
                        <valItem ident="j"/>
                        <valItem ident="s"/>
                        <valItem ident="u"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="clef">
               <desc>The clef element must be used when a staff employs multiple simultaneous clefs.
          Used by: model.clefchangePart model.staffdefPart.multiplyDefinable Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.anl.clef"/>
                  <memberOf key="att.ges.clef"/>
                  <memberOf key="att.log.clef"/>
                  <memberOf key="att.vis.clef"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="custos">
               <desc>Custos or direct. The symbol placed at the end of a staff to indicate the first
          note of the next staff. Used by: model.eventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.custos"/>
                  <memberOf key="att.vis.custos"/>
                  <memberOf key="att.ges.sb"/>
                  <memberOf key="att.anl.sb"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="clefchange">
               <desc>Mid-measure clef change. Coming as it does, in the middle of a measure, a clef
          change is an event. Used by: model.eventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.event"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.clefchange"/>
                  <memberOf key="att.vis.clefchange"/>
                  <memberOf key="att.ges.clefchange"/>
                  <memberOf key="att.anl.clefchange"/>
               </classes>
               <content>
                  <rng:ref name="model.clefchangePart"/>
               </content>
            </elementSpec>
            <elementSpec ident="pad">
               <desc>Used to create additional visual space between notational elements. Used by:
          model.eventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.pad"/>
                  <memberOf key="att.vis.pad"/>
                  <memberOf key="att.ges.pad"/>
                  <memberOf key="att.anl.pad"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="space">
               <desc>A placeholder used to fill an incomplete measure, layer, etc. most often so that
          the combined duration of the events equals the number of beats in the measure. Used by:
          model.eventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.space"/>
                  <memberOf key="att.vis.space"/>
                  <memberOf key="att.ges.space"/>
                  <memberOf key="att.anl.space"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="dir">
               <desc>Directives, e.g. text expressions that are on the score (typically above, below, or
          between staves), but not on the staff and not encoded elsewhere, such as in tempo or dynam
          elements. Examples include text strings, such as 'affettuoso' or fingerings and music
          symbols, such as segno and coda symbols, fermatas over a barline, etc. Unlike generic text
          elements, directives can be control elements. That is, they can be used as pointers to
          other events. The %model.textphraseLike.limited entity is employed here instead of
          %model.textphrase in order to disallow use of the pb sub-element. Used by:
          model.controleventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.dir"/>
                  <memberOf key="att.vis.dir"/>
                  <memberOf key="att.ges.dir"/>
                  <memberOf key="att.anl.dir"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="dynam">
               <desc>The dynam element may be used for instantaneous or continuous textual dynamics,
          e.g. 'p', 'mf', or 'cresc. poco a poco'. See Read, p. 250-255. The hairpin element should
          be used for graphical dynamic markings. The %model.textphraseLike.limited entity is
          employed here instead of %model.textphrase in order to disallow use of the pb sub-
          element. Used by: model.controleventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.dynam"/>
                  <memberOf key="att.vis.dynam"/>
                  <memberOf key="att.ges.dynam"/>
                  <memberOf key="att.anl.dynam"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="phrase">
               <desc>Phrase mark, used for a "unified melodic idea" (Read, p. 265). Used by:
          model.controleventLike.common Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.phrase"/>
                  <memberOf key="att.vis.phrase"/>
                  <memberOf key="att.ges.phrase"/>
                  <memberOf key="att.anl.phrase"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tempo">
               <desc>Text and symbols descriptive of tempo, mood, or style, e.g., "allarg.", "a tempo",
          "cantabile", "Moderato", "[qtrnote]=60", "Moderato [qtrnote] =60"). Both "instantaneous"
          and "continuous" tempo markings may be encoded using this element. The
          %model.textphraseLike.limited entity is employed here instead of %model.textphrase in
          order to disallow the use of the pb sub-element. Used by: model.controleventLike.common
          Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.tempo"/>
                  <memberOf key="att.vis.tempo"/>
                  <memberOf key="att.ges.tempo"/>
                  <memberOf key="att.anl.tempo"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mensur">
               <desc>The mensur element is provided for the encoding of mensural notation. Used by:
          model.staffdefPart.multiplyDefinable Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mensur"/>
                  <memberOf key="att.vis.mensur"/>
                  <memberOf key="att.ges.mensur"/>
                  <memberOf key="att.anl.mensur"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="proport">
               <desc>Proportion. Used by: model.staffdefPart.multiplyDefinable Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.proport"/>
                  <memberOf key="att.vis.proport"/>
                  <memberOf key="att.ges.proport"/>
                  <memberOf key="att.anl.proport"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="ligature">
               <desc>The ligature element is provided for the encoding of mensural notation. Used by:
          model.eventLike.neume-mensural Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.ligature"/>
                  <memberOf key="att.vis.ligature"/>
                  <memberOf key="att.ges.ligature"/>
                  <memberOf key="att.anl.ligature"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.layerPart"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mensurchange">
               <desc>Mensuration change. Used by: model.eventLike.neume-mensural Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="mensur"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="proportchange">
               <desc>Proportion change. Used by: model.eventLike.neume-mensural Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="proport"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="artic">
               <desc>Articulation. This element provides an alternative to the artic attributes on the
          note and chord elements. The element should be used when when specific display info, such
          as size or color, needs to be recorded for the articulation. Used by:
          model.noteModifierLike model.notaModifierLike model.neumeModifierLike Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.log.artic"/>
                  <memberOf key="att.vis.artic"/>
                  <memberOf key="att.ges.artic"/>
                  <memberOf key="att.anl.artic"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keyaccid">
               <desc>Accidental in a key signature. It is a semantic error not to provide x and y or
          staffloc attributes. Used by: model.keyaccidLike Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="implicit"/>
                        <valItem ident="explicit"/>
                     </valList>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname">req<datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staffloc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="value">req<datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keysig">
               <desc>Key signature. This element may be used as an alternative to the key.* attributes
          (especially key.sig.mixed) on scoredef and staffdef. Used by: model.keysigLike Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.keyaccidLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="accid">
               <desc>Accidental. This element provides an alternative to the acci attributes on the note
          element. The element should be used when specific display info, such as size or color,
          needs to be recorded for the accidental. The func attribute can be used to differentiate
          different functions, such as 'cautionary' or 'editorial'. Used by: model.noteModifierLike
          model.notaModifierLike model.neumeModifierLike model.eventLike.mensural-cmn Module:
          meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.log.accid"/>
                  <memberOf key="att.vis.accid"/>
                  <memberOf key="att.ges.accid"/>
                  <memberOf key="att.anl.accid"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="barline">
               <desc>The barline element may be used instead of the measure element. It has the same
          attributes as measure. Used by: model.eventLike.mensural-cmn Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.log.barline"/>
                  <memberOf key="att.vis.barline"/>
                  <memberOf key="att.ges.barline"/>
                  <memberOf key="att.anl.barline"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="dot">
               <desc>The dot element is provided for the encoding of mensural notation. The dot element
          may be used for dots of augmentation or division. Used by: model.eventLike.mensural-cmn
          Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.dot"/>
                  <memberOf key="att.vis.dot"/>
                  <memberOf key="att.ges.dot"/>
                  <memberOf key="att.anl.dot"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keychange">
               <desc>Key change. Used by: model.eventLike.mensural-cmn Module: meiShared</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.keyaccidLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="back">
               <desc>Back matter such as indexes, advertisements, etc. Used by: music Module:
          meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:ref name="model.divLike"/>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="blockquote">
               <desc>Blockquote contains a text phrase or passage attributed to a source external to the
          text. The source for the quote may be included in the optional bibl sub-element. Used by:
          model.textcomponentLike model.paracontentPart Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.textcomponentLike"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="model.biblLike"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="div">
               <desc>Textual division. Used by: model.divLike Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.divLike"/>
                        <rng:ref name="model.textcomponentLike"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="front">
               <desc>Front matter. The pb element is allowed here in order to accommodate page images,
          e.g. cover, endpapers, etc. before and after the actual textual matter. Used by: music
          Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.divLike"/>
                        <rng:ref name="model.frontPart"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="head">
               <desc>Contains any heading, for example, the title of a text division, or the heading of
          a list. A head is not allowed to contain a sub-head in order to encourage the proper
          nesting of div elements. Used by: model.headLike Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="item">
               <desc>Single item in a list. Used by: list Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="l">
               <desc>The l element contains a single line of text. The n attribute should be used to
          record a label for the line, i.e., most likely a line number. Do not confuse this element
          with the line element, which is used for typographical lines. Used by: model.lLike Module:
          meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lg">
               <desc>Line group usually contains verse although it may be used for any section of text
          that is organized as a group of lines. Used by: model.textcomponentLike Module:
          meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="model.lLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="list">
               <desc>List. N.B. A definition list should be encoded as a 2-column table. Used by:
          model.listLike Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="simple"/>
                        <valItem ident="marked"/>
                        <valItem ident="ordered"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="item"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="table">
               <desc>Visual layout in tabular form. Used by: model.tableLike Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="model.captionLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="tr"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="td">
               <desc>Table cell containing data. Used by: tr Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="colspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rowspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="th">
               <desc>Table cell containing header information. Used by: table Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="colspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rowspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="tr">
               <desc>Table row. Used by: table Module: meiText</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="th"/>
                        <rng:ref name="td"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="corpname">
               <desc>Identifies an organization or group of people that acts as a single entity. May
          contain name parts in corpname sub-elements since corpname is included in
          model.textphraseLike. Used by: model.nameLike.agent Module: meiNamesDates</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="geogname">
               <desc>Geographic name. The proper noun designation for a place, natural feature, or
          political jurisdiction. May contain name sub-parts in geogname sub-elements since geogname
          is included in model.textphrase. Used by: model.nameLike.place model.pubstmtPart Module:
          meiNamesDates</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="periodname">
               <desc>A label that describes a period of time, such as 'Baroque' or '3rd Style period'.
          Used by: model.nameLike.label Module: meiNamesDates</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="persname">
               <desc>Designation for an individual, including any or all of that individual's forenames,
          surnames, honorific titles, and added names. May contain name parts in persname
          sub-elements since persname is included in model.textphrase. Used by: model.nameLike.agent
          Module: meiNamesDates</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stylename">
               <desc>A label for a characteristic style of writing or performance, such as 'bebop' or
          'rock-n-roll'. Do not confuse this element with the periodname element. Used by:
          model.nameLike.label Module: meiShared</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="caption">
               <desc>A label which accompanies an illustration or a table. Used by: figure Module:
          meiFigures</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="fig">
               <desc>An illustration. Used by: model.figureLike Module: meiFigures</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="caption"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="figdesc"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="extptr">
               <desc>An empty linking element that uses attributes to connect the MEI document to an
          external electronic object. Don't confuse this element with the ptr element, which is an
          internal link for movement from one place in the MEI document to another in the same
          document. Used by: model.locrefLike Module: meiPtrRefs</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="extref">
               <desc>A linking element that can include text and subelements as part of its reference to
          an electronic object that is external to the MEI document. Don't confuse this element with
          the ref element, which is an internal link for movement from one place in the MEI document
          to another in the same document. Used by: model.locrefLike Module: meiPtrRefs</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ptr">
               <desc>An empty internal linking element that uses attributes to provide for movement from
          one place in a MEI document to another place in the same document. Unlike the ref element,
          the ptr element cannot contain text or subelements to describe the referenced object.
          Don't confuse this element with extptr which is used to connect the MEI document to an
          external electronic object. Used by: model.locrefLike Module: meiPtrRefs</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="ref">
               <desc>An internal linking element that provides for movement from one place in a MEI
          document to another point in the same document. Unlike the ptr element, ref may contain
          text and subelements to describe the destination. Don't confuse this element with extref
          which provides for linking to an electronic object that is external to the MEI document.
          Used by: model.locrefLike Module: meiPtrRefs</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="body">
               <desc>The body element contains the actual music data. When the music can be broken into
          high-level, discrete, linear segments, such as movements in the case of a symphony, there
          may be multiple mdiv elements within the body. This is the highest level indication of the
          structure of the music. The declaration of % content.body '(%model.mdivLike;)* allows the
          body element to be empty, which might be useful in some editing/creation situations. Used
          by: music Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.mdivLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ending">
               <desc>Alternative ending. The scoredef element is allowed so that an ending may have its
          own meta-data without the overhead of child &lt;section&gt;s. Div sub-elements are
          not allowed within ending in order to avoid collisions with the brackets that are usually
          displayed over endings. Endings may *not* contain other ending elements. Used by:
          model.endingLike ending Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.anl.ending"/>
                  <memberOf key="att.ges.ending"/>
                  <memberOf key="att.log.ending"/>
                  <memberOf key="att.vis.ending"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.sectionPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="group">
               <desc>The group element enables the gathering of multiple documents into a single file.
          Because its model contains the music element, each of the documents can have its own front
          and back matter. Used by: music group Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:ref name="music"/>
                     <rng:ref name="group"/>
                  </rng:choice>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="music"/>
                        <rng:ref name="group"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="grpsym">
               <desc>Group symbol, i.e., a brace or bracket. This element may be used instead of the
          staffgrp element's symbol attribute when exact placement or editorial details for the
          brace must be recorded. Used by: staffgrp Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.grpsym"/>
                  <memberOf key="att.vis.grpsym"/>
                  <memberOf key="att.ges.grpsym"/>
                  <memberOf key="att.anl.grpsym"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="instrdef">
               <desc>Default MIDI instrument declaration. This element provides a starting or default
          instrument declaration for a staff, a group of staves, or a layer. MIDI prog elements may
          then change the instrument as necessary. Used by: instrdefLike Module:
          meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt"/>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="label">
               <desc>Staff, staffgrp, or grpsym label. Used by: model.labelLike Module:
          meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="layer">
               <desc>Layer (voice). An independent stream of events on a staff. The term 'layer' in used
          in order to avoid confusion between 'voice' and 'voice leading'. The n attribute should be
          used to establish a connection back to the appropriate layerdef element. Usually, the
          topmost layer is "1", next is "2", etc. *regardless of voicing*). If the n attribute is
          omitted, encoding order is presumed to match the layer order. Of course, if data is
          supplied for only a subset of layers, the n attribute must be supplied. Used by:
          model.layerLike Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.layer"/>
                  <memberOf key="att.vis.layer"/>
                  <memberOf key="att.ges.layer"/>
                  <memberOf key="att.anl.layer"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.layerPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="layerdef">
               <desc>Container for layer (e.g. voice) meta-information. Used by: layerdefLike Module:
          meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.layerdef"/>
                  <memberOf key="att.vis.layerdef"/>
                  <memberOf key="att.ges.layerdef"/>
                  <memberOf key="att.anl.layerdef"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mdiv">
               <desc>The mdiv element may contain one or both of 2 possible views of the music. The
          score view is the traditional full and open score while the parts view contains each
          performer's view of the score; that is, his part. These 2 views are necessary because it
          is not always possible or desirable to generate one from the other. The score and parts
          elements are placed here and not directly within the body element because score and part
          characteristics may change from mdiv to mdiv. For example, the 2nd movement of a symphony
          may require different performing forces (and therefore different score and part layout)
          than the other movements. The mdiv element may be recursively nested in order to represent
          music which exhibits this kind of structure. For example, an opera is normally divided
          into acts, which are in turn divided into scenes. This may be represented by the following
          markup: &lt;mdiv&gt; &lt;- the opera &lt;mdiv&gt; &lt;- act I
          &lt;mdiv&gt; &lt;- scene i &lt;mdiv&gt; &lt;- scene ii
          &lt;/mdiv&gt; &lt;mdiv&gt; &lt;- act II &lt;mdiv&gt; &lt;-
          scene i &lt;mdiv&gt; &lt;- scene ii &lt;/mdiv&gt;
          &lt;/mdiv&gt; Used by: body mdiv Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:group>
                        <rng:optional>
                           <rng:ref name="model.scoreLike"/>
                        </rng:optional>
                        <rng:optional>
                           <rng:ref name="model.partsLike"/>
                        </rng:optional>
                     </rng:group>
                     <rng:zeroOrMore>
                        <rng:ref name="model.mdivLike"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="part">
               <desc>A part is an alternative visual rendition of the score from a particular
          performer's point of view. Part elements are not used in the score to indicate voice
          leading. Next attributes on event elements should be used for this purpose. Part elements
          are useful for encoding individual parts when there is no score, such as early music part
          books, when the music has non-aligning barlines, when different layout, such as page
          turns, are needed for the score and parts, or for accommodating software that requires
          part-by-part encoding. When assembly of the parts into a score is desired and there are
          non-aligning barlines, barlines which indicate points of alignment across all the parts
          should be marked as 'controlling', while non-aligning ones should be marked as 'non-
          controlling'. Used by: model.partLike Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.part"/>
                  <memberOf key="att.vis.part"/>
                  <memberOf key="att.ges.part"/>
                  <memberOf key="att.anl.part"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.scorePart"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="parts">
               <desc>Parts view of the mdiv. Used by: partsLike Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.parts"/>
                  <memberOf key="att.vis.parts"/>
                  <memberOf key="att.ges.parts"/>
                  <memberOf key="att.anl.parts"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.partLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pgfoot1">
               <desc>A running footer on the first page. This element is a specialized form of the fw
          element. Auto-generated page numbers may be indicated with a processing instruction. The
          pgheadN and pgfootN elements should *not* be used to encode textual notes! Used by:
          model.pgmetaLike.score Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pgfoot2">
               <desc>A running header on the pages following the first. This element is a specialized
          form of the fw element. Auto-generated page numbers may be indicated with a processing
          instruction. The pgheadN and pgfootN elements should *not* be used to encode textual
          notes! Used by: model.pgmetaLike.score Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pghead1">
               <desc>A running header on the first page. This element is a specialized form of the fw
          element for capturing the table-formatted textual data that often appears on the first
          page of printed music. It may also be used for similarly formatted material in
          manuscripts. The pgheadN and pgfootN elements should *not* be used to encode textual
          notes! Auto- generated page numbers may be indicated with a processing instruction. Used
          by: model.pgmetaLike.score Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pghead2">
               <desc>A running header on the pages following the first. This element is a specialized
          form of the fw element. The pgheadN and pgfootN elements should *not* be used to encode
          textual notes! Auto-generated page numbers may be indicated with a processing instruction.
          Used by: model.pgmetaLike.score Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sb">
               <desc>System break. Allowing staffdef content, i.e., &lt;!ENTITY % content.sb
          ''&gt;. Allowing staffdef within content.sb would make it possible to record layout
          changes without requiring these changes to be made at section boundaries. However, it
          would also allow meter and key changes, which is probably undesirable. Used by:
          model.milestoneLike.music Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.sb"/>
                  <memberOf key="att.vis.sb"/>
                  <memberOf key="att.ges.sb"/>
                  <memberOf key="att.anl.sb"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="custos"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="score">
               <desc>Full score view of the mdiv. Since the measure element is optional, a score may
          consist entirely of pagebreaks, each of which points to a page image. Div elements are
          allowed preceding and following sections of music data in order to accommodate blocks of
          explanatory text. Used by: model.scoreLike Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.score"/>
                  <memberOf key="att.vis.score"/>
                  <memberOf key="att.ges.score"/>
                  <memberOf key="att.anl.score"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.scorePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="scoredef">
               <desc>Container for score meta-information. Score-level encoding strategies for: a)
          alternating meter sig, e.g. 2/4 3/4 in alternating measures (Read, p. 164-165) and
          combined meters (Read, p.166-168): explicitly encode meters, make them invisible, display
          both meter sigs at the start of the section b) compound meter sig, e.g. 2+3+2/4 (Read, p.
          168-170): set meter.count=2+3+2 c) polymeters, e.g. different simultaneous meters (Read,
          p. 170-173): 1. where barlines coincide, use beaming to elucidate the polymeter 2. where
          barlines sometimes coincide, break into measures according to a common unit of time, draw
          barlines where visually required 3. where barlines never coincide, encode as parts only d)
          mixed meter sig, e.g. 2/4 + 3/16 in the same measure (Read, p. 173-174): encode in common
          time base, e.g. 11/16, make meter invisible, display both meter sigs at the start of the
          measure e) fractional meter sig, e.g. 3.5/4 (Read, p. 175-177): set meter.count=3.5 The
          beat count may be displayed as a fraction or as its decimal equivalent. Used by:
          model.scoredefLike Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.scoredef"/>
                  <memberOf key="att.vis.scoredef"/>
                  <memberOf key="att.ges.scoredef"/>
                  <memberOf key="att.anl.scoredef"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.alignLike"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.chordtableLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.symboltableLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.keysigLike"/>
                  </rng:optional>
                  <rng:ref name="model.pgmetaLike.score"/>
                  <rng:choice>
                     <rng:optional>
                        <rng:ref name="model.staffgrpLike"/>
                     </rng:optional>
                     <rng:optional>
                        <rng:ref name="model.staffdefLike"/>
                     </rng:optional>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="section">
               <desc>The section element contains actual music data. The linking attributes are
          available here so that this element can point to external media objects or to related
          internal elements, such as annotations. Used by: model.rdgPart section Module:
          meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.log.section"/>
                  <memberOf key="att.vis.section"/>
                  <memberOf key="att.ges.section"/>
                  <memberOf key="att.anl.section"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.sectionPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staff">
               <desc>Staff. The n attribute is a connection back to the appropriate staffdef element. If
          the n attribute is omitted, encoding order is presumed to match the staff order. Of
          course, if data is supplied for only a subset of staves, the n attribute must be supplied.
          Used by: model.staffLike Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.staff"/>
                  <memberOf key="att.vis.staff"/>
                  <memberOf key="att.ges.staff"/>
                  <memberOf key="att.anl.staff"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.staffPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staffdef">
               <desc>Container for staff meta-information. Used by: model.rdgPart Module:
          meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.staffdef"/>
                  <memberOf key="att.vis.staffdef"/>
                  <memberOf key="att.ges.staffdef"/>
                  <memberOf key="att.anl.staffdef"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.keysigLike"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.instrdefLike"/>
                        <rng:ref name="model.layerdefLike"/>
                        <rng:ref name="model.staffdefPart.multiplyDefinable"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staffgrp">
               <desc>A group of staves. Bracketed staff groups may contain other bracketed or braced
          staff groups or single staves. See Read, p. 35-38, examples p. 434, 438. System is the
          more proper name for this concept (Read, p. 37-38). Split staffgrp into bracket and brace
          elements? Used by: staffgrpLike staffgrp Module: meiStructure</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.staffgrp"/>
                  <memberOf key="att.vis.staffgrp"/>
                  <memberOf key="att.ges.staffgrp"/>
                  <memberOf key="att.anl.staffgrp"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="grpsym"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.staffgrpLike"/>
                        <rng:ref name="model.staffdefLike"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="grpsym"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="syllable">
               <desc>The syllable element is used only for neume notation. Most neume notation can be
          thought of as "neumed text". Used by: model.eventLike.neume Module: meiNeumes</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.syllablePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ineume">
               <desc>The interrupted neume element is provided for the encoding of neume notation. Used
          by: model.eventLike.neume Module: meiNeumes</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.ineume"/>
                  <memberOf key="att.vis.ineume"/>
                  <memberOf key="att.ges.ineume"/>
                  <memberOf key="att.anl.ineume"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.neumeModifierLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="uneume">
               <desc>A single, uninterrupted neume sign. While ineume is allowed here as part of the
          model.events class, it is unlikely that an uninterrupted neume containing an interrupted
          neume is a meaningful construct. Used by: model.eventLike.neume Module:
          meiNeumes</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.uneume"/>
                  <memberOf key="att.vis.uneume"/>
                  <memberOf key="att.ges.uneume"/>
                  <memberOf key="att.anl.uneume"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.neumeModifierLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="nota">
               <desc>A single pitched event in the mensural repertoire. The nota element is allowed to
          contain other events for situations where a single written note may be representative of a
          group of performed notes. The accid and artic sub-elements may be used instead of the note
          element's attributes when accid and artic represent first-class objects, e.g. when they
          require attributes, such as x and y location attributes. Similarly, the syl sub-element
          may be used instead of the syl attribute. The verse sub-element may be used to group text
          syllables by verse. Used by: model.eventLike.mensural Module: meiMensural</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.nota"/>
                  <memberOf key="att.vis.nota"/>
                  <memberOf key="att.ges.nota"/>
                  <memberOf key="att.anl.nota"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sylLike"/>
                        <rng:ref name="model.verseLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pausa">
               <desc>A rest in the mensural repertoire. Used by: model.eventLike.mensural Module:
          meiMensural</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.pausa"/>
                  <memberOf key="att.vis.pausa"/>
                  <memberOf key="att.ges.pausa"/>
                  <memberOf key="att.anl.pausa"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="measure">
               <desc>Measure. "In Western notation a vertical line drawn through the staff to mark off
          metrical units. Hence also the metrical unit thus indicated, which in American usage is
          called 'measure'. English usage often relies on context alone to make the distinction
          clear (e.g. 'up to the double bar', 'the end of the bar'), but 'bar-line' is also common."
          (New Grove) In MEI, the measure element is also a linking element that uses attributes to
          connect the MEI document to an external electronic object or to another location within
          the MEI instance. Any number of alternative encodings for the measure (ossia) can be
          included. Used by: model.measureLike Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.log.measure"/>
                  <memberOf key="att.vis.measure"/>
                  <memberOf key="att.ges.measure"/>
                  <memberOf key="att.anl.measure"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.measurePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ossia">
               <desc>The term "ossia" indicates an alternative, usually simpler, version of a measure
          *present in the source being transcribed*. An ossia may be treated as a substitute for the
          measure, in which case it is rendered on the current staff, or it may be rendered in
          addition to the measure's contents, in which case it is rendered above the staff on a
          reduced-size staff. Used by: model.ossiaLike Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.ossia"/>
                  <memberOf key="att.vis.ossia"/>
                  <memberOf key="att.ges.ossia"/>
                  <memberOf key="att.anl.ossia"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.measurePart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="beam">
               <desc>Beam. A container for a series of explicitly beamed events (Read, p. 80-94) which
          begins and ends entirely within a measure. For beams which cross the barline, use the
          beamspan element. Beaming may be indicated for an entire score, part or section by using
          the beamgroup attribute on these elements. Secondary beams may be broken explicitly using
          the breaksec attribute. Stem direction determines whether beams are centered between notes
          with alternating stems (Read, p. 88-89). Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.beam"/>
                  <memberOf key="att.vis.beam"/>
                  <memberOf key="att.ges.beam"/>
                  <memberOf key="att.anl.beam"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike.common"/>
                        <rng:ref name="model.eventLike.cmn"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="beatrpt">
               <desc>A repeated single beat (Read, p. 223-224). Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.beatrpt"/>
                  <memberOf key="att.vis.beatrpt"/>
                  <memberOf key="att.ges.beatrpt"/>
                  <memberOf key="att.anl.beatrpt"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="bend">
               <desc>Bend (stretching a string to make it sound higher than normal). The bend element
          can also be used for scoop, plop, falloff, and doit performance effects. It should *not*
          be used for l.v. (laissez vibrer) indications. Precise performance data that differs from
          the logical events in a measure may be recorded within the bend element. Used by:
          model.eventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.bend"/>
                  <memberOf key="att.vis.bend"/>
                  <memberOf key="att.ges.bend"/>
                  <memberOf key="att.anl.bend"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="rest"/>
                        <rng:ref name="tuplet"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="btrem">
               <desc>Bowed tremolo (Read, p. 393-394) is a rapid alternation on a single pitch or chord.
          This element should also be used for wind double and triple tonguing and for flutter
          tonguing when these are expressed as tremolandi. Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.btrem"/>
                  <memberOf key="att.vis.btrem"/>
                  <memberOf key="att.ges.btrem"/>
                  <memberOf key="att.anl.btrem"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:ref name="chord"/>
                     <rng:ref name="note"/>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="chord">
               <desc>Chord, a simultaneous sounding of 2 or more notes in the same layer *with the same
          duration*. See Read, p. 69. Used by: model.eventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.chord"/>
                  <memberOf key="att.vis.chord"/>
                  <memberOf key="att.ges.chord"/>
                  <memberOf key="att.anl.chord"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="artic"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ftrem">
               <desc>Fingered tremolo (Read, p. 235-238) is a rapid alternation between a pair of notes
          (or chords or perhaps between a note and a chord) that are (usually) farther apart than a
          major second. For rapid alternation between notes on the same pitch (bowed tremolo, double
          &amp;amp; triple tonguing, and flutter tonguing) use the btrem element. Used by:
          model.eventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.ftrem"/>
                  <memberOf key="att.vis.ftrem"/>
                  <memberOf key="att.ges.ftrem"/>
                  <memberOf key="att.anl.ftrem"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:group>
                        <rng:ref name="chord"/>
                        <rng:choice>
                           <rng:ref name="chord"/>
                           <rng:ref name="note"/>
                        </rng:choice>
                     </rng:group>
                     <rng:group>
                        <rng:ref name="note"/>
                        <rng:choice>
                           <rng:ref name="chord"/>
                           <rng:ref name="note"/>
                        </rng:choice>
                     </rng:group>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="gliss">
               <desc>Glissando (Read, p. 243-245, 397-398). Sometimes called a 'slide'. More precise
          performance data may be recorded within the gliss element. Used by: model.eventLike.cmn
          Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.gliss"/>
                  <memberOf key="att.vis.gliss"/>
                  <memberOf key="att.ges.gliss"/>
                  <memberOf key="att.anl.gliss"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="rest"/>
                        <rng:ref name="tuplet"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="halfmrpt">
               <desc>A half-measure repeat in any meter. Used by: model.eventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.halfmrpt"/>
                  <memberOf key="att.vis.halfmrpt"/>
                  <memberOf key="att.ges.halfmrpt"/>
                  <memberOf key="att.anl.halfmrpt"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="note">
               <desc>Note (Read, p. 63), a single pitched event. The note element is allowed to contain
          other events for situations where a single written note may be representative of a group
          of performed notes. The accid and artic sub-elements may be used instead of the note
          element's attributes when accid and artic represent first-class objects, e.g. when they
          require attributes, such as x and y location attributes. Similarly, the syl sub-element
          may be used instead of the syl attribute. The verse sub- element may be used to group text
          syllables by verse. Used by: model.eventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.note"/>
                  <memberOf key="att.vis.note"/>
                  <memberOf key="att.ges.note"/>
                  <memberOf key="att.anl.note"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.verseLike"/>
                        <rng:ref name="model.sylLike"/>
                        <rng:ref name="model.apparatusLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rest">
               <desc>Rest (Read, p. 96-102), i.e., a non-sounding event, found in the source being
          transcribed. Do not confuse this element with the space element which is used as an aid
          for visual alignment. Used by: model.eventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.rest"/>
                  <memberOf key="att.vis.rest"/>
                  <memberOf key="att.ges.rest"/>
                  <memberOf key="att.anl.rest"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tuplet">
               <desc>Tuplet (Read, p. 187-215), bowed tremolo (Read, p. 394) and double, triple, or
          flutter tonguing (Read, p. 348-349). The beam sub- element is allowed so that custom
          beaming may be indicated, i.e., a septuplet may be divided into a group of 3 plus a group
          of 4 notes. Used by: model.eventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.tuplet"/>
                  <memberOf key="att.vis.tuplet"/>
                  <memberOf key="att.ges.tuplet"/>
                  <memberOf key="att.anl.tuplet"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike.common"/>
                        <rng:ref name="model.eventLike.cmn"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mrest">
               <desc>Complete measure rest in any meter (Read, p. 97-98). The numbering of consecutive
          measures of rest may be controlled via the multi.number attribute on the scoredef or
          staffdef elements. Used by: model.eventLike.cmn.measureFilling Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mrest"/>
                  <memberOf key="att.vis.mrest"/>
                  <memberOf key="att.ges.mrest"/>
                  <memberOf key="att.anl.mrest"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mrpt">
               <desc>A repeated measure (Read, p. 224-225). The numbering of consecutive measures of
          rest may be controlled via the multi.number attribute on the scoredef or staffdef
          elements. Used by: model.eventLike.cmn.measureFilling Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mrpt"/>
                  <memberOf key="att.vis.mrpt"/>
                  <memberOf key="att.ges.mrpt"/>
                  <memberOf key="att.anl.mrpt"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mrpt2">
               <desc>2-measure repeat sign. Used by: model.eventLike.cmn.measureFilling Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mrpt2"/>
                  <memberOf key="att.vis.mrpt2"/>
                  <memberOf key="att.ges.mrpt2"/>
                  <memberOf key="att.anl.mrpt2"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mspace">
               <desc>Complete measure of space in any meter. The numbering of consecutive measures of
          space may be controlled via the multi.number attribute on the scoredef or staffdef
          elements. Used by: model.eventLike.cmn.measureFilling Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mspace"/>
                  <memberOf key="att.vis.mspace"/>
                  <memberOf key="att.ges.mspace"/>
                  <memberOf key="att.anl.mspace"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="multirest">
               <desc>Multiple measures of rest. Used by: model.eventLike.cmn.measureFilling Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.multirest"/>
                  <memberOf key="att.vis.multirest"/>
                  <memberOf key="att.ges.multirest"/>
                  <memberOf key="att.anl.multirest"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="multirpt">
               <desc>Multiple repeated measures. Read (p. 225-226) says repeats of more than 2 measures
          should be written out using repeat signs. Used by: model.eventLike.cmn.measureFilling
          Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.multirpt"/>
                  <memberOf key="att.vis.multirpt"/>
                  <memberOf key="att.ges.multirpt"/>
                  <memberOf key="att.anl.multirpt"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="arpeg">
               <desc>Arpeggiation, roll (Read, p. 241-243). Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.arpeg"/>
                  <memberOf key="att.vis.arpeg"/>
                  <memberOf key="att.ges.arpeg"/>
                  <memberOf key="att.anl.arpeg"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="beamspan">
               <desc>Alternative element for encoding beams, especially useful for beams which extend
          across barlines. Used by: model.controleventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.beamspan"/>
                  <memberOf key="att.vis.beamspan"/>
                  <memberOf key="att.ges.beamspan"/>
                  <memberOf key="att.anl.beamspan"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="breath">
               <desc>The breathmark element is a specialized form of, i.e., syntactic sugar for,
          dir/@type="breathmark" with "," as its PCDATA content. Used by: model.controleventLike.cmn
          Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.breath"/>
                  <memberOf key="att.vis.breath"/>
                  <memberOf key="att.ges.breath"/>
                  <memberOf key="att.anl.breath"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="fermata">
               <desc>The fermata element is a specialized form of, i.e., syntactic sugar for,
          dir/@type="fermata" with &amp;amp;ferm; or &amp;amp;uferm; as its PCDATA content.
          Used by: model.controleventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.fermata"/>
                  <memberOf key="att.vis.fermata"/>
                  <memberOf key="att.ges.fermata"/>
                  <memberOf key="att.anl.fermata"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="hairpin">
               <desc>Hairpin. (Read, p. 250-255) Indicates continuous dynamics expressed on the score as
          graphics, e.g. &amp;lt; and &gt;. Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.hairpin"/>
                  <memberOf key="att.vis.hairpin"/>
                  <memberOf key="att.ges.hairpin"/>
                  <memberOf key="att.anl.hairpin"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="harppedal">
               <desc>Harp pedal diagram. (Read, p. 325) Used by: model.controleventLike.instruments
          Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.harppedal"/>
                  <memberOf key="att.vis.harppedal"/>
                  <memberOf key="att.ges.harppedal"/>
                  <memberOf key="att.anl.harppedal"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="octave">
               <desc>Octave displacement. (Read, p. 45) Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.octave"/>
                  <memberOf key="att.vis.octave"/>
                  <memberOf key="att.ges.octave"/>
                  <memberOf key="att.anl.octave"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="pedal">
               <desc>Piano pedal mark (Read, p. 317-318). Used by: model.controleventLike.instruments
          Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.pedal"/>
                  <memberOf key="att.vis.pedal"/>
                  <memberOf key="att.ges.pedal"/>
                  <memberOf key="att.anl.pedal"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="reh">
               <desc>Rehearsal mark (Read, p. 443). Reh uses a subset of %model.textphraseLike.limited.
          If the entire rehearsal mark is boxed or circled, the enclose attribute is preferred over
          a rend sub-element. Used by: model.controleventLike.common Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.reh"/>
                  <memberOf key="att.vis.reh"/>
                  <memberOf key="att.ges.reh"/>
                  <memberOf key="att.anl.reh"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="lb"/>
                        <rng:ref name="model.rendLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="slur">
               <desc>Slur, 2 notes performed legato (Read, p. 265-266). The slur element will use either
          tstamp, duration, and place attributes or start, end, and bulge attributes. It is a
          semantic error not to specify one of these groups of attributes. The slur and tie elements
          may be used instead of the slur.* and tie.* attributes provided on chord and note elements
          when 1) they are required by software, or 2) multiple, alternative slurs are needed.
          Normally, a slur has only 2 participating events - the starting and ending notes/chords.
          Used by: model.controleventLike.common Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.slur"/>
                  <memberOf key="att.vis.slur"/>
                  <memberOf key="att.ges.slur"/>
                  <memberOf key="att.anl.slur"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tie">
               <desc>Tie (Read, p. 110-111, 122). Used by: model.controleventLike.cmn Module:
          meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.tie"/>
                  <memberOf key="att.vis.tie"/>
                  <memberOf key="att.ges.tie"/>
                  <memberOf key="att.anl.tie"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="tupletspan">
               <desc>Alternative element for encoding tuplets, especially useful for those which extend
          across barlines. Used by: model.controleventLike.cmn Module: meiCMN</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.tupletspan"/>
                  <memberOf key="att.vis.tupletspan"/>
                  <memberOf key="att.ges.tupletspan"/>
                  <memberOf key="att.anl.tupletspan"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="lyrics">
               <desc>Lyrics. The staff attribute gives the staff to which the lyrics are attached. The
          rhythm of the lyrics will be taken from the notes of that staff. If there is more than 1
          layer on that staff, the layer attribute may be used to indicate the layer from which the
          rhythm should be taken. Used by: model.controleventLike.cmn Module: meiLyrics</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.lyrics"/>
                  <memberOf key="att.vis.lyrics"/>
                  <memberOf key="att.ges.lyrics"/>
                  <memberOf key="att.anl.lyrics"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="verse"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="verse">
               <desc>Lyric verse. The lb element is allowed here in order to facilitate karaoke
          applications. The func attribute on lb may be used to distinguish true line ends from line
          group ends for these applications. Used by: model.noteModifierLike model.notaModifierLike
          model.neumeModifierLike Module: meiLyrics</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.verse"/>
                  <memberOf key="att.vis.verse"/>
                  <memberOf key="att.ges.verse"/>
                  <memberOf key="att.anl.verse"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="dir"/>
                        <rng:ref name="dynam"/>
                        <rng:ref name="tempo"/>
                        <rng:ref name="space"/>
                     </rng:choice>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:ref name="syl"/>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="lb"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="syl">
               <desc>Individual lyric syllable. Used by: model.noteModifierLike model.notaModifierLike
          model.rdgPart Module: meiLyrics</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.syl"/>
                  <memberOf key="att.vis.syl"/>
                  <memberOf key="att.ges.syl"/>
                  <memberOf key="att.anl.syl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mordent">
               <desc>Mordent (Read, p. 245-246). Events may be contained within mordent in order to
          record precise performance data. Used by: model.ornamentLike.cmn Module:
          meiCMNOrnaments</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mordent"/>
                  <memberOf key="att.vis.mordent"/>
                  <memberOf key="att.ges.mordent"/>
                  <memberOf key="att.anl.mordent"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="trill">
               <desc>Trill (Read, p. 232-235). Events may be contained within trill in order to record
          precise performance data. Used by: model.ornamentLike.cmn Module:
          meiCMNOrnaments</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.trill"/>
                  <memberOf key="att.vis.trill"/>
                  <memberOf key="att.ges.trill"/>
                  <memberOf key="att.anl.trill"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="turn">
               <desc>Turn (Read, p. 246-247). Events may be contained within turn in order to record
          precise performance data. Whether the turn is accented or unaccented may be inferred from
          the timestamp - accented turns occur directly on the affected beat, unaccented ones do
          not. Used by: model.ornamentLike.cmn Module: meiCMNOrnaments</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.turn"/>
                  <memberOf key="att.vis.turn"/>
                  <memberOf key="att.ges.turn"/>
                  <memberOf key="att.anl.turn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="barre">
               <desc>An indication of fingering in a chord tablature grid. The from and to attributes
          should contain the id of a chordmember element. Used by: chorddef Module:
          meiHarmony</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="fret">req<valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                     </valList>
                  </attDef>
                  <attDef ident="from">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chorddef">
               <desc>Chord/tablature definition. An individual chord in the chord table. An id isn't
          required here but harm elements can only reference a particular chorddef via an id.
          Therefore, if a chorddef will ever be referenced, an id is necessary. The pos (position)
          attribute is provided in order to create displayable chord tablature grids. (Read, p.
          409-410) Used by: chordtable Module: meiHarmony</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="pos" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="chordmember"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="barre"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="chordmember">
               <desc>Chord member. An individual pitch in a chord. The fing and fret attributes are
          provided in order to create displayable chord tablature grids. The inth (harmonic
          interval) attribute may be used to facilitate automated performance of a chord. It gives
          the number of 1/2 steps above the bass. Of course, for the bass note itself, inth should
          be set to '0'. Used by: chordmember Module: meiHarmony</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fing" usage="opt">
                     <valList type="closed">
                        <valItem ident="x"/>
                        <valItem ident="o"/>
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                     </valList>
                  </attDef>
                  <attDef ident="fret" usage="opt">
                     <valList type="closed">
                        <valItem ident="1"/>
                        <valItem ident="2"/>
                        <valItem ident="3"/>
                        <valItem ident="4"/>
                        <valItem ident="5"/>
                     </valList>
                  </attDef>
                  <attDef ident="inth" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname">req<datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chordtable">
               <desc>Chord/tablature look-up table. A table may be shared between mei instances through
          the use of an external parsed entity containing the look-up table to be shared. Used by:
          model.chordtableLike Module: meiHarmony</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="chorddef"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="harm">
               <desc>Indication of harmony, e.g. chord names, tablature grids, harmonic analysis,
          figured bass. Read, p. 411. The %model.textphraseLike.limited entity is employed here
          instead of %model.textphrase in order to disallow the use of the pb sub-element. Used by:
          model.controleventLike.cmn Module: meiHarmony</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.harm"/>
                  <memberOf key="att.vis.harm"/>
                  <memberOf key="att.ges.harm"/>
                  <memberOf key="att.anl.harm"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.graphicprimitiveLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="curve">
               <desc>Curve. The x1,y1 and x2,y2 attributes identify the two terminal points of the
          curve. If the startid or endid attributes are present, then the x,y and x2,y2 coordinates
          are relative to the xy coordinates of the referenced element(s). Otherwise, they are
          assumed to be absolute page coordinate references. The bulge or, alternatively, the bezier
          attribute, describe the shape of the curve. The bulge attribute describes the curve as a
          set of distance values above or below an imaginary line connecting the endpoints of the
          curve while the bezier attribute records the placement of Bezier control points as a
          series of space-separated xy coordinate pairs, eg. 19 45 -32 118. The bulge attribute must
          contain one or more values of the %NUMBER type. Either the bezier attribute or the bulge
          and xy coordinates are required. The rend attribute captures the appearance of the curve.
          Used by: model.graphicprimitiveLike Module: meiUserSymbols</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.startendid"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
                  <memberOf key="att.xy2.required"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="line">
               <desc>Line. The x,y and x2,y2 attributes identify the two terminal points of the line.
          Text content of the line element, e.g. 'gliss.', may be rendered with the line. If the
          startid or endid attributes are present, then the x,y and x2,y2 coordinates are relative
          to the xy coordinates of the referenced element(s). Otherwise, they are assumed to be
          absolute page coordinate references. The appearance of the line is captured in the rend
          attribute. Used by: model.graphicprimitiveLike Module: meiUserSymbols</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.startendid"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
                  <memberOf key="att.xy2.required"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="symbol">
               <desc>A reference to a previously defined symbol. The x and y attributes identify the
          starting point, e.g. "hotspot" of the symbol. If the startid attribute is present, then
          the xy coordinates are relative to the xy coordinates of the referenced element.
          Otherwise, they are assumed to be absolute page coordinate references. The ref attribute
          must contain the id of a symboldef element. The scale attribute indicates that the printed
          output must be scaled by the specified percentage. Used by: model.graphicprimitiveLike
          Module: meiUserSymbols</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
               </classes>
               <attList>
                  <attDef ident="ref">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="symboldef">
               <desc>Declaration of an individual symbol in a symboltable. Used by: symboltable Module:
          meiUserSymbols</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.graphicprimitiveLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="symboltable">
               <desc>Symboltable contains individual, user-defined symbols. Like a chord table, a
          symboltable may be shared between mei instances through the use of an external parsed
          entity containing the symboltable to be shared. Used by: model.symboltableLike Module:
          meiUserSymbols</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="symboldef"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="app">
               <desc>An app (apparatus) element contains one or more alternative encodings. The
          alternatives may be thought of as exclusive or as parallel. The type attribute may contain
          any convenient descriptive word, describing the extent of the variation (e.g. note,
          phrase, measure, etc.), its text-critical significance (e.g. significant, accidental,
          unclear), or the nature of the variation or the principles required to understand it (e.g.
          lectio difficilior, usus auctoris, etc.) Used by: model.apparatusLike Module:
          meiCritApp</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:ref name="rdg"/>
                  <rng:zeroOrMore>
                     <rng:ref name="rdg"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rdg">
               <desc>Reading. Since a reading can be a multi-measure section, the scoredef element is
          allowed so that a reading may have its own meta-data without the overhead of child
          sections. The measure sub-element is declared in the meiBase DTD and the pb sub-element is
          declared in the meiShared DTD. The app sub-element is permitted in order to allow nested
          sub-variants. Used by: app Module: meiCritApp</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.crit"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.anl.rdg"/>
                  <memberOf key="att.ges.rdg"/>
                  <memberOf key="att.log.rdg"/>
                  <memberOf key="att.vis.rdg"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.Incl"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.rdgPart"/>
                     <rng:zeroOrMore>
                        <rng:ref name="model.Incl"/>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="accessdesc">
               <desc>Description of the access that may be obtained. The %model.textphraseLike.limited
          entity is used here in order to disallow the pb element. Used by: model.availabilityPart
          Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="acqsource">
               <desc>Source from which access to this item may be obtained, e.g. vendor, distributor,
          etc. The %model.textphraseLike.limited entity is used here in order to disallow the pb
          element. Used by: model.availabilityPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="altmeiid">
               <desc>The altmeiid element may contain a bibliographic identifier that does not fit
          within the meihead id attribute, for example because the id does not fit the definition of
          an XML id or because multiple identifiers are needed. Used by: meihead Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="appinfo">
               <desc>Appinfo (application information) groups information about applications which have
          acted upon the MEI file. This is not to be confused with applications which were used to
          create the MEI file. These are recorded in the projectdesc element. Used by:
          model.encodingPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="application"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="application">
               <desc>Application provides information about an application which has acted upon the
          document. Used by: appinfo Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.date"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="version" usage="opt"/>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="name"/>
                  </rng:oneOrMore>
                  <rng:choice>
                     <rng:zeroOrMore>
                        <rng:ref name="model.ptrLike"/>
                     </rng:zeroOrMore>
                     <rng:zeroOrMore>
                        <rng:ref name="model.pLike"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="availability">
               <desc>Availability information/qualifications. Used by: model.pubstmtPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:ref name="model.availabilityPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="change">
               <desc>Individual change within the revision description. The resp attribute contains a
          pointer to an element containing info about the person/entity responsible for change. The
          date element is declared in the meiShared DTD. Used by: revisiondesc Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:ref name="respstmt"/>
                  <rng:ref name="changedesc"/>
                  <rng:ref name="model.dateLike"/>
               </content>
            </elementSpec>
            <elementSpec ident="changedesc">
               <desc>Description of a revision of the MEI file. Used by: change Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="classcode">
               <desc>A classification code, i.e., LC subject or call number, or a thesaurus or ontology
          citation. The source of controlled-vocabulary terms used in the keywords element. Used by:
          classification Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="classification">
               <desc>The classification element groups information which describes the nature or topic
          of a musical work in terms of a standard classification scheme, thesaurus, etc. Used by:
          model.profiledescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="classcode"/>
                        <rng:ref name="keywords"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="condition">
               <desc>The physical condition of an item, particularly any variances between the physical
          makeup of the item and that of other copies of the same item (e.g., missing pages, plates,
          etc.). Condition may reflect other aspects of the physical condition of the item as well
          (e.g., brittleness, faded images, etc.). The %model.textphraseLike.limited entity is used
          here in order to disallow the pb element. Used by: model.physdescPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="correction">
               <desc>States how and under what circumstances corrections have been made in the
          music/text. Used by: model.editorialdeclPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="method" usage="opt">
                     <valList type="closed">
                        <valItem ident="silent"/>
                        <valItem ident="tags"/>
                     </valList>
                  </attDef>
                  <attDef ident="status" usage="opt">
                     <valList type="closed">
                        <valItem ident="high"/>
                        <valItem ident="medium"/>
                        <valItem ident="low"/>
                        <valItem ident="unknown"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="creation">
               <desc>Non-bibliographic creation details for the work being encoded, in narrative form.
          The model.textcomponent class elements are declared in the meiShared DTD. Used by:
          model.profiledescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.textcomponentLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="dimensions">
               <desc>Physical dimensions of a bibliographic source. The %model.textphraseLike.limited
          entity is used here in order to disallow the pb element. There are no height and width
          sub-elements; however, the num element may be used. Used by: model.physdescPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="editionstmt">
               <desc>Container for meta-data pertaining to the edition. Used by: filedesc source Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="edition"/>
                     <rng:zeroOrMore>
                        <rng:ref name="respstmt"/>
                     </rng:zeroOrMore>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="editorialdecl">
               <desc>Editorialdecl should be used to provide details of editorial principles and
          practices applied during the encoding of musical text. Used by: model.encodingPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:oneOrMore>
                        <rng:ref name="model.pLike"/>
                     </rng:oneOrMore>
                     <rng:group>
                        <rng:oneOrMore>
                           <rng:ref name="model.editorialdeclPart"/>
                        </rng:oneOrMore>
                        <rng:zeroOrMore>
                           <rng:ref name="model.pLike"/>
                        </rng:zeroOrMore>
                     </rng:group>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="encodingdesc">
               <desc>Documents the relationship between an electronic file and the source or sources
          from which it was derived as well as applications used in the encoding/editing process.
          Used by: meihead Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:ref name="model.encodingPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="exhibithist">
               <desc>Exhibition history is a record of public exhibitions, including dates, venues, etc.
          The %model.textphraseLike.limited entity is used here in order to disallow the pb element.
          Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="extent">
               <desc>The extent element is used to express size in terms other than physical dimensions,
          such as number of pages, number of records in file, number of bytes, performance duration
          for music, audio recordings and visual projections, etc. For physical dimensions use the
          dimensions element. The %model.textphraseLike.limited entity is used here in order to
          disallow the pb element. Used by: model.physdescPart filedesc Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="filedesc">
               <desc>Filedesc contains a full bibliographic description of the MEI file. Extent in this
          context is file size. Used by: meihead Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:ref name="titlestmt"/>
                  <rng:optional>
                     <rng:ref name="editionstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="extent"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="fingerprint"/>
                  </rng:optional>
                  <rng:ref name="pubstmt"/>
                  <rng:optional>
                     <rng:ref name="seriesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="notesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="sourcedesc"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="fingerprint">
               <desc>Traditionally, an identifier constructed by combining groups of characters
          transcribed from specified pages of a printed item. For an electronic item, however, the
          fingerprint should be a checksum. The checksum makes it possible to signal differences
          between copies of the item. Used by: filedesc Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="hand">
               <desc>The hand element is used to define each distinct scribe or handwriting style. The
          initial attribute indicates whether this is the first or main scribe of the document. The
          medium attribute describes the writing medium, e.g., 'pencil', or the tint or type of ink,
          e.g. 'brown'. The resp attribute contains an ID reference to an element containing the
          name of the editor or transcriber responsible for identifying the hand. The
          characteristics of the hand, particularly those related to the quality of the writing,
          such as 'shaky', 'thick', etc. may be described within the content of the hand element.
          Used by: handlist Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="initial" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="medium" usage="opt"/>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="handlist">
               <desc>The handlist element contains a series of &lt;hand&gt; elements listing the
          different hands of the source. Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="hand"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="inscription">
               <desc>An inscription added to an item, such as a bookplate, a note designating the item
          as a gift, and/or the author's signature. The %model.textphraseLike.limited entity is used
          here in order to disallow the pb element. Used by: model.physdescPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="interpretation">
               <desc>Describes the scope of any analytic or interpretive information added to the
          musical text in addition to the transcription. Used by: model.editorialdeclPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="keywords">
               <desc>Collection of keywords or text phrases which describe the work. Used by:
          classification Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="term"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="language">
               <desc>The name of a language. The language of text elements may be related to this
          element via its id, which may take the form of a code, drawn from a coded list, such as
          RFC 3066 or iso639-2b. The authority attribute should contain the name of the list from
          which a controlled value is taken. The %model.textphraseLike.limited entity is used here
          in order to disallow the pb element. Used by: langusage Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="langusage">
               <desc>Langusage describes the languages, sublanguages, dialects, etc., represented within
          the encoded work. Used by: model.profiledescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="language"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="normalization">
               <desc>Indicates the extent of normalization or regularization of the original source
          carried out in converting it to electronic form. Used by: model.editorialdeclPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="method" usage="opt">
                     <valList type="closed">
                        <valItem ident="silent"/>
                        <valItem ident="tags"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="notesstmt">
               <desc>Collects together any bibliographic notes providing information additional to that
          recorded in other parts of the bibliographic description. Used by: filedesc Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.annotLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physdesc">
               <desc>Physical description of a source for the electronic edition. Dedicatory text and
          title page features may be encoded here when they are not transcribed as part of the front
          or back matter; i.e., when they are considered to be meta-data. Used by: source Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.physdescPart"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physloc">
               <desc>Location of the source within a repository, e.g., shelf mark or other locational
          information. Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physmedium">
               <desc>Physmedium is used to record the physical materials used in the source, such as ink
          and paper. The authority attribute should contain the name of the list from which a
          controlled value is taken. The %model.textphraseLike.limited entity is used here in order
          to disallow the pb element. Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="price">
               <desc>The cost of access. The %model.textphraseLike.limited entity is used here in order
          to disallow the pb element. Used by: model.availabilityPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="units" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="profiledesc">
               <desc>Profiledesc provides a detailed description of the non- bibliographic aspects of
          the creation of a work, specifically the languages and sublanguages used, the situation in
          which it was produced, e.g. the participants, setting, reception history, etc. Used by:
          meihead Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:ref name="model.profiledescPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="projectdesc">
               <desc>Project-level meta-data describing the aim or purpose for which the electronic file
          was encoded, funding agencies, etc. together with any other relevant information
          concerning the process by which it was assembled or collected. Used by: model.encodingPart
          Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="provenance">
               <desc>The record of ownership or custodianship of an item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb element.
          Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.listLike"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pubstmt">
               <desc>Publication meta-data. Used by: filedesc source Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:optional>
                        <rng:ref name="unpub"/>
                     </rng:optional>
                     <rng:zeroOrMore>
                        <rng:ref name="model.pubstmtPart"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="resp">
               <desc>Contains a phrase describing the nature of a person's intellectual responsibility.
          The authority attribute should contain the name of the list from which a controlled value
          is taken. Used by: respStmt Module: meiHeader</desc>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="respstmt">
               <desc>A statement of responsibility names one or more individuals, groups, or in rare
          cases, mechanical processes, responsible for creation or realization of the intellectual
          or artistic content. Used by: model.pubstmtPart model.respLike titlestmt editionstmt
          seriesstmt Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="resp"/>
                        <rng:ref name="model.nameLike"/>
                        <rng:ref name="model.nameLike.agent"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="revisiondesc">
               <desc>The revision history for an MEI file. Used by: meihead Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="change"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="samplingdecl">
               <desc>Contains a prose description of the rationale and methods used in sampling texts in
          the creation of a corpus or collection. Used by: model.encodingPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="segmentation">
               <desc>Describes the principles according to which the musical text has been segmented,
          for example into movements, sections, etc. Used by: model.editorialdeclPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="seriesstmt">
               <desc>Groups information about the series, if any, to which a publication belongs. In
          this context, the title element records the series title, the respStmt element records the
          person or group responsible for the series, and the identifier element contains a series
          identifier. The list element should be used when it is necessary to enumerate the contents
          of the series. The seriesstmt is provided within seriesstmt for the description of a
          sub-series. Used by: filedesc source seriesstmt Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="title"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="respstmt"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:ref name="identifier"/>
                  </rng:zeroOrMore>
                  <rng:choice>
                     <rng:ref name="model.listLike"/>
                     <rng:zeroOrMore>
                        <rng:ref name="seriesstmt"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="source">
               <desc>Source contains a bibliographic description of a source for the electronic file.
          When there are multiple sources, the data attribute may be used to link the description to
          a particular data element, i.e., mdiv, part, section, ending, reading, measure, staff or
          layer. Within source, the extent element may be used when only a portion of the source,
          pages 1-3 for example, are encoded. If extent is absent, then the entire source is
          presumed to have been encoded. Multiple physdesc sub-elements may be used to describe the
          physically separate parts of a single source. Used by: sourcedesc Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="data" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="identifier"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="titlestmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="editionstmt"/>
                  </rng:optional>
                  <rng:ref name="pubstmt"/>
                  <rng:optional>
                     <rng:ref name="physdesc"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="seriesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="notesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="langusage"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="classification"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="sourcedesc">
               <desc>Sourcedesc is a container for the descriptions of the source(s) used in the
          creation of the electronic file. The sourcedesc element is required where the MEI file is
          a transcription of existing music. In the case where the data is originally created in MEI
          form, the sourcedesc element is not required. Used by: meihead Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="source"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stdvals">
               <desc>Specifies the format used when standardized date or number values are supplied.
          Used by: model.editorialdeclPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sysreq">
               <desc>System requirements for using the electronic item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb element.
          Used by: model.availabilityPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="term">
               <desc>Individual keywords or phrases which describe the work. The classcode attribute may
          be used to link the term to a terminological source given in a classcode element. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb element. The
          term element may include other term elements in order to allow the creation of coordinated
          terms; i.e., terms created from a combination of other, independent terms. Used by:
          keywords Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <attList>
                  <attDef ident="classcode" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="term"/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="titlestmt">
               <desc>Container for title and responsibility meta-data. Used by: filedesc source Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="title"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="respstmt"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="treatmenthist">
               <desc>A record of the treatment the item has undergone (e.g., deacidification,
          restoration, etc.) Treatment history may also comprise details of the treatment process
          (e.g., chemical solutions used, techniques applied, etc.), the date the treatment was
          applied, etc. The %model.textphraseLike.limited entity is used here in order to disallow
          the pb element. Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="treatmentsched">
               <desc>Scheduled treatment, e.g. deacidification, restoration, etc., for an item. The
          %model.textphraseLike.limited entity is used here in order to disallow the pb element.
          Used by: model.physdescPart Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="unpub">
               <desc>The unpub element should be used to explicitly indicate that a bibliographic source
          is unpublished. Used by: pubstmt Module: meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="userestrict">
               <desc>Usage restrictions, e.g., copyright statement in the filedesc, or (re-)publication
          rights in the source element. The %model.textphraseLike.limited entity is used here in
          order to disallow the pb element. Used by: model.availabilityPart Module:
          meiHeader</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="cc">
               <desc>Parameter/control change. The num attribute specifies parameter number, while val
          contains the parameter value. Each must fall in the range 0-127. A sampling of controllers
          and their numbers: 0 Bank Select MSB 1 Modulation 2 Breath Control 5 Portamento Time 7
          Main Volume 10 Pan 11 Expression 32 Bank Select LSB 64 Sustain Pedal (0=up, 127=down) 65
          Portamento Pedal (0=off, 127=on) 91 Reverb 93 Chorus Depth 120 All Sounds Off (0) 121
          Reset All Controllers (0) 123 All Notes Off (0) Used by: model.midieventLike Module:
          meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="val">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chan">
               <desc>Channel assignment. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="chanpr">
               <desc>Channel pressure/after touch. The value of the num attribute must be in the range
          0-127. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="cue">
               <desc>Cue point. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="hex">
               <desc>Arbitrary MIDI data in hex. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="marker">
               <desc>Marker meta event. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="metatext">
               <desc>Text meta event. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="midi">
               <desc>Container for a collection of elements which contain information useful when
          generating MIDI output. The n attribute can be used to differentiate between multiple MIDI
          data streams, e.g. quantized/unquantized, straight/swing, ornamented/as notated, etc. Used
          by: model.midiLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.midi"/>
                  <memberOf key="att.vis.midi"/>
                  <memberOf key="att.ges.midi"/>
                  <memberOf key="att.anl.midi"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="cc"/>
                        <rng:ref name="chan"/>
                        <rng:ref name="chanpr"/>
                        <rng:ref name="cue"/>
                        <rng:ref name="hex"/>
                        <rng:ref name="marker"/>
                        <rng:ref name="metatext"/>
                        <rng:ref name="noteoff"/>
                        <rng:ref name="noteon"/>
                        <rng:ref name="port"/>
                        <rng:ref name="prog"/>
                        <rng:ref name="seqnum"/>
                        <rng:ref name="trkname"/>
                        <rng:ref name="vel"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="noteoff">
               <desc>Note-off. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="noteon">
               <desc>Note-on. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="port">
               <desc>MIDI port. The num attribute must be in the range 0-127. Used by:
          model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="prog">
               <desc>Program change/new instrument. The num attribute must be in the range 0-127. Used
          by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="seqnum">
               <desc>Sequence number. The num attribute must be in the range 0- 65535. Used by:
          model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="num">req<datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="trkname">
               <desc>Track/sequence name. Used by: model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="vel">
               <desc>Note-on/off velocity. The num attribute must be in the range 1-127. Used by:
          model.midieventLike Module: meiMIDI</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <attList>
                  <attDef ident="form">req<valList type="closed">
                        <valItem ident="on"/>
                        <valItem ident="off"/>
                     </valList>
                  </attDef>
                  <attDef ident="num">req</attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="add">
               <desc>Marks an addition to the musical text. The add element contains material inserted
          by an author, scribe, annotator, or corrector. The resp attribute contains a ID reference
          to an element containing the editor or transcriber responsible for identifying the hand of
          the addition. The cert attribute signifies the degree of certainty ascribed to the
          identification of the hand of the addition. The hand attribute signifies the hand of the
          agent which made the addition. Used by: model.transcriptionLike Module:
          meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.trans"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="choice">
               <desc>Choice groups a number of alternative encodings for the same point in a text.
          Because the children of a choice element all represent alternative ways of encoding the
          same sequence, it is natural to think of them as mutually exclusive. However, there may be
          cases where a full representation of a text requires the alternative encodings to be
          considered as parallel. Note also that choice elements may be recursively nested. Used by:
          model.editLike Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="choice"/>
                        <rng:ref name="model.choicePart"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="corr">
               <desc>Correction contains the correct form of an apparent erroneous passage. The resp
          attribute contains an ID reference to an element containing the name of the editor or
          transcriber responsible for suggesting the correction held as the content of the
          &lt;corr&gt; element. If the correction was made in the source, resp should be
          used to identify the hand of the corrector. Used by: model.transcriptionLike
          model.choicePart Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.trans"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="damage">
               <desc>Contains an area of damage to the carrier. In the case of damage resulting from an
          identifiable cause, the agent attribute signifies the causative agent. The degree
          attribute signifies the degree of damage according to a convenient scale. A
          &lt;damage&gt; tag with this attribute should only be used where the text may be
          read with some confidence; data supplied from other sources should be tagged as
          &lt;supplied&gt;. The extent attribute indicates approximately how much text is in
          the damaged area, in notes, measures, inches, or any appropriate unit, where this cannot
          be deduced from the contents of the tag. For example, the damage may span structural
          divisions in the text so that the tag must then be empty of content. In the case of damage
          (deliberate defacement, etc.) assignable to an identifiable hand, the hand attribute
          signifies the hand responsible for the damage. Used by: model.transcriptionLike Module:
          meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="degree" usage="opt"/>
                  <attDef ident="extent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="del">
               <desc>Del contains information deleted, marked as deleted, or otherwise indicated as
          superfluous or spurious in the copy text by an author, scribe, annotator, or corrector.
          The resp attribute contains an ID reference to an element containing the name of the
          editor or transcriber responsible for identifying the hand of the deletion. The cert
          attribute signifies the degree of certainty ascribed to the identification of the hand of
          the deletion. The hand of the agent which made the deletion should be pointed to using the
          hand attribute. The rend attribute may be used to record the method used to make the
          deletion (overstrike, strike[through], etc.) or how the deleted matter should be
          displayed. Used by: model.transcriptionLike Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.trans"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="gap">
               <desc>Indicates a point where material has been omitted in a transcription, whether as
          part of sampling practice or for editorial reasons described in the MEI header. When
          material is omitted because it is illegible or inaudible, &lt;unclear&gt; should
          be used instead. Similarly, use &lt;damage&gt; if the omission is due to damage
          and &lt;del&gt; if the omission is because the material is marked as deleted, or
          otherwise indicated as superfluous or spurious in the copy text by an author, scribe,
          annotator, or corrector. An indication of how much material has been omitted from the
          transcription may be recorded in the extent attribute. The unit attribute names the unit
          used for describing the extent of the gap. The reason attribute gives the reason for
          omission. Sample values include 'sampling', 'irrelevant', 'cancelled'. The resp attribute
          contains an ID reference to an element containing the name of the editor, transcriber or
          encoder responsible for the decision not to provide any transcription of the material and
          hence the application of the &lt;gap&gt; tag. Used by: model.editLike Module:
          meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
               </classes>
               <attList>
                  <attDef ident="extent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reason" usage="opt"/>
                  <attDef ident="unit" usage="opt"/>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="handshift">
               <desc>Marks the beginning of a passage written in a new hand, or of a change in the
          scribe, writing style, ink or character of the document hand. The character attribute
          describes characteristics of the hand, particularly those related to the quality of the
          writing, e.g., 'shaky', 'thick', regular'. A description of the tint or type of ink, e.g.
          'brown' or the writing medium, e.g. 'pencil', may be placed in the medium attribute. The
          new hand may be identified using the new attribute, while the previous hand may be
          recorded in the old attribute. The resp attribute contains an ID reference to an element
          containing the name of the editor or transcriber responsible for identifying the change of
          hand. Used by: model.editLike Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <attList>
                  <attDef ident="character" usage="opt"/>
                  <attDef ident="medium" usage="opt"/>
                  <attDef ident="new" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="old" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="orig">
               <desc/>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="reg">
               <desc/>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="restore">
               <desc>Restore indicates restoration of musical material to an earlier state by
          cancellation of an editorial or authorial marking or instruction. The desc (description)
          attribute gives a prose description of the means of restoration, 'stet' or 'strike-down',
          for example. The cert attribute signifies the degree of certainty ascribed to the
          identification of the hand of the restoration. The type attribute may be used to indicate
          the action cancelled by the restoration. The resp attribute contains an ID reference to an
          element containing the name of the editor or transcriber responsible for identifying the
          hand of the restoration. The hand attribute signifies the hand of the agent which made the
          restoration. Used by: model.transcriptionLike Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="att.typed"/>
               </classes>
               <attList>
                  <attDef ident="desc" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sic">
               <desc>Contains apparently incorrect or inaccurate musical material. A correction for the
          apparent error may be given in an accompanying child or sibling corr element. Used by:
          model.transcriptionLike model.choicePart Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="subst">
               <desc>Substitution groups transcriptional elements when the combination is to be regarded
          as a single intervention in the text. Used by: model.editLike Module:
          meiEditTrans</desc>
               <attList>
                  <attDef ident="meiform" usage="opt">
                     <defaultVal>subst</defaultVal>
                     <valList type="closed">
                        <valItem ident="subst"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="model.transcriptionLike"/>
                  <rng:oneOrMore>
                     <rng:ref name="model.transcriptionLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="supplied">
               <desc>Supplied contains musical material supplied by the transcriber or editor in place
          of text which cannot be read, either because of physical damage or loss in the original or
          because it is illegible for any reason. When the presumed loss of text arises from an
          identifiable cause, agent signifies the causative agent. When the presumed loss of text
          arises from action (partial deletion, etc.) assignable to an identifiable hand, the hand
          attribute signifies the hand responsible for the action. The reason attribute indicates
          why the text has to be supplied, e.g. 'overbinding', 'faded ink', 'lost folio', 'omitted
          in original', etc. The source attribute contains the source of the supplied text. Used by:
          model.transcriptionLike Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <attList>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="reason" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="titlepage">
               <desc>The titlepage element contains a transcription of the title page of a text. It may
          be used within the physdesc element when no other transcription is provided. Used by:
          model.frontPart model.physdescPart Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.textcomponentLike"/>
                        <rng:ref name="model.milestoneLike.text"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="unclear">
               <desc>Unclear contains musical material which cannot be transcribed with certainty
          because it is illegible or inaudible in the source. Where the difficulty in transcription
          arises from an identifiable cause, the agent attribute signifies the causative agent. The
          cert attribute signifies the degree of certainty ascribed to the transcription of the text
          contained within the &lt;unclear&gt; element. Where the difficulty in
          transcription arises from action (partial deletion, etc.) assignable to an identifiable
          hand, the hand attribute signifies the hand responsible for the action. The reason
          attribute indicates why the material is difficult to transcribe. The resp attribute
          indicates the individual responsible for the transcription of the word, phrase, or passage
          contained with the &lt;unclear&gt; element. Used by: model.transcriptionLike
          model.choicePart Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <attList>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reason" usage="opt"/>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike"/>
                        <rng:ref name="model.eventLike"/>
                        <rng:ref name="model.controleventLike"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike"/>
                        <rng:ref name="model.transcriptionLike"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling"/>
                        <rng:ref name="model.noteModifierLike"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="facsimile">
               <desc>Facsimile contains a representation of some written source in the form of a set of
          images rather than as transcribed or encoded text. The source attribute may be used to
          link the collection of images with a particular source. Used by: model.facsimileLike
          Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.graphicLike"/>
                        <rng:ref name="surface"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="surface">
               <desc>The surface element defines a written surface in terms of a rectangular coordinate
          space, optionally grouping one or more graphic representations of that space, and
          rectangular zones of interest within it. Used by: zone Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.coordinated"/>
               </classes>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="figdesc"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="zone"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="zone">
               <desc>The zone element defines a rectangular area contained within a surface element.
          Used by: surface Module: meiEditTrans</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.coordinated"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="figdesc"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="timeline">
               <desc>Timeline provides a set of ordered points in time to which musical elements can be
          linked in order to create a temporal alignment of those elements. The origin attribute
          designates the origin of the timeline, i.e., the time at which it begins. It must point to
          one of the when elements in its content. Units specifies the unit of time corresponding to
          the value of the interval attribute of the timeline or of its constituent points in time.
          The mediacontent attribute is provided in order to link the timeline to a particular
          external media file, such as an audio file. The medialength attribute specifies the length
          of the external media file in terms of the units attribute. Used by: model.alignLike
          Module: meiLinkAlign</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="mediacontent" usage="opt">
                     <datatype>
                        <rng:ref name="data.URI"/>
                     </datatype>
                  </attDef>
                  <attDef ident="medialength" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="origin">req<datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="units" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="when"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="when">
               <desc>The when element indicates a point in time either absolutely (using the absolute
          attribute), or relative to other elements in the same timeline element (using the interval
          and since attributes). The absolute attribute provides an absolute value for the time
          associated with this point. It is required for the element designated as the origin by the
          parent timeline. Unit specifies the unit of time in which the @interval value is
          expressed, if this is not inherited from the parent timeline. Interval specifies a
          positive numeric time interval. The since attribute identifies the reference point for
          determining the time of the current when element, which is obtained by adding the interval
          to the time of the reference point. It should point to another when element in the same
          timeline. If this attribute is omitted, and the absolute attribute is not specified, then
          the reference point is understood to be the preceding when element. Used by: timeline
          Module: meiLinkAlign</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="absolute" usage="opt"/>
                  <attDef ident="interval" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="since" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="unit" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mei">
               <desc>The names of the potential document elements, i.e., mei, meicorpus, meihead, and
          music, should not be changed in order to assure an absolute minimum level of MEI
          compliance. The version attribute contains the version of the DTD used by the instance.
          The document element for a single document contains a header and data.</desc>
               <attList>
                  <attDef ident="id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="meihead"/>
                  <rng:ref name="music"/>
               </content>
            </elementSpec>
            <elementSpec ident="meicorpus">
               <desc>The document element for a group of documents, each with its own complete header,
          contains a header for the group, and one or more mei elements.</desc>
               <attList>
                  <attDef ident="id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:ref name="meihead"/>
                  <rng:oneOrMore>
                     <rng:ref name="mei"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="meihead">
               <desc>The meihead element contains general information about the encoded file.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <attList>
                  <attDef ident="type" usage="opt">
                     <valList type="closed">
                        <valItem ident="music"/>
                        <valItem ident="corpus"/>
                     </valList>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="altmeiid"/>
                  </rng:zeroOrMore>
                  <rng:ref name="filedesc"/>
                  <rng:ref name="model.headerPart"/>
                  <rng:optional>
                     <rng:ref name="revisiondesc"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="music">
               <desc>This element is a container for everything else in the document besides the header.
          The front and back elements are declared in the meiText DTD.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <attList>
                  <attDef ident="version" usage="opt">
                     <defaultVal>1.9b</defaultVal>
                     <valList type="closed">
                        <valItem ident="1.9b"/>
                     </valList>
                  </attDef>
               </attList>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.facsimileLike"/>
                  </rng:zeroOrMore>
                  <rng:ref name="model.musicPart"/>
               </content>
            </elementSpec>
         </schemaSpec>
      </body>
   </text>
</TEI>