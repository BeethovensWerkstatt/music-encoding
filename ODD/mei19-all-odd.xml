<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_all.rng" type="xml"?><TEI xmlns:rng="http://relaxng.org/ns/structure/1.0"
     xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
     xmlns:xhtml="http://www.w3.org/1000/xhtml"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     xmlns="http://www.tei-c.org/ns/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>MEI (Music Encoding Initiative)</title>
            <respStmt>
               <resp>automated and manual editing</resp>
               <name xml:id="RV">Raffaele Viglianti</name>
               <name xml:id="PR">Perry Roland</name>
            </respStmt>
         </titleStmt>
         <publicationStmt>
            <p>Converted from RNG with XSLT script ../Styles/rng2odd.xsl</p>
         </publicationStmt>
         <sourceDesc>
            <p>created on 2010-02-15T16:19:02.465Z</p>
         </sourceDesc>
      </fileDesc>
      <revisionDesc>
         <change who="#RV" when="2010-02-15Z"> Converted RNG Datatypes Declarations into ODD
            Datatype Macros according to TEI guidelines. <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/html/ST.html#DTYPES">Chapter 1,
              §1.4.2</ref>. </change>
         <change who="#RV" when="2010-02-15Z"> Converted RNG Attribute Classes Declarations
            into ODD Attribute Classes according to TEI guidelines. <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/html/ST.html#STECAT">Chapter 1,
              §1.3.1</ref>. </change>
         <change who="#RV" when="2010-02-15Z"> Converted RNG Model Classes Declarations into
            ODD Model Classes according to TEI guidelines. <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/ST.html#STECCM">Chapter 1,
              §1.3.2</ref>. See also <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDCLA">Chapter 22,
              §22.4.6</ref> for references to models. </change>
         <change who="#RV" when="2010-02-15Z"> Converted RNG Model Classes Declarations into
            ODD Macro Classes (when appropriate) according to TEI guidelines. <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDENT">Chapter 22,
              §22.4.7</ref>. </change>
         <change who="#RV" when="2010-02-15Z"> Converted RNG Element Declarations into ODD
            Element Declarations according to TEI guidelines. <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDcrystals">Chapter 22, §22.3</ref>. See also <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDCLA">Chapter 22,
              §22.4.6</ref> for references to models. </change>
         <change who="#PR" when="2010-02-15Z">Changed order of content and attlist
            declarations, fixed problem generating @usage</change>
         <change who="#RV" when="2010-02-15Z">Integrated Schematron rules within element
            declarations.</change>
      </revisionDesc>
   </teiHeader>
   <text>
      <front>
         <divGen type="toc"/>
      </front>
      <body>
         <p>MEI</p>
         <schemaSpec ident="mei" start="mei" ns="http://www.mei-c.org/ns/mei">
<!--****-->
<!--Datatype Macros-->
<!--Number of definitions found in original RNG: 102-->
<!--****-->
<macroSpec module="mei" type="dt" ident="data.BEND.AMOUNT">
               <desc>Either a decimal value or a token. The decimal values are
      limited to .25, .5, .75, or 1, while the token values are restricted to
      'full'.</desc>
               <content>
                  <rng:choice>
                     <rng:data type="decimal">
                        <rng:param name="pattern">1|\.25|\.5|\.75</rng:param>
                     </rng:data>
                     <rng:data type="token">
                        <rng:param name="pattern">full</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BEAT">
               <desc>A beat location, i.e., [0-9]+(\.?[0-9]*)? The value must
      fall between 0 and the numerator of the time signature + 1, where 0
      represents the left barline and the upper bound represents the right
      barline. For example, in 12/8 the value must be in the range from 0 to
      13.</desc>
               <content>
                  <rng:data type="decimal">
                     <rng:param name="minInclusive">0</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BEATRPT.REND">
               <desc>Visual and performance information for a repeated beat
      symbol.</desc>
               <content>
                  <rng:choice>
                     <rng:data type="positiveInteger">
                        <rng:param name="pattern">4|8|16|32|64|128</rng:param>
                     </rng:data>
                     <rng:data type="token">
                        <rng:param name="pattern">mixed</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.COLOR">
               <desc>Either a hexadecimal color value, ie., x[0-9A-Fa-f]{6,6} OR
      a descriptive word, i.e., aqua, black, blue, fuchsia, gray, green, lime,
      maroon, navy, olive, purple, red, silver, teal, white, or yellow, for
      colors defined by the HTML 4.01 specification.</desc>
               <content>
                  <rng:choice>
                     <rng:data type="token">
                        <rng:param name="pattern">(x[0-9A-Fa-f]{6,6}|aqua|black|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow)</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.DEGREES">
               <desc>360th-unit measure of a cirle's circumference; optionally
      signed decimal number, i.e., [+-]?[0-9]+(\.?[0-9]*)?</desc>
               <content>
                  <rng:data type="decimal"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FINGER.FRET">
               <desc>In a guitar chord diagram, a label indicating which finger,
      if any, should be used to play an individual string. The values 'x' and
      'o' indicated stopped and open strings, respectively.</desc>
               <content>
                  <rng:choice>
                     <rng:data type="positiveInteger">
                        <rng:param name="minInclusive">1</rng:param>
                        <rng:param name="maxInclusive">4</rng:param>
                     </rng:data>
                     <rng:data type="token">
                        <rng:param name="pattern">x|o</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FRET">
               <desc>In a guitar chord diagram, the fret where the finger should
      be placed. Since guitar chord diagrams are limited to the range of frets
      that fall under the hand, the value here is also limited. The pos
      (position) attribute on the chorddef element must be used to indicate at
      which fret this range begins.</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">1</rng:param>
                     <rng:param name="maxInclusive">5</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.INTEGERNONNEGATIVE">
               <desc>Unsigned positive integer values including '0', i.e.,
      [0-9]+</desc>
               <content>
                  <rng:data type="nonNegativeInteger"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.INTEGERPOSITIVE">
               <desc>Unsigned positive integer values excluding '0', i.e., 1 to
      infinity.</desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ISODATE">
               <desc>ISO date formats</desc>
               <content>
                  <rng:choice>
                     <rng:data type="date"/>
                     <rng:data type="gYear"/>
                     <rng:data type="gMonth"/>
                     <rng:data type="gDay"/>
                     <rng:data type="gYearMonth"/>
                     <rng:data type="gMonthDay"/>
                     <rng:data type="time"/>
                     <rng:data type="dateTime"/>
                     <rng:data type="token">
                        <rng:param name="pattern">[0-9.,DHMPRSTWYZ/:+\-]+</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ISOTIME">
               <desc>ISO 24-hour time format: HH:MM:SS.ss, i.e.,
      [0-9][0-9]:[0-9][0-9]:[0-9][0-9](\.?[0-9]*)?</desc>
               <content>
                  <rng:data type="time"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MEASUREBEAT">
               <desc>A duration expressed as a count of measures plus a beat
      location, i.e., [0-9]+m *\+ *[0-9]+(\.?[0-9]*)?, e.g., dur="1m + 3.5"
      indicates a duration of 1 measure plus 3 and one half beats or, in other
      words, on the 2nd half of the 3rd beat of the next measure. The measure
      number must be in the range of 0 to the number of remaining measures and
      the beat number must be in the range from 0 to the numerator of the time
      signature plus 1. For example, for an event starting in the first measure
      of a piece containing 6 measures in 6/8, the measure number must be
      between 0 to 5 and the beat number must be within the range from 0 to 7,
      e.g., "4m+3".</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">([0-9]+m *\+ *)?[0-9]+(\.?[0-9]*)?</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MIDINAMES">
               <desc>General MIDI instrument names</desc>
               <content>
                  <rng:choice>
                     <rng:value>Acoustic_Grand_Piano</rng:value>
                     <rng:value>Bright_Acoustic_Piano</rng:value>
                     <rng:value>Electric_Grand_Piano</rng:value>
                     <rng:value>Honky-tonk_Piano</rng:value>
                     <rng:value>Electric_Piano_1</rng:value>
                     <rng:value>Electric_Piano_2</rng:value>
                     <rng:value>Harpsichord</rng:value>
                     <rng:value>Clavi</rng:value>
                     <rng:value>Celesta</rng:value>
                     <rng:value>Glockenspiel</rng:value>
                     <rng:value>Music_Box</rng:value>
                     <rng:value>Vibraphone</rng:value>
                     <rng:value>Marimba</rng:value>
                     <rng:value>Xylophone</rng:value>
                     <rng:value>Tubular_Bells</rng:value>
                     <rng:value>Dulcimer</rng:value>
                     <rng:value>Drawbar_Organ</rng:value>
                     <rng:value>Percussive_Organ</rng:value>
                     <rng:value>Rock_Organ</rng:value>
                     <rng:value>Church_Organ</rng:value>
                     <rng:value>Reed_Organ</rng:value>
                     <rng:value>Accordion</rng:value>
                     <rng:value>Harmonica</rng:value>
                     <rng:value>Tango_Accordion</rng:value>
                     <rng:value>Acoustic_Guitar_nylon</rng:value>
                     <rng:value>Acoustic_Guitar_steel</rng:value>
                     <rng:value>Electric_Guitar_jazz</rng:value>
                     <rng:value>Electric_Guitar_clean</rng:value>
                     <rng:value>Electric_Guitar_muted</rng:value>
                     <rng:value>Overdriven_Guitar</rng:value>
                     <rng:value>Distortion_Guitar</rng:value>
                     <rng:value>Guitar_harmonics</rng:value>
                     <rng:value>Acoustic_Bass</rng:value>
                     <rng:value>Electric_Bass_finger</rng:value>
                     <rng:value>Electric_Bass_pick</rng:value>
                     <rng:value>Fretless_Bass</rng:value>
                     <rng:value>Slap_Bass_1</rng:value>
                     <rng:value>Slap_Bass_2</rng:value>
                     <rng:value>Synth_Bass_1</rng:value>
                     <rng:value>Synth_Bass_2</rng:value>
                     <rng:value>Violin</rng:value>
                     <rng:value>Viola</rng:value>
                     <rng:value>Cello</rng:value>
                     <rng:value>Contrabass</rng:value>
                     <rng:value>Tremolo_Strings</rng:value>
                     <rng:value>Pizzicato_Strings</rng:value>
                     <rng:value>Orchestral_Harp</rng:value>
                     <rng:value>Timpani</rng:value>
                     <rng:value>String_Ensemble_1</rng:value>
                     <rng:value>String_Ensemble_2</rng:value>
                     <rng:value>SynthStrings_1</rng:value>
                     <rng:value>SynthStrings_2</rng:value>
                     <rng:value>Choir_Aahs</rng:value>
                     <rng:value>Voice_Oohs</rng:value>
                     <rng:value>Synth_Voice</rng:value>
                     <rng:value>Orchestra_Hit</rng:value>
                     <rng:value>Trumpet</rng:value>
                     <rng:value>Trombone</rng:value>
                     <rng:value>Tuba</rng:value>
                     <rng:value>Muted_Trumpet</rng:value>
                     <rng:value>French_Horn</rng:value>
                     <rng:value>Brass_Section</rng:value>
                     <rng:value>SynthBrass_1</rng:value>
                     <rng:value>SynthBrass_2</rng:value>
                     <rng:value>Soprano_Sax</rng:value>
                     <rng:value>Alto_Sax</rng:value>
                     <rng:value>Tenor_Sax</rng:value>
                     <rng:value>Baritone_Sax</rng:value>
                     <rng:value>Oboe</rng:value>
                     <rng:value>English_Horn</rng:value>
                     <rng:value>Bassoon</rng:value>
                     <rng:value>Clarinet</rng:value>
                     <rng:value>Piccolo</rng:value>
                     <rng:value>Flute</rng:value>
                     <rng:value>Recorder</rng:value>
                     <rng:value>Pan_Flute</rng:value>
                     <rng:value>Blown_Bottle</rng:value>
                     <rng:value>Shakuhachi</rng:value>
                     <rng:value>Whistle</rng:value>
                     <rng:value>Ocarina</rng:value>
                     <rng:value>Lead_1_square</rng:value>
                     <rng:value>Lead_2_sawtooth</rng:value>
                     <rng:value>Lead_3_calliope</rng:value>
                     <rng:value>Lead_4_chiff</rng:value>
                     <rng:value>Lead_5_charang</rng:value>
                     <rng:value>Lead_6_voice</rng:value>
                     <rng:value>Lead_7_fifths</rng:value>
                     <rng:value>Lead_8_bass_and_lead</rng:value>
                     <rng:value>Pad_1_new_age</rng:value>
                     <rng:value>Pad_2_warm</rng:value>
                     <rng:value>Pad_3_polysynth</rng:value>
                     <rng:value>Pad_4_choir</rng:value>
                     <rng:value>Pad_5_bowed</rng:value>
                     <rng:value>Pad_6_metallic</rng:value>
                     <rng:value>Pad_7_halo</rng:value>
                     <rng:value>Pad_8_sweep</rng:value>
                     <rng:value>FX_1_rain</rng:value>
                     <rng:value>FX_2_soundtrack</rng:value>
                     <rng:value>FX_3_crystal</rng:value>
                     <rng:value>FX_4_atmosphere</rng:value>
                     <rng:value>FX_5_brightness</rng:value>
                     <rng:value>FX_6_goblins</rng:value>
                     <rng:value>FX_7_echoes</rng:value>
                     <rng:value>FX_8_sci-fi</rng:value>
                     <rng:value>Sitar</rng:value>
                     <rng:value>Banjo</rng:value>
                     <rng:value>Shamisen</rng:value>
                     <rng:value>Koto</rng:value>
                     <rng:value>Kalimba</rng:value>
                     <rng:value>Bagpipe</rng:value>
                     <rng:value>Fiddle</rng:value>
                     <rng:value>Shanai</rng:value>
                     <rng:value>Tinkle_Bell</rng:value>
                     <rng:value>Agogo</rng:value>
                     <rng:value>Steel_Drums</rng:value>
                     <rng:value>Woodblock</rng:value>
                     <rng:value>Taiko_Drum</rng:value>
                     <rng:value>Melodic_Tom</rng:value>
                     <rng:value>Synth_Drum</rng:value>
                     <rng:value>Reverse_Cymbal</rng:value>
                     <rng:value>Guitar_Fret_Noise</rng:value>
                     <rng:value>Breath_Noise</rng:value>
                     <rng:value>Seashore</rng:value>
                     <rng:value>Bird_Tweet</rng:value>
                     <rng:value>Telephone_Ring</rng:value>
                     <rng:value>Helicopter</rng:value>
                     <rng:value>Applause</rng:value>
                     <rng:value>Gunshot</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MIDITEMPO">
               <desc>MIDI quarter notes per minute: positive integer in the
      range 10-1000</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">10</rng:param>
                     <rng:param name="maxInclusive">1000</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MODUSMAIOR">
               <desc>Maxima-long relationship values.</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">2</rng:param>
                     <rng:param name="maxInclusive">3</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MODUSMINOR">
               <desc>Long-breve relationship values.</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">2</rng:param>
                     <rng:param name="maxInclusive">3</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.NUMBER">
               <desc>Optionally signed decimal number, i.e.,
      [+-]?[0-9]+(\.?[0-9]*)?</desc>
               <content>
                  <rng:data type="decimal"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.NUMBERPOSITIVE">
               <desc>Unsigned positive decimal values excluding '0', i.e., 1 to
      infinity.</desc>
               <content>
                  <rng:data type="decimal">
                     <rng:param name="minInclusive">1</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.OCTAVE.DIS">
               <desc>The amount of octave displacement; that is, '8' (as in
      '8va' for 1 octave), '15' (for 2 octaves), or rarely '22' (for 3
      octaves).</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="pattern">8|15|22</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ORIENTATION">
               <desc>Rotation or reflection of base symbol
      values.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">reversed|90CW|90CCW</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PAGE.PANELS">
               <desc>The number of panels per page.</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">1</rng:param>
                     <rng:param name="maxInclusive">2</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PERCENT">
               <desc>Positive decimal number plus '%', i.e.,
      [0-9]+(\.?[0-9]*)?\%</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[0-9]+(\.?[0-9]*)?%</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PROLATIO">
               <desc>Semibreve-minim relationship values.</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">2</rng:param>
                     <rng:param name="maxInclusive">3</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.RATIO">
               <desc>A ratio, i.e., [0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)? For
      example, "40:7.2319"</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)?</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.SLASH">
               <desc>The number of slashes to be rendered for
      tremolandi.</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">1</rng:param>
                     <rng:param name="maxInclusive">6</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.STRINGNUMBER">
               <desc>In string tablature, the number of the string to be played,
      i.e., [1-9]+.</desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TEMPOVALUE">
               <desc>Beats (meter signature denominator) per minute, e.g.
      120.</desc>
               <content>
                  <rng:data type="positiveInteger"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TEMPUS">
               <desc>Breve-semibreve relationship values</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="minInclusive">2</rng:param>
                     <rng:param name="maxInclusive">3</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TSTAMPOFFSET">
               <desc>A positive or negative offset from the value given in the
      tstamp attribute. The datatype of this attribute must be the same as that
      of the tstamp, tstamp.ges, or tstamp.real attribute.</desc>
               <content>
                  <rng:text/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.URI">
               <desc>a Uniform Resource Identifier, see
      [RFC2396]</desc>
               <content>
                  <rng:data type="anyURI"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ACCIDENTAL.EXPLICIT">
               <desc>Accidental attribute values: s = sharp, f = flat, ss =
      dblsharp, x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n
      = natural, nf = naturalflat, ns = naturalsharp. ss indicates the use of 2
      sharp signs, while x indicates the use of a single double sharp. nf and ns
      are used to cancel dbflats and dblsharps, respectively. su = sharp note
      qtr. tone up, sd = sharp note qtr. tone down, fu = flat note qtr. tone up,
      fd = flat note qtr. tone down, nu = natural note qtr. tone up, nd =
      natural note quarter tone down. Quarter-tone accidentals listed in Read,
      p. 145.</desc>
               <content>
                  <rng:choice>
                     <rng:value>s</rng:value>
                     <rng:value>f</rng:value>
                     <rng:value>ss</rng:value>
                     <rng:value>x</rng:value>
                     <rng:value>ff</rng:value>
                     <rng:value>xs</rng:value>
                     <rng:value>tb</rng:value>
                     <rng:value>n</rng:value>
                     <rng:value>nf</rng:value>
                     <rng:value>ns</rng:value>
                     <rng:value>su</rng:value>
                     <rng:value>sd</rng:value>
                     <rng:value>fu</rng:value>
                     <rng:value>fd</rng:value>
                     <rng:value>nu</rng:value>
                     <rng:value>nd</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ACCIDENTAL.IMPLICIT">
               <desc>Accidental attribute values: s = sharp, f = flat, ss =
      dblsharp, x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n
      = natural, nf = naturalflat, ns = naturalsharp. ss indicates the use of 2
      sharp signs, while x indicates the use of a single double sharp. nf and ns
      are used to cancel dbflats and dblsharps, respectively. su = sharp note
      qtr. tone up, sd = sharp note qtr. tone down, fu = flat note qtr. tone up,
      fd = flat note qtr. tone down, nu = natural note qtr. tone up, nd =
      natural note quarter tone down. Quarter-tone accidentals listed in Read,
      p. 145.</desc>
               <content>
                  <rng:choice>
                     <rng:value>s</rng:value>
                     <rng:value>f</rng:value>
                     <rng:value>ss</rng:value>
                     <rng:value>ff</rng:value>
                     <rng:value>n</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ARTICULATION">
               <desc>The following list of articulations mostly corresponds to
      symbols 1D110-1D111, 1D17B-1D182, 1D185-1D189, 1D1AA-1D1AD, 1D1B3-1D1B5
      from the Western Musical Symbols portion of the Unicode Standard, v. 3.1.
      The dot and stroke values may be used in cases where interpretation is not
      desirable.</desc>
               <content>
                  <rng:choice>
                     <rng:value>acc</rng:value>
                     <rng:value>stacc</rng:value>
                     <rng:value>ten</rng:value>
                     <rng:value>stacciss</rng:value>
                     <rng:value>marc</rng:value>
                     <rng:value>marc-stacc</rng:value>
                     <rng:value>acc-marc</rng:value>
                     <rng:value>loure</rng:value>
                     <rng:value>spicc</rng:value>
                     <rng:value>rip</rng:value>
                     <rng:value>doit</rng:value>
                     <rng:value>plop</rng:value>
                     <rng:value>fall</rng:value>
                     <rng:value>bend</rng:value>
                     <rng:value>flip</rng:value>
                     <rng:value>smear</rng:value>
                     <rng:value>dnbow</rng:value>
                     <rng:value>upbow</rng:value>
                     <rng:value>harm</rng:value>
                     <rng:value>snap</rng:value>
                     <rng:value>fingernail</rng:value>
                     <rng:value>damp</rng:value>
                     <rng:value>dampall</rng:value>
                     <rng:value>open</rng:value>
                     <rng:value>stop</rng:value>
                     <rng:value>dbltongue</rng:value>
                     <rng:value>trpltongue</rng:value>
                     <rng:value>heel</rng:value>
                     <rng:value>toe</rng:value>
                     <rng:value>tap</rng:value>
                     <rng:value>pluck</rng:value>
                     <rng:value>dot</rng:value>
                     <rng:value>stroke</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ARTICULATIONS">
               <desc>One or more values from the list given in the definition of
      data.ARTICULATION.</desc>
               <content>
                  <rng:list>
                     <rng:zeroOrMore>
                        <rng:ref name="data.ARTICULATION"/>
                     </rng:zeroOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.AUGMENTDOT">
               <desc>Dots attribute values (number of augmentation dots) (Read,
      113-119, ex. 8-21)</desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">4</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BARPLACE">
               <desc>Placement of barlines: 'mensur' = between staves only,
      'staff' = between and across staves as necessary, 'takt' = short line
      above staff or through top line. The default value is
      'staff'.</desc>
               <content>
                  <rng:choice>
                     <rng:value>mensur</rng:value>
                     <rng:value>staff</rng:value>
                     <rng:value>takt</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BARRENDITION">
               <desc>Renderings of barlines</desc>
               <content>
                  <rng:choice>
                     <rng:value>dashed</rng:value>
                     <rng:value>dotted</rng:value>
                     <rng:value>dbl</rng:value>
                     <rng:value>dbldashed</rng:value>
                     <rng:value>dbldotted</rng:value>
                     <rng:value>end</rng:value>
                     <rng:value>invis</rng:value>
                     <rng:value>rptstart</rng:value>
                     <rng:value>rptboth</rng:value>
                     <rng:value>rptend</rng:value>
                     <rng:value>single</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BEAM">
               <desc>Beam attribute values: initial, medial, terminal. Nested
      beaming is permitted.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t][1-6]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BEAMS">
               <desc>One or more from the list given in the definition of the
      BEAM entity.</desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.BEAM"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.BOOLEAN">
               <desc>Boolean attribute values</desc>
               <content>
                  <rng:choice>
                     <rng:value>true</rng:value>
                     <rng:value>false</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.CERTAINTY">
               <desc>Values for certainty attribute</desc>
               <content>
                  <rng:choice>
                     <rng:value>high</rng:value>
                     <rng:value>medium</rng:value>
                     <rng:value>low</rng:value>
                     <rng:value>unknown</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.CLEFLINE">
               <desc>Clef line attribute values</desc>
               <content>
                  <rng:ref name="data.INTEGERPOSITIVE"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.CLEFSHAPE">
               <desc>Clef shape attribute values (Read,
      p.53-56)</desc>
               <content>
                  <rng:choice>
                     <rng:value>G</rng:value>
                     <rng:value>GG</rng:value>
                     <rng:value>F</rng:value>
                     <rng:value>C</rng:value>
                     <rng:value>perc</rng:value>
                     <rng:value>TAB</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.CLUSTER">
               <desc>Tone-clusters</desc>
               <content>
                  <rng:choice>
                     <rng:value>whbox</rng:value>
                     <rng:value>blbox</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.CURVERENDITION">
               <desc>Renderings of curves</desc>
               <content>
                  <rng:choice>
                     <rng:value>medium</rng:value>
                     <rng:value>wide</rng:value>
                     <rng:value>dashed</rng:value>
                     <rng:value>dotted</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.DURATION.BASE">
               <desc>Logical, that is, written, duration attribute values for
      the CMN repertoire. Whole note duration = '1'.</desc>
               <content>
                  <rng:choice>
                     <rng:value>long</rng:value>
                     <rng:value>breve</rng:value>
                     <rng:value>1</rng:value>
                     <rng:value>2</rng:value>
                     <rng:value>4</rng:value>
                     <rng:value>8</rng:value>
                     <rng:value>16</rng:value>
                     <rng:value>32</rng:value>
                     <rng:value>64</rng:value>
                     <rng:value>128</rng:value>
                     <rng:value>256</rng:value>
                     <rng:value>512</rng:value>
                     <rng:value>1024</rng:value>
                     <rng:value>2048</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.DURATION.MEN">
               <desc>Logical, that is, written, duration attribute values for
      the mensural repertoire.</desc>
               <content>
                  <rng:choice>
                     <rng:value>maxima</rng:value>
                     <rng:value>longa</rng:value>
                     <rng:value>brevis</rng:value>
                     <rng:value>semibrevis</rng:value>
                     <rng:value>minima</rng:value>
                     <rng:value>semiminima</rng:value>
                     <rng:value>fusa</rng:value>
                     <rng:value>semifusa</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.DURATION">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.BASE"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.DURATION.MENSURAL">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.MEN"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.DURATIONS">
               <desc/>
               <content>
                  <rng:choice>
                     <rng:ref name="data.DURATION.BASE"/>
                     <rng:ref name="data.DURATION.MEN"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.ENCLOSURE">
               <desc>Enclosures for editorial notes and
      accidentals</desc>
               <content>
                  <rng:choice>
                     <rng:value>paren</rng:value>
                     <rng:value>brack</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FONTFAMILY">
               <desc>Font family (for text) attribute values. Mup-acceptable
      values: avantgarde, bookman, courier, helvetica, newcentury, palatino,
      times.</desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FONTNAME">
               <desc>Font name (for text) attribute values. Mup-acceptable
      values: rom, ital, bold, boldital</desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FONTSTYLE">
               <desc>Font style (for text) attribute values. 'normal' = 'rom' in
      Mup.</desc>
               <content>
                  <rng:choice>
                     <rng:value>ital</rng:value>
                     <rng:value>normal</rng:value>
                     <rng:value>oblique</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FONTWEIGHT">
               <desc>Font weight (for text) attribute values</desc>
               <content>
                  <rng:choice>
                     <rng:value>bold</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.XPATH">
               <desc>xPath expression.</desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.XPOINTER">
               <desc>xPointer expression.</desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FRAGMENT">
               <desc>Fragment referencing method.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.XPATH"/>
                     <rng:ref name="data.XPOINTER"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.FRETNUMBER">
               <desc>In string tablature, the fret number, i.e., [1-9]. The
      value 'o' may be used instead of a numerica value to indicate the open
      string.</desc>
               <content>
                  <rng:choice>
                     <rng:data type="nonNegativeInteger">
                        <rng:param name="minInclusive">1</rng:param>
                        <rng:param name="maxInclusive">9</rng:param>
                     </rng:data>
                     <rng:data type="token">
                        <rng:param name="pattern">o</rng:param>
                     </rng:data>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.GLISSANDO">
               <desc>Analytical glissando attribute values: i(nitial), m(edial),
      t(erminal)</desc>
               <content>
                  <rng:choice>
                     <rng:value>i</rng:value>
                     <rng:value>m</rng:value>
                     <rng:value>t</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.GRACE">
               <desc>Do grace notes get time from the current (acc) or previous
      (unacc) one?</desc>
               <content>
                  <rng:choice>
                     <rng:value>acc</rng:value>
                     <rng:value>unacc</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.HEADSHAPE">
               <desc>Notehead shapes</desc>
               <content>
                  <rng:choice>
                     <rng:value>quarter</rng:value>
                     <rng:value>half</rng:value>
                     <rng:value>whole</rng:value>
                     <rng:value>dblwhole</rng:value>
                     <rng:value>filldiamond</rng:value>
                     <rng:value>diamond</rng:value>
                     <rng:value>dwdiamond</rng:value>
                     <rng:value>fillisotriangle</rng:value>
                     <rng:value>isotriangle</rng:value>
                     <rng:value>dwhisotriangle</rng:value>
                     <rng:value>fillpiewedge</rng:value>
                     <rng:value>piewedge</rng:value>
                     <rng:value>dwhpiewedge</rng:value>
                     <rng:value>fillrectangle</rng:value>
                     <rng:value>rectangle</rng:value>
                     <rng:value>dwhrectangle</rng:value>
                     <rng:value>fillrtriangle</rng:value>
                     <rng:value>rtriangle</rng:value>
                     <rng:value>dwrtriangle</rng:value>
                     <rng:value>fillurtriangle</rng:value>
                     <rng:value>urtriangle</rng:value>
                     <rng:value>dwurtriangle</rng:value>
                     <rng:value>fillsemicircle</rng:value>
                     <rng:value>semicircle</rng:value>
                     <rng:value>dwsemicircle</rng:value>
                     <rng:value>fillslash</rng:value>
                     <rng:value>slash</rng:value>
                     <rng:value>dwslash</rng:value>
                     <rng:value>x</rng:value>
                     <rng:value>blank</rng:value>
                     <rng:value>circlex</rng:value>
                     <rng:value>cross</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.INEUMENAME">
               <desc>Interrupted neume, i.e. neume written as 2 or more
      sub-neumes</desc>
               <content>
                  <rng:choice>
                     <rng:value>pessubpunctis</rng:value>
                     <rng:value>climacus</rng:value>
                     <rng:value>scandicus</rng:value>
                     <rng:value>bistropha</rng:value>
                     <rng:value>tristropha</rng:value>
                     <rng:value>pressusminor</rng:value>
                     <rng:value>pressusmaior</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.INEUMEFORM">
               <desc>Interrupted neume forms</desc>
               <content>
                  <rng:choice>
                     <rng:value>liquescent1</rng:value>
                     <rng:value>liquescent2</rng:value>
                     <rng:value>tied</rng:value>
                     <rng:value>tiedliquescent1</rng:value>
                     <rng:value>tiedliquescent2</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.KEYSIGTOKEN">
               <desc>A token describing the pitch name, inflection, and octave
      number of an altered pitch in a key signature.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[a-g][s|f|ss|x|ff|n|nf|ns|su|sd|fu|fd|nu|nd][0-9]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.KEYSIGNATURE">
               <desc>Key signature may be indicated by a value showing where the
      key is in the circle of fifths. Mixed key signatures, e.g. those
      consisting of a mixture of flats and sharps, and key signatures with
      unorthodox placement of the accidentals (Read, p. 143) must be indicated
      by setting the key.sig attribute to 'mixed' and providing explicit keysig
      info in the key.sig.mixed attribute.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">mixed|0|[1-7][f|s]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.LAYERSCHEME">
               <desc>Indicates how stems should be drawn when more than one
      layer is present and stem directions are not indicated on the notes/chords
      themselves. '1' indicates that there is only a single layer on a staff.
      '2o' means there are two layers with opposing stems. '2f' indicates two
      'free' layers; that is, opposing stems will be drawn unless one of the
      layers has 'space'. In that case, stem direction in the remaining layer
      will be determined as if there were only one layer. '3o' and '3f' are
      analogous to '2o' and '2f' with three layers allowed. What about more than
      3 layers?</desc>
               <content>
                  <rng:choice>
                     <rng:value>1</rng:value>
                     <rng:value>2o</rng:value>
                     <rng:value>2f</rng:value>
                     <rng:value>3o</rng:value>
                     <rng:value>3f</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.LIGATUREFORM">
               <desc>Ligature forms</desc>
               <content>
                  <rng:choice>
                     <rng:value>recta</rng:value>
                     <rng:value>obliqua</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.LINERENDITION">
               <desc>Renderings of lines</desc>
               <content>
                  <rng:choice>
                     <rng:value>narrow</rng:value>
                     <rng:value>medium</rng:value>
                     <rng:value>wide</rng:value>
                     <rng:value>dashed</rng:value>
                     <rng:value>dotted</rng:value>
                     <rng:value>wavy</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MENSURATIONSIGN">
               <desc>Mensuration attribute values</desc>
               <content>
                  <rng:choice>
                     <rng:value>C</rng:value>
                     <rng:value>O</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.METERSIGN">
               <desc>Meter.sym attribute values for CMN
      notation</desc>
               <content>
                  <rng:choice>
                     <rng:value>common</rng:value>
                     <rng:value>cut</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MIDICHANNEL">
               <desc>MIDI channel numbers</desc>
               <content>
                  <rng:data type="positiveInteger">
                     <rng:param name="maxInclusive">16</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MIDIVALUE">
               <desc>MIDI values are in the following range</desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">127</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MODE">
               <desc>Modes</desc>
               <content>
                  <rng:choice>
                     <rng:value>major</rng:value>
                     <rng:value>minor</rng:value>
                     <rng:value>dorian</rng:value>
                     <rng:value>phrygian</rng:value>
                     <rng:value>lydian</rng:value>
                     <rng:value>mixolydian</rng:value>
                     <rng:value>aeolian</rng:value>
                     <rng:value>locrian</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.MUSICFONT">
               <desc>Music font family</desc>
               <content>
                  <rng:data type="token"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.OCTAVE">
               <desc>Oct attribute values. The default values conform to
      Acoustical Society of America representation. Read, p.
      44.</desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">9</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PGSCALE">
               <desc>Page scale factor. Page.scale may be expressed as a
      percentage of a programmatically-determined "usual" size or as a ratio of
      virtual units to real-world units.</desc>
               <content>
                  <rng:choice>
                     <rng:ref name="data.PERCENT"/>
                     <rng:ref name="data.RATIO"/>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PGUNITS">
               <desc>Values for real-world unit attributes</desc>
               <content>
                  <rng:choice>
                     <rng:value>in</rng:value>
                     <rng:value>cm</rng:value>
                     <rng:value>mm</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PITCHCLASS">
               <desc>Pclass (pitch class) attribute values</desc>
               <content>
                  <rng:data type="nonNegativeInteger">
                     <rng:param name="maxInclusive">11</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PITCHNAME">
               <desc>The pitch names (gamut) used within a single octave. The
      default values conform to Acoustical Society of America
      representation.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[a-g]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PITCHNAME.GES">
               <desc>Gestural pitch names need an additional value for when the
      notated pitch is not to be sounded.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[a-g]|none</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PITCHNUMBER">
               <desc>Pnum (pitch number, e.g. MIDI) attribute
      values</desc>
               <content>
                  <rng:ref name="data.INTEGERNONNEGATIVE"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PLIST">
               <desc>Participant list referencing method.</desc>
               <content>
                  <rng:data type="IDREFS"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.PLACE">
               <desc>Place, i.e., location of musical material relative to a
      staff.</desc>
               <content>
                  <rng:choice>
                     <rng:value>above</rng:value>
                     <rng:value>below</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.SIZE">
               <desc>Relative size attribute values</desc>
               <content>
                  <rng:choice>
                     <rng:value>normal</rng:value>
                     <rng:value>cue</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.SLUR">
               <desc>i=initial, m=medial, t=terminal. Number is used to match
      endpoints of the slur when slurs are nested or overlap, e.g. &lt;note
      slur='i1 i2'/&gt;&lt;note slur='t1'/&gt;&lt;note
      slur='t2'/&gt; encodes the fact that two slurs begin on note 1, one
      which terminates on note 2 and one which terminates on note
      3.</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t][1-6]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.SLURS">
               <desc>One or more from the list given in the definition of
      data.SLUR.</desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.SLUR"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.SLURDIRECTION">
               <desc>Slur direction</desc>
               <content>
                  <rng:choice>
                     <rng:value>up</rng:value>
                     <rng:value>down</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.STAFFLOC">
               <desc>Staff location. Staff location includes staff lines,
      spaces, and the spaces directly above and below the staff. The value
      ranges between 0 (just below the staff) to 2 * number of staff lines
      (directly above the staff). For example, on a 5-line staff the lines would
      be numbered 1,3,5,7, and 9 while the spaces would be numbered
      0,2,4,6,8,10.</desc>
               <content>
                  <rng:ref name="data.INTEGERNONNEGATIVE"/>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.STEMDIRECTION">
               <desc>Stem direction</desc>
               <content>
                  <rng:choice>
                     <rng:value>up</rng:value>
                     <rng:value>down</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.STEMMODIFIER">
               <desc>Stem modification</desc>
               <content>
                  <rng:choice>
                     <rng:value>1slash</rng:value>
                     <rng:value>2slash</rng:value>
                     <rng:value>3slash</rng:value>
                     <rng:value>4slash</rng:value>
                     <rng:value>5slash</rng:value>
                     <rng:value>6slash</rng:value>
                     <rng:value>sprech</rng:value>
                     <rng:value>z</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.STEMPOSITION">
               <desc>Which side of stem?</desc>
               <content>
                  <rng:choice>
                     <rng:value>left</rng:value>
                     <rng:value>right</rng:value>
                     <rng:value>center</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TEMPERAMENT">
               <desc>Temperament</desc>
               <content>
                  <rng:choice>
                     <rng:value>equal</rng:value>
                     <rng:value>just</rng:value>
                     <rng:value>mean</rng:value>
                     <rng:value>pythagorean</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TEXTRENDITION">
               <desc>Text rendition values</desc>
               <content>
                  <rng:choice>
                     <rng:value>box</rng:value>
                     <rng:value>circle</rng:value>
                     <rng:value>dblunderline</rng:value>
                     <rng:value>none</rng:value>
                     <rng:value>quoted</rng:value>
                     <rng:value>slashed</rng:value>
                     <rng:value>smcaps</rng:value>
                     <rng:value>strike</rng:value>
                     <rng:value>sub</rng:value>
                     <rng:value>sup</rng:value>
                     <rng:value>underline</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TIE">
               <desc>Tie attribute values: initial, medial,
      terminal</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TIEDIRECTION">
               <desc>Tie direction</desc>
               <content>
                  <rng:choice>
                     <rng:value>up</rng:value>
                     <rng:value>down</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TIES">
               <desc>One or more from the list given in the definition of
      data.TIE.</desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.TIE"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TUPLET">
               <desc>Tuplet attribute values: initial, medial,
      terminal</desc>
               <content>
                  <rng:data type="token">
                     <rng:param name="pattern">[i|m|t][1-6]</rng:param>
                  </rng:data>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.TUPLETS">
               <desc>One or more from the list given in the definition of
      data.TUPLET.</desc>
               <content>
                  <rng:list>
                     <rng:oneOrMore>
                        <rng:ref name="data.TUPLET"/>
                     </rng:oneOrMore>
                  </rng:list>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.UNEUMENAME">
               <desc>Basic, i.e., single, uninterrupted, neume
      names</desc>
               <content>
                  <rng:choice>
                     <rng:value>punctum</rng:value>
                     <rng:value>virga</rng:value>
                     <rng:value>pes</rng:value>
                     <rng:value>clivis</rng:value>
                     <rng:value>torculus</rng:value>
                     <rng:value>torculusresupinus</rng:value>
                     <rng:value>porrectus</rng:value>
                     <rng:value>porrectusflexus</rng:value>
                     <rng:value>apostropha</rng:value>
                     <rng:value>oriscus</rng:value>
                     <rng:value>pressusmaior</rng:value>
                     <rng:value>pressusminor</rng:value>
                     <rng:value>virgastrata</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.UNEUMEFORM">
               <desc>Basic, i.e., single, uninterrupted, neume
      forms</desc>
               <content>
                  <rng:choice>
                     <rng:value>liquescent1</rng:value>
                     <rng:value>liquescent2</rng:value>
                     <rng:value>liquescent3</rng:value>
                     <rng:value>quilismatic</rng:value>
                     <rng:value>rectangular</rng:value>
                     <rng:value>rhombic</rng:value>
                     <rng:value>tied</rng:value>
                  </rng:choice>
               </content>
            </macroSpec>
            <macroSpec module="mei" type="dt" ident="data.VISUALOFFSET">
               <desc>Visual, i.e. ho and vo, offsets are expressed in terms of
      staff interline distance; that is, in "stepsizes", which are half the
      distance between staff lines.</desc>
               <content>
                  <rng:ref name="data.NUMBER"/>
               </content>
            </macroSpec>
            <!--****-->
<!--Attribute Classes-->
<!--Number of definitions found in original RNG: 351-->
<!--****-->
<classSpec type="atts" ident="att.alignment">
               <desc>Temporal alignment attributes. This class of
      attributes is unavailable unless the meiLinkAlign module is
      included.</desc>
               <attList>
                  <attDef ident="when" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.altsym">
               <desc>Pointers to user-defined
      symbols</desc>
               <attList>
                  <attDef ident="altsym" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.bibl">
               <desc>Bibliographic attributes</desc>
               <attList>
                  <attDef ident="analog" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.color">
               <desc>Color attributes</desc>
               <attList>
                  <attDef ident="color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.common.anl">
               <desc>Common analytical attributes. When the
      meiLinkAlign module is used, the when attribute is also a member of this
      attribute class.</desc>
               <classes>
                  <memberOf key="att.alignment"/>
               </classes>
               <attList>
                  <attDef ident="copyof" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corresp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="next" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prev" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="sameas" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="synch" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.common">
               <desc>Common attributes</desc>
               <attList>
                  <attDef ident="xml:id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="n" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.controlevent">
               <desc>Attributes shared by events which rely on
      other events for their existence. For example, a slur/phrase marking must
      be drawn between or over a group of notes. The slur is therefore a control
      event.</desc>
               <attList>
                  <attDef ident="layer" usage="opt"/>
                  <attDef ident="plist" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLIST"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req"/>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.coordinated">
               <desc>This attribute class records the position of
      the entity within a two-dimensional coordinate system.</desc>
               <attList>
                  <attDef ident="ulx" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="uly" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lrx" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lry" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.crit">
               <desc>Attributes common to all elements
      representing variant readings</desc>
               <attList>
                  <attDef ident="cause" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="seq" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.date">
               <desc>Attributes common to dates</desc>
               <attList>
                  <attDef ident="calendar" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="cert" usage="opt">
                     <datatype>
                        <rng:ref name="data.CERTAINTY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="from" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="notafter" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="notbefore" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reg" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISODATE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.edit">
               <desc>Attributes describing the nature of an
      encoded scholarly intervention or interpretation</desc>
               <attList>
                  <attDef ident="cert" usage="opt">
                     <datatype>
                        <rng:ref name="data.CERTAINTY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="evidence" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.event">
               <desc>Attributes that apply to all written events,
      e.g., beam, beatrpt, chord, note, etc.</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.facsimile">
               <desc>Facsimile references. This attribute class
      is unavailable unless the meiFacsimile module is
      available.</desc>
               <attList>
                  <attDef ident="facs" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.common">
               <desc>Attributes common to all linking
      elements</desc>
               <attList>
                  <attDef ident="actuate" usage="opt">
                     <valList type="closed">
                        <valItem ident="onLoad"/>
                        <valItem ident="onRequest"/>
                        <valItem ident="other"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="role" usage="opt">
                     <datatype>
                        <rng:data type="anyURI"/>
                     </datatype>
                  </attDef>
                  <attDef ident="show" usage="opt">
                     <valList type="closed">
                        <valItem ident="new"/>
                        <valItem ident="replace"/>
                        <valItem ident="other"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="targettype" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="title" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.external">
               <desc>Linking attributes for external referencing
      elements</desc>
               <attList>
                  <attDef ident="entityref" usage="opt">
                     <datatype>
                        <rng:data type="ENTITY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fragment" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRAGMENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="href" usage="opt">
                     <datatype>
                        <rng:ref name="data.URI"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.link.internal">
               <desc>Linking attributes for internal referencing
      elements</desc>
               <attList>
                  <attDef ident="plist" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLIST"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.midi.event">
               <desc>Attributes common to MIDI
      events</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.name">
               <desc>Attributes shared by names</desc>
               <attList>
                  <attDef ident="authority" usage="opt"/>
                  <attDef ident="key" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reg" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.placement">
               <desc>Attributes capturing placement
      information</desc>
               <attList>
                  <attDef ident="place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.startendid">
               <desc>Attributes recording the IDs of a sequence
      of elements to which the current element is associated.</desc>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.lang">
               <desc>Language attributes common to text
      elements</desc>
               <attList>
                  <attDef ident="xml:lang" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.trans">
               <desc>Attributes for elements encoding authorial
      or scribal intervention when transcribing manuscript or similar
      sources</desc>
               <attList>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="seq" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.typed">
               <desc>Attributes which can be used to classify or
      subclassify elements</desc>
               <attList>
                  <attDef ident="type" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="subtype" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.typography">
               <desc>Typographical attributes</desc>
               <attList>
                  <attDef ident="fontfam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontname" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontsize" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontstyle" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fontweight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset.ho">
               <desc>Horizontal offset
      attributes</desc>
               <attList>
                  <attDef ident="ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset.to">
               <desc>Horizontal offset attributes specified in
      terms of time</desc>
               <attList>
                  <attDef ident="to" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset.vo">
               <desc>Vertical offset attributes</desc>
               <attList>
                  <attDef ident="vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset">
               <desc>Visual offset attributes. Some items may
      have their location recorded in terms of offsets from their
      programmatically-determined location. The ho attribute records the
      horizontal offset while vo records the vertical. The to attribute holds a
      timestamp offset, the most common use of which is as an alternative to the
      ho attribute.</desc>
               <classes>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.visualoffset.vo"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2.ho">
               <desc>Horizontal offset requiring a pair of
      attributes</desc>
               <attList>
                  <attDef ident="startho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2.to">
               <desc>Horizontal offset attributes requiring a
      pair of attributes specified in terms of time</desc>
               <attList>
                  <attDef ident="startto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endto" usage="opt">
                     <datatype>
                        <rng:ref name="data.TSTAMPOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2.vo">
               <desc>Vertical offset attributes requiring a pair
      of attributes</desc>
               <attList>
                  <attDef ident="startvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="endvo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.visualoffset2">
               <desc>Visual offset attributes. Some items may
      have their location recorded in terms of pairs of offsets from their
      programmatically-determined location. The startho and endho attributes
      record the horizontal offsets of the start and end points of the item,
      respectively. Similarly, the startvo and endvo attributes record the
      vertical offsets of the start and end points of the item. The startto and
      endto attributes hold timestamp offsets, the most common use of which is
      as alternatives to the ho attributes.</desc>
               <classes>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.visualoffset2.vo"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.xy">
               <desc>Output coordinate attributes. Some elements
      may have their exact rendered *output* coordinates recorded. x and y
      attributes indicate where to place the rendered output. Recording the
      coordinates of a feature in a facsimile requires the use of the facs
      attribute.</desc>
               <attList>
                  <attDef ident="x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy.required">
               <desc>Required output coordinate attributes. Some
      elements must have their exact rendered *output* coordinates recorded. x
      and y attributes indicate where to place the rendered output. Recording
      the coordinates of a feature in a facsimile requires the use of the facs
      attribute.</desc>
               <attList>
                  <attDef ident="x" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy2">
               <desc>Output coordinate attributes. Some elements
      may need 2 coordinate pairs to record their rendered *output*
      coordinates.</desc>
               <attList>
                  <attDef ident="x2" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y2" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.xy2.required">
               <desc>Required output coordinate attributes. Some
      elements must have 2 coordinate pairs to record their output
      coordinates.</desc>
               <attList>
                  <attDef ident="x2" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="y2" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.barline">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.barline">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="tstamp" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.barline">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="complete" usage="opt">
                     <valList type="closed">
                        <valItem ident="c"/>
                        <valItem ident="i"/>
                        <valItem ident="o"/>
                     </valList>
                  </attDef>
                  <attDef ident="control" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.barline">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="barplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="taktplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.clef">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.clef">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.clef">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="line" usage="req">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="shape" usage="req">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dis" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE.DIS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dis.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.clef">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.custos">
               <desc>Analytical domain
      attributess</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.custos">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.custos">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="oct" usage="req">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="req">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="target" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.custos">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dot">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dot">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.dot">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="aug"/>
                        <valItem ident="div"/>
                     </valList>
                  </attDef>
                  <attDef ident="loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dot">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ending">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ending">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ending">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ending">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.grpsym">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.grpsym">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.grpsym">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="symbol" usage="req">
                     <valList type="closed">
                        <valItem ident="brace"/>
                        <valItem ident="bracket"/>
                        <valItem ident="line"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.grpsym">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ineume">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ineume">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ineume">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.INEUMEFORM"/>
                     </datatype>
                  </attDef>
                  <attDef ident="name" usage="opt">
                     <datatype>
                        <rng:ref name="data.INEUMENAME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ineume">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.layer">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.layer">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.layer">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layer">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.layerdef">
               <desc>Analytical domain
      attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.layerdef">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef.mensural">
               <desc>Logical domain attributes for layerdef in
      the mensural repertoire</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef.base">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.layerdef">
               <desc>Logical domain attributes for layerdef in
      all repertoires</desc>
               <classes>
                  <memberOf key="att.log.layerdef.base"/>
                  <memberOf key="att.log.layerdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef.mensural">
               <desc>Visual domain attributes for layerdef in the
      mensural repertoire</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef.base">
               <desc>Visual domain attributes for layerdef in the
      CMN repertoire</desc>
               <attList>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.layerdef">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.vis.layerdef.base"/>
                  <memberOf key="att.vis.layerdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ligature">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ligature">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ligature">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.LIGATUREFORM"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ligature">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mensur">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mensur">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mensur">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="modusmaior" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODUSMAIOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODUSMINOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <datatype>
                        <rng:ref name="data.PROLATIO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPUS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mensur">
               <desc>Visual domain attributes. These attributes
      describe the physical appearance of the mensuration sign/time signature of
      mensural notation.</desc>
               <classes>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="orient" usage="opt">
                     <datatype>
                        <rng:ref name="data.ORIENTATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="sign" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.midi">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.midi">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.midi">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.midi">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.proport">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.proport">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.proport">
               <desc>Logical domain attributes. These attributes
      describe augmentation or diminution of the normal value of the notes in
      mensural notation.</desc>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.proport">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.part">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.part">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.part">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.part">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.parts">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.parts">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.parts">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.parts">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.rdg">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.rdg">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.rdg">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="expan" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.rdg">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.sb">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.sb">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.sb">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.sb">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="hash"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.score">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.score">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.score">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.score">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.scoredef">
               <desc>Analytical domain
      attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.scoredef">
               <desc>Gestural domain attributes for scoredef. The
      values set in these attributes act as score-wide defaults for attributes
      that are not set in descendant elements. For example, the grace attribute
      value here applies to all the grace attribute values in the score (or,
      more accurately, until the next &lt;scoredef&gt; element) without
      having to individually set each note's grace attribute value. The midi.*
      attributes function as default values when creating sounding output. The
      tune.* attributes provide the capability of recording a tuning reference
      pitch. <table>
                     <head>Suggested software default values</head>
                     <row>
                        <cell>grace</cell>
                        <cell>'acc'</cell>
                     </row>
                     <row>
                        <cell>midi.channel</cell>
                        <cell/>
                     </row>
                     <row>
                        <cell>midi.div</cell>
                        <cell>'96'</cell>
                     </row>
                     <row>
                        <cell>midi.duty</cell>
                        <cell>'80'</cell>
                     </row>
                     <row>
                        <cell>midi.instr</cell>
                        <cell>'1' (General MIDI instrument number 1)</cell>
                     </row>
                     <row>
                        <cell>midi.instrname</cell>
                        <cell>'Acoustic Piano' (General MIDI instrument name)</cell>
                     </row>
                     <row>
                        <cell>midi.port</cell>
                        <cell>'1'</cell>
                     </row>
                     <row>
                        <cell>midi.tempo</cell>
                        <cell>'120'</cell>
                     </row>
                     <row>
                        <cell>midi.track</cell>
                        <cell>'1'</cell>
                     </row>
                     <row>
                        <cell>tempo — beats per minute</cell>
                        <cell>'120'</cell>
                     </row>
                     <row>
                        <cell>tune.pname</cell>
                        <cell>'a'</cell>
                     </row>
                     <row>
                        <cell>tune.Hz</cell>
                        <cell>'440'</cell>
                     </row>
                     <row>
                        <cell>tune.temper</cell>
                        <cell>'equal'</cell>
                     </row>
                  </table>
               </desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.tempo" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDITEMPO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempo" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPOVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.Hz" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tune.temper" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPERAMENT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef.mensural">
               <desc>Logical domain attributes for a score in the
      mensural repertoire. The values set in these attributes act as score-wide
      defaults for attributes that are not set in descendant elements. The
      tempus, prolatio, modusmaior, and modusminor attributes specify the
      relationship between the four principle levels of note value, i.e., the
      long, breve, semibreve and minim, in mensural notation. Modusminor
      describes the long-breve relationship, while tempus describes the
      breve-semibreve, and prolatio the semibreve-minim relationship,
      respectively. Modusmaior is for the maxima-long relationship. The
      proport.* attributes describe augmentation or diminution of the normal
      value of the notes in mensural notation.</desc>
               <attList>
                  <attDef ident="modusmaior" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODUSMAIOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODUSMINOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <datatype>
                        <rng:ref name="data.PROLATIO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPUS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef.base">
               <desc>Logical domain attributes for scoredef in
      the CMN repertoire. The values set in these attributes act as score-wide
      defaults for attributes that are not set in descendant elements. <table>
                     <head>Suggested software default values</head>
                     <row>
                        <cell>beam.group</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>beam.rests</cell>
                        <cell>'no'</cell>
                     </row>
                     <row>
                        <cell>clef.line</cell>
                        <cell>'2'</cell>
                     </row>
                     <row>
                        <cell>clef.shape</cell>
                        <cell>'G'</cell>
                     </row>
                     <row>
                        <cell>clef.trans</cell>
                        <cell>'0'</cell>
                     </row>
                     <row>
                        <cell>dur.default</cell>
                        <cell>'4'</cell>
                     </row>
                     <row>
                        <cell>key.accid</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>key.mode</cell>
                        <cell>'major'</cell>
                     </row>
                     <row>
                        <cell>key.pname</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>key.sig</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>key.sig.mixed</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>meter.count</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>meter.unit</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>meter.sym</cell>
                        <cell>empty string</cell>
                     </row>
                     <row>
                        <cell>octave.default</cell>
                        <cell>'4'</cell>
                     </row>
                     <row>
                        <cell>trans.diat</cell>
                        <cell>'0'</cell>
                     </row>
                     <row>
                        <cell>trans.semi</cell>
                        <cell>'0'</cell>
                     </row>
                  </table>
               </desc>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.dis" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE.DIS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.dis.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig" usage="opt">
                     <datatype>
                        <rng:ref name="data.KEYSIGNATURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.mixed" usage="opt"/>
                  <attDef ident="meter.count" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.sym" usage="opt">
                     <datatype>
                        <rng:ref name="data.METERSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.unit" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.diat" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.semi" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.scoredef">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.log.scoredef.base"/>
                  <memberOf key="att.log.scoredef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef.mensural">
               <desc>Visual domain attributes for scoredef in the
      mensural repertoire</desc>
               <attList>
                  <attDef ident="mensur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.orient" usage="opt">
                     <datatype>
                        <rng:ref name="data.ORIENTATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef.base">
               <desc>Visual domain attributes for scoredef in the
      CMN repertoire <table>
                     <head>Suggested software default values</head>
                     <row>
                        <cell>bar.place</cell>
                        <cell>'norm'</cell>
                     </row>
                     <row>
                        <cell>beam.rend</cell>
                        <cell>'norm'</cell>
                     </row>
                     <row>
                        <cell>beam.slope</cell>
                        <cell>25.0'</cell>
                     </row>
                     <row>
                        <cell>clef.color</cell>
                        <cell>'black'</cell>
                     </row>
                     <row>
                        <cell>clef.visible</cell>
                        <cell>'yes'</cell>
                     </row>
                     <row>
                        <cell>dynam.dist</cell>
                        <cell>'2'</cell>
                     </row>
                     <row>
                        <cell>ending.rend</cell>
                        <cell>'top'</cell>
                     </row>
                     <row>
                        <cell>grid.show</cell>
                        <cell>'no'</cell>
                     </row>
                     <row>
                        <cell>harm.dist</cell>
                        <cell>'2'</cell>
                     </row>
                     <row>
                        <cell>key.sig.show</cell>
                        <cell>'yes'</cell>
                     </row>
                     <row>
                        <cell>key.sig.showchange</cell>
                        <cell>'yes'</cell>
                     </row>
                     <row>
                        <cell>lyric.align</cell>
                        <cell>'0.25'</cell>
                     </row>
                     <row>
                        <cell>lyric.fam</cell>
                        <cell>'times'</cell>
                     </row>
                     <row>
                        <cell>lyric.name</cell>
                        <cell>'rom'</cell>
                     </row>
                     <row>
                        <cell>lyric.size</cell>
                        <cell>'12'</cell>
                     </row>
                     <row>
                        <cell>lyric.style</cell>
                        <cell>no default</cell>
                     </row>
                     <row>
                        <cell>lyric.weight</cell>
                        <cell>no default</cell>
                     </row>
                     <row>
                        <cell>meter.rend</cell>
                        <cell>'norm'</cell>
                     </row>
                     <row>
                        <cell>meter.sig.showchange</cell>
                        <cell>'yes'</cell>
                     </row>
                     <row>
                        <cell>mnum.visible</cell>
                        <cell>'no'</cell>
                     </row>
                     <row>
                        <cell>multi.number</cell>
                        <cell>'no'</cell>
                     </row>
                     <row>
                        <cell>measures</cell>
                        <cell>'no'</cell>
                     </row>
                     <row>
                        <cell>ontheline</cell>
                        <cell>'yes'</cell>
                     </row>
                     <row>
                        <cell>optimize</cell>
                        <cell>'no'</cell>
                     </row>
                     <row>
                        <cell>page.height</cell>
                        <cell>'11'</cell>
                     </row>
                     <row>
                        <cell>page.width</cell>
                        <cell>'8.5'</cell>
                     </row>
                     <row>
                        <cell>page.units</cell>
                        <cell>'in'</cell>
                     </row>
                     <row>
                        <cell>page.topmar</cell>
                        <cell>'1'</cell>
                     </row>
                     <row>
                        <cell>page.botmar</cell>
                        <cell>'1'</cell>
                     </row>
                     <row>
                        <cell>page.leftmar</cell>
                        <cell>'.5'</cell>
                     </row>
                     <row>
                        <cell>page.rightmar</cell>
                        <cell>'.5'</cell>
                     </row>
                     <row>
                        <cell>page.panels</cell>
                        <cell>'1'</cell>
                     </row>
                     <row>
                        <cell>page.scale</cell>
                        <cell>'100'</cell>
                     </row>
                     <row>
                        <cell>pedal.rend</cell>
                        <cell>'term'</cell>
                     </row>
                     <row>
                        <cell>reh.enclose</cell>
                        <cell>'box'</cell>
                     </row>
                     <row>
                        <cell>slur.rend</cell>
                        <cell>'medium'</cell>
                     </row>
                     <row>
                        <cell>spacing.packexp</cell>
                        <cell>'0.8'</cell>
                     </row>
                     <row>
                        <cell>spacing.packfact</cell>
                        <cell>'1'</cell>
                     </row>
                     <row>
                        <cell>spacing.staff</cell>
                        <cell>'2'</cell>
                     </row>
                     <row>
                        <cell>spacing.system</cell>
                        <cell>20'</cell>
                     </row>
                     <row>
                        <cell>system.leftmar</cell>
                        <cell>'0'</cell>
                     </row>
                     <row>
                        <cell>system.rightmar</cell>
                        <cell>'0'</cell>
                     </row>
                     <row>
                        <cell>system.topmar</cell>
                        <cell>no default</cell>
                     </row>
                     <row>
                        <cell>text.dist</cell>
                        <cell>'2'</cell>
                     </row>
                     <row>
                        <cell>text.fam</cell>
                        <cell>'times'</cell>
                     </row>
                     <row>
                        <cell>text.nam</cell>
                        <cell>'rom'</cell>
                     </row>
                     <row>
                        <cell>text.size</cell>
                        <cell>'12'</cell>
                     </row>
                     <row>
                        <cell>text.style</cell>
                        <cell>no default</cell>
                     </row>
                     <row>
                        <cell>text.weight</cell>
                        <cell>no default</cell>
                     </row>
                     <row>
                        <cell>tie.rend</cell>
                        <cell>'medium'</cell>
                     </row>
                  </table>
               </desc>
               <attList>
                  <attDef ident="bar.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dynam.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ending.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="top"/>
                        <valItem ident="barred"/>
                        <valItem ident="grouped"/>
                     </valList>
                  </attDef>
                  <attDef ident="grid.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="harm.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.align" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="denomsym"/>
                        <valItem ident="norm"/>
                        <valItem ident="invis"/>
                     </valList>
                  </attDef>
                  <attDef ident="meter.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mnum.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="multi.number" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="music.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.MUSICFONT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="music.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ontheline" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="optimize" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.height" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.units" usage="opt">
                     <datatype>
                        <rng:ref name="data.PGUNITS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.topmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.botmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.leftmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.rightmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.panels" usage="opt">
                     <datatype>
                        <rng:ref name="data.PAGE.PANELS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="page.scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.PGSCALE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pedal.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="term"/>
                     </valList>
                  </attDef>
                  <attDef ident="reh.enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.packexp" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.packfact" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing.system" usage="opt"/>
                  <attDef ident="system.leftmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="system.rightmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="system.topmar" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.scoredef">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.vis.scoredef.base"/>
                  <memberOf key="att.vis.scoredef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.section">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.section">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="expan" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.section">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.section">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="restart" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staff">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staff">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.staff">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staff">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staffdef">
               <desc>Analytical domain
      attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef.tablature">
               <desc>Gestural domain attributes for staffdef in
      tablature</desc>
               <attList>
                  <attDef ident="tab.strings" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef.base">
               <desc>Gestural domain attributes for staffdef in
      the CMN repertoire</desc>
               <attList>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffdef">
               <desc>Gestural domain attributes for staffdef in
      all repertoires</desc>
               <classes>
                  <memberOf key="att.ges.staffdef.base"/>
                  <memberOf key="att.ges.staffdef.tablature"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef.mensural">
               <desc>Logical domain attributes for staffdef in
      the mensural repertoire</desc>
               <attList>
                  <attDef ident="mensur.sign" usage="opt">
                     <datatype>
                        <rng:ref name="data.MENSURATIONSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.dot" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusmaior" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODUSMAIOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="modusminor" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODUSMINOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="prolatio" usage="opt">
                     <datatype>
                        <rng:ref name="data.PROLATIO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="proport.numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tempus" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPUS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef.base">
               <desc>Logical domain attributes for staffdef in
      the CMN repertoire</desc>
               <attList>
                  <attDef ident="beam.group" usage="opt"/>
                  <attDef ident="beam.rests" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.dis" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE.DIS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.dis.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig" usage="opt">
                     <datatype>
                        <rng:ref name="data.KEYSIGNATURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.mixed" usage="opt"/>
                  <attDef ident="meter.count" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.sym" usage="opt">
                     <datatype>
                        <rng:ref name="data.METERSIGN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.unit" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.diat" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="trans.semi" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffdef">
               <desc>Logical domain attributes for staffdef in
      all repertoires</desc>
               <classes>
                  <memberOf key="att.log.staffdef.base"/>
                  <memberOf key="att.log.staffdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef.mensural">
               <desc>Visual domain attributes for the mensural
      repertoire</desc>
               <attList>
                  <attDef ident="mensur.form" usage="opt">
                     <valList type="closed">
                        <valItem ident="horizontal"/>
                        <valItem ident="vertical"/>
                     </valList>
                  </attDef>
                  <attDef ident="mensur.loc" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.orient" usage="opt">
                     <datatype>
                        <rng:ref name="data.ORIENTATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mensur.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef.base">
               <desc>Visual domain attributes for staffdef in the
      CMN repertoire</desc>
               <attList>
                  <attDef ident="beam.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="beam.slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.color" usage="opt">
                     <datatype>
                        <rng:ref name="data.COLOR"/>
                     </datatype>
                  </attDef>
                  <attDef ident="clef.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dynam.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grid.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="harm.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.show" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="key.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="label.full" usage="opt"/>
                  <attDef ident="label.abbr" usage="opt"/>
                  <attDef ident="layerscheme" usage="opt">
                     <datatype>
                        <rng:ref name="data.LAYERSCHEME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines.color" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lines.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.align" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lyric.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="meter.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="denomsym"/>
                        <valItem ident="norm"/>
                        <valItem ident="invis"/>
                     </valList>
                  </attDef>
                  <attDef ident="meter.sig.showchange" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="multi.number" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="ontheline" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pedal.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="term"/>
                     </valList>
                  </attDef>
                  <attDef ident="reh.enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
                  <attDef ident="scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spacing" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.dist" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.fam" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTFAMILY"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.name" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.size" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.style" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTSTYLE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text.weight" usage="opt">
                     <datatype>
                        <rng:ref name="data.FONTWEIGHT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffdef">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.vis.staffdef.base"/>
                  <memberOf key="att.vis.staffdef.mensural"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.staffgrp">
               <desc>Analytical domain
      attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.staffgrp">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="midi.div" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.staffgrp">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.staffgrp">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="barthru" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="label.abbr" usage="opt"/>
                  <attDef ident="label.full" usage="opt"/>
                  <attDef ident="symbol" usage="opt">
                     <valList type="closed">
                        <valItem ident="brace"/>
                        <valItem ident="bracket"/>
                        <valItem ident="line"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.uneume">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.uneume">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.uneume">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <datatype>
                        <rng:ref name="data.UNEUMEFORM"/>
                     </datatype>
                  </attDef>
                  <attDef ident="name" usage="opt">
                     <datatype>
                        <rng:ref name="data.UNEUMENAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.uneume">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.accid">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.accid">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.accid">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="caution"/>
                        <valItem ident="edit"/>
                     </valList>
                  </attDef>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.accid">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.vo"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="opt">
                     <valList type="closed">
                        <valItem ident="above"/>
                        <valItem ident="below"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.annot">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.annot">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.annot">
               <desc>Logical domain attributes for annot. Values
      for the type attribute can be taken from any convenient typology of
      annotation suitable to the work in hand; e.g. annotation, gloss, citation,
      digression, preliminary, temporary, etc.</desc>
               <classes>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.annot">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.arpeg">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.arpeg">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.arpeg">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="dir" usage="opt">
                     <valList type="closed">
                        <valItem ident="up"/>
                        <valItem ident="down"/>
                        <valItem ident="nonarp"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.arpeg">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="arrow" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.artic">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.artic">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.artic">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ARTICULATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.artic">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beam">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beam">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.beam">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beam">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beamspan">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beamspan">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.beamspan">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beamspan">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="acc"/>
                        <valItem ident="rit"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="slope" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.beatrpt">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.beatrpt">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.beatrpt">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.beatrpt">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="req">
                     <datatype>
                        <rng:ref name="data.BEATRPT.REND"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.bend">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.bend">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="amount" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEND.AMOUNT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.bend">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.bend">
               <desc>Visual domain attributes. If the bulge or
      bezier attributes are present, the bend should be rendered as a curve.
      Otherwise, it should be rendered using lines. The ho and vo attributes
      describe the visual offset of the entire rendered bend. The endho, endvo
      and startho, startvo attribute pairs may be used to encode start and end
      points relative to their programmatic placement. For exact placement of
      the endpoints of the bend, use the x and y attributes.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.breath">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.breath">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.breath">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.breath">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.btrem">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.btrem">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.btrem">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="meas"/>
                        <valItem ident="unmeas"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slash" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLASH"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.btrem">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.chord">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.chord">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.chord">
               <desc>Logical domain attributes for chord. The
      artic, dots, and dur attributes encode the written articulations,
      augmentation dots, and duration values. The beam, fermata, lv, slur, syl,
      tie, and tuplet attributes may be used to indicate the attachment of these
      things to this chord. If visual information about these things needs to be
      recorded, then either the elements corresponding to these attributes or
      the attributes available in the att.vis.chord class should be
      employed.</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="artic" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lv" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
                  <attDef ident="tie" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.chord">
               <desc>Visual domain attributes for chord. The
      slur, slur.dir, slur.rend, tie, tie.dir, and tie.rend attributes here are
      syntactic sugar for these attributes on each of the chord's individual
      notes. The values here apply to all the notes in the chord. If some notes
      are slurred or tied while others aren't, then the individual note
      attributes must be used.</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="breaksec" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLUSTER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.clefchange">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.clefchange">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.clefchange.base">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="line" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFLINE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="octave.default" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="shape" usage="opt">
                     <datatype>
                        <rng:ref name="data.CLEFSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dis" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE.DIS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dis.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.clefchange">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.log.clefchange.base"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.clefchange">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dir">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dir">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.dir">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dir">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.dynam">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.dynam">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="value" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.dynam">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.dynam">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.fermata">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.fermata">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.fermata">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.fermata">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ftrem">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ftrem">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="meas"/>
                        <valItem ident="unmeas"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.ftrem">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ftrem">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="slash" usage="req">
                     <datatype>
                        <rng:ref name="data.SLASH"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.gliss">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.gliss">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.gliss">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.gliss">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="text" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.hairpin">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.hairpin">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.hairpin">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="req">
                     <valList type="closed">
                        <valItem ident="cres"/>
                        <valItem ident="dim"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.hairpin">
               <desc>Visual domain attributes. The startho and
      startvo attributes record the horizontal and vertical offsets of the left
      end, endho and endvo record the horizontal and vertical offsets of the
      right end, and the width attribute records the width of the opening on the
      open end in one-half staff inter-line units. The x1 and y1 attributes give
      the absolute coordinates of the left side of the hairpin while x2 and y2
      record the coordinates of the right side.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.halfmrpt">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.halfmrpt">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.halfmrpt">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.halfmrpt">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.harm">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.harm">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.harm">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="chordref" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.harm">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="extender" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rendgrid" usage="opt">
                     <valList type="closed">
                        <valItem ident="grid"/>
                        <valItem ident="gridname"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.harppedal">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.harppedal">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.harppedal">
               <desc>Logical domain attributes. The pedal
      setting, i.e., flat, natural, or sharp, for each diatonic pitch name is
      indicated by the seven letter-named attributes.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="c" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="d" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="e" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="f" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="g" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="a" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
                  <attDef ident="b" usage="opt">
                     <defaultVal>n</defaultVal>
                     <valList type="closed">
                        <valItem ident="f"/>
                        <valItem ident="n"/>
                        <valItem ident="s"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.harppedal">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.lyrics">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.lyrics">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.lyrics">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="layer" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.lyrics">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.typography"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.measure">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.measure">
               <desc>Gestural domain attributes. The tstamp.ges
      and tstamp.real attributes encode the onset time of the measure. In
      reality, this is usually the same as the onset time of the first event in
      the measure.</desc>
               <attList>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.measure">
               <desc>Logical domain attributes. The n attribute
      contains a name or number associated with the measure (Read, p. 445).
      Often, this is an integer, but not always. For example, some measures,
      especially incomplete measures or those under an ending mark, may have
      labels that contain an integer plus a suffix, such as '12a'. Measures may
      even have labels, especially in editorial or analytical uses of MEI, that
      are entirely non-numeric strings. Measure numbers may be machine-generated
      instead of encoding them in the markup. However, an explicit measure
      number should restart numbering with the given value.</desc>
               <attList>
                  <attDef ident="complete" usage="opt">
                     <valList type="closed">
                        <valItem ident="c"/>
                        <valItem ident="i"/>
                        <valItem ident="o"/>
                     </valList>
                  </attDef>
                  <attDef ident="control" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="left" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="right" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.measure">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="barplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.BARPLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="taktplace" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mordent">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mordent">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mordent">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="accidupper" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accidlower" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="long" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mordent">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrest">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrest">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrest">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrest">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="cutout" usage="opt">
                     <valList type="closed">
                        <valItem ident="rest"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur.vis" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrpt">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrpt">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrpt">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrpt">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mrpt2">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mrpt2">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.mrpt2">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mrpt2">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.mspace">
               <desc>Analytical domain attributes. Use the n
      attribute to explicitly encode this measure's position in a string of
      measures containing only &lt;mrest&gt; elements.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.mspace">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.mspace">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.mspace">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="cutout" usage="opt">
                     <valList type="closed">
                        <valItem ident="rest"/>
                        <valItem ident="staff"/>
                     </valList>
                  </attDef>
                  <attDef ident="dur.vis" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.multirest">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.multirest">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.multirest">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.multirest">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
               </classes>
               <attList>
                  <attDef ident="block" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.multirpt">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.multirpt">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.multirpt">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.multirpt">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
               </classes>
               <attList>
                  <attDef ident="expand" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.nota">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota.tablature">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="tab.fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRETNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.string" usage="opt">
                     <datatype>
                        <rng:ref name="data.STRINGNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota.base">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="gliss" usage="opt">
                     <datatype>
                        <rng:ref name="data.GLISSANDO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME.GES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pnum" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.nota">
               <desc>Gestural domain attributes</desc>
               <classes>
                  <memberOf key="att.ges.nota.base"/>
                  <memberOf key="att.ges.nota.tablature"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.nota">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corona" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION.MENSURAL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lig" usage="opt">
                     <valList type="closed">
                        <valItem ident="recta"/>
                        <valItem ident="obliqua"/>
                     </valList>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.nota">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="accid.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="colored" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.note" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.note">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="accid.cautionary" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accid.editorial" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="hfunc" usage="opt"/>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="intm" usage="opt"/>
                  <attDef ident="mfunc" usage="opt"/>
                  <attDef ident="pclass" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHCLASS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="psolfa" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note.tablature">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="tab.fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRETNUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tab.string" usage="opt">
                     <datatype>
                        <rng:ref name="data.STRINGNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note.base">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="accid.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="detune" usage="opt"/>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="gliss" usage="opt">
                     <datatype>
                        <rng:ref name="data.GLISSANDO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace" usage="opt">
                     <datatype>
                        <rng:ref name="data.GRACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="grace.time" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME.GES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pnum" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.note">
               <desc>Gestural domain attributes</desc>
               <classes>
                  <memberOf key="att.ges.note.base"/>
                  <memberOf key="att.ges.note.tablature"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.log.note">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="artic" usage="opt">
                     <datatype>
                        <rng:ref name="data.ARTICULATIONS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="lv" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="syl" usage="opt"/>
                  <attDef ident="tie" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLETS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.note">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset.ho"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="accid.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="breaksec" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="coloration" usage="opt">
                     <valList type="closed">
                        <valItem ident="inverse"/>
                     </valList>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="enclose.note" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="headshape" usage="opt">
                     <datatype>
                        <rng:ref name="data.HEADSHAPE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.SLURDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="slur.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="stem.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.len" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.mod" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMMODIFIER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.pos" usage="opt">
                     <datatype>
                        <rng:ref name="data.STEMPOSITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="stem.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.dir" usage="opt">
                     <datatype>
                        <rng:ref name="data.TIEDIRECTION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tie.rend" usage="opt">
                     <valList type="closed">
                        <valItem ident="dotted"/>
                        <valItem ident="dashed"/>
                     </valList>
                  </attDef>
                  <attDef ident="visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.octave">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.octave">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.octave">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="coll" usage="opt">
                     <valList type="closed">
                        <valItem ident="coll"/>
                     </valList>
                  </attDef>
                  <attDef ident="dis" usage="req">
                     <datatype>
                        <rng:ref name="data.OCTAVE.DIS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="place" usage="req">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.octave">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.ossia">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.ossia">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.ossia">
               <desc>Logical domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.vis.ossia">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pad">
               <desc>Analytical domain
      attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pad">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.pad">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pad">
               <desc>Visual domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pedal">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pedal">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.pedal">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dir" usage="req">
                     <valList type="closed">
                        <valItem ident="down"/>
                        <valItem ident="up"/>
                        <valItem ident="half"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pedal">
               <desc>Visual domain attributes. The place
      attribute captures the placement of the pedal marking with respect to the
      staff with which it is associated. Modern publishing standards require the
      place to be 'below'; however, for transcriptions of manuscript works, this
      attribute class allows the full range of values.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.visualoffset"/>
               </classes>
               <attList>
                  <attDef ident="style" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="pedstar"/>
                        <valItem ident="altpedstar"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.phrase">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.phrase">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.phrase">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.phrase">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.reh">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.reh">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.reh">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="staff" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.ges" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tstamp.real" usage="opt">
                     <datatype>
                        <rng:ref name="data.ISOTIME"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.reh">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <valList type="closed">
                        <valItem ident="box"/>
                        <valItem ident="circle"/>
                        <valItem ident="none"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.rest">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.rest">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.rest">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.rest">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.pausa">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.pausa">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
                  <attDef ident="instr" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.pausa">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="corona" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION.MENSURAL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.pausa">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.altsym"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="beam.with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="colored" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.ho" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.vo" usage="opt">
                     <datatype>
                        <rng:ref name="data.VISUALOFFSET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.x" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dot.y" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBER"/>
                     </datatype>
                  </attDef>
                  <attDef ident="line" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="size" usage="opt">
                     <datatype>
                        <rng:ref name="data.SIZE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="spaces" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.slur">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
               <attList>
                  <attDef ident="join" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.ges.slur">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.slur">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.slur">
               <desc>Visual domain attributes for slur. The vo
      attribute is the vertical offset (from its normal position) of the entire
      rendered slur/phrase mark.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.space">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.space">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.space">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="beam" usage="opt">
                     <datatype>
                        <rng:ref name="data.BEAMS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.DURATION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fermata" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="tuplet" usage="opt">
                     <datatype>
                        <rng:ref name="data.TUPLET"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.space">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="compressable" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.syl">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.syl">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.syl">
               <desc>Logical domain attributes</desc>
               <attList>
                  <attDef ident="con" usage="opt">
                     <valList type="closed">
                        <valItem ident="s"/>
                        <valItem ident="d"/>
                        <valItem ident="u"/>
                        <valItem ident="t"/>
                     </valList>
                  </attDef>
                  <attDef ident="wordpos" usage="opt">
                     <valList type="closed">
                        <valItem ident="i"/>
                        <valItem ident="m"/>
                        <valItem ident="t"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.syl">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="halign" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="justify"/>
                     </valList>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEXTRENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tempo">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tempo">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="midi" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDITEMPO"/>
                     </datatype>
                  </attDef>
                  <attDef ident="value" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEMPOVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.tempo">
               <desc>Logical domain attributes. The dur.vis
      attribute encodes visual duration. (Read, p. 276-281) If logical and
      visual durations differ, it may be necessary to add a dur attribute.
      Please note that the dur attribute here is expressed in musical time,
      i.e., beats or other time stamp. Therefore, it is not a true duration, but
      rather a time stamp for the end point of the directive.</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tempo">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
               <attList>
                  <attDef ident="dur.vis" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tie">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tie">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.tie">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tie">
               <desc>Visual domain attributes. The vo attribute
      is the vertical offset (from its normal position) of the entire rendered
      tie. The startho, startvo, endho, and endvo attributes describe the
      horizontal and vertical offsets of the start and end points of the tie in
      terms of interline distance. Startto and endto describe the start and end
      points in terms of time; that is, beats.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="att.xy2"/>
               </classes>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.trill">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.trill">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.trill">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt">
                     <datatype>
                        <rng:ref name="data.MEASUREBEAT"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.trill">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.visualoffset2.ho"/>
                  <memberOf key="att.visualoffset2.to"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tuplet">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tuplet">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.tuplet">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.event"/>
               </classes>
               <attList>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt"/>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tuplet">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="bracket.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bracket.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.format" usage="opt">
                     <valList type="closed">
                        <valItem ident="count"/>
                        <valItem ident="ratio"/>
                     </valList>
                  </attDef>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.tupletspan">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.tupletspan">
               <desc>Gestural domain attributes</desc>
               <attList>
                  <attDef ident="dur.ges" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.log.tupletspan">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
                  <memberOf key="att.startendid"/>
               </classes>
               <attList>
                  <attDef ident="dots" usage="opt">
                     <datatype>
                        <rng:ref name="data.AUGMENTDOT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur" usage="opt"/>
                  <attDef ident="num" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="numbase" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="with" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.tupletspan">
               <desc>Visual domain attributes</desc>
               <attList>
                  <attDef ident="bracket.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bracket.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="dur.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.format" usage="opt">
                     <valList type="closed">
                        <valItem ident="count"/>
                        <valItem ident="ratio"/>
                     </valList>
                  </attDef>
                  <attDef ident="num.place" usage="opt">
                     <datatype>
                        <rng:ref name="data.PLACE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="num.visible" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.anl.turn">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.turn">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.turn">
               <desc>Logical domain attributes</desc>
               <classes>
                  <memberOf key="att.controlevent"/>
               </classes>
               <attList>
                  <attDef ident="accidupper" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="accidlower" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="delayed" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="inv"/>
                        <valItem ident="norm"/>
                     </valList>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.turn">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.placement"/>
                  <memberOf key="att.visualoffset"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.anl.verse">
               <desc>Analytical domain
      attributes</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
               </classes>
            </classSpec>
            <classSpec type="atts" ident="att.ges.verse">
               <desc>Gestural domain attributes</desc>
            </classSpec>
            <classSpec type="atts" ident="att.log.verse">
               <desc>Logical domain attributes. The n attribute
      should be used for verse numbers. Numbers need not be consecutive; they
      may also be expressed as ranges, e.g. 2-3,6.</desc>
               <attList>
                  <attDef ident="refrain" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rhythm" usage="opt"/>
               </attList>
            </classSpec>
            <classSpec type="atts" ident="att.vis.verse">
               <desc>Visual domain attributes</desc>
               <classes>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.visualoffset.to"/>
                  <memberOf key="att.visualoffset.vo"/>
                  <memberOf key="att.xy"/>
               </classes>
            </classSpec>
            <!--****-->
<!--Defintion of Model and Macro Classes-->
<!--Number of definitions found in original RNG: 110-->
<!--****-->
<classSpec type="model" ident="model.addressLike">
               <desc>groups elements used to represent a postal
      address.</desc>
               <classes>
                  <memberOf key="model.pubstmtPart"/>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.annotLike">
               <desc>groups annotation-like
      elements.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.biblLike">
               <desc>groups elements containing a bibliographic
      description.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.dateLike">
               <desc>groups elements containing date
      expressions.</desc>
               <classes>
                  <memberOf key="model.pubstmtPart"/>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.editionLike">
               <desc>groups elements containing bibliographic
      edition information.</desc>
               <classes>
                  <memberOf key="model.biblPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.editorialLike">
               <desc>groups editorial intervention
      elements.</desc>
               <classes>
                  <memberOf key="model.choicePart"/>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.graphicLike">
               <desc>groups elements that reference
      images.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.identifierLike">
               <desc>groups identifier-like
      elements.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.lbLike">
               <desc>groups elements that function like line
      breaks.</desc>
               <classes>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.milestoneLike.text">
               <desc>groups milestone-style elements found in
      text.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.nameLike">
               <desc>groups elements that contain
      names.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.noteModifierLike">
               <desc>groups elements that modify note-like
      features.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.numLike">
               <desc>groups elements that denote a number or a
      quantity.</desc>
               <classes>
                  <memberOf key="model.measurementLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.pLike">
               <desc>groups paragraph-like
      elements.</desc>
               <classes>
                  <memberOf key="model.textcomponentLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.pbLike">
               <desc>groups pagebreak-like
      elements.</desc>
               <classes>
                  <memberOf key="model.milestoneLike.music"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.rendLike">
               <desc>groups elements that mark typographical
      features.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.repositoryLike">
               <desc>groups elements that denote a corporate
      entity that holds a bibliographic item.</desc>
               <classes>
                  <memberOf key="model.nameLike.place"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.titleLike">
               <desc>groups elements that denote names of a
      bibliographic item.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <macroSpec type="pe" ident="macro.metaLike">
               <desc>groups elements that contain meta-data about
      a single page.</desc>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="fw"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="pgdesc"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <classSpec type="model" ident="model.metaLike.score">
               <desc>groups meta-data elements that may appear in
      running headers or footers of a score.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.common">
               <desc>groups event elements that occur in all
      notational repertoires.</desc>
               <classes>
                  <memberOf key="model.eventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.neume-mensural">
               <desc>groups event elements that occur in neume
      and mensural notation.</desc>
               <classes>
                  <memberOf key="model.eventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.mensural-cmn">
               <desc>groups event elements that occur in neume
      and modern notation.</desc>
               <classes>
                  <memberOf key="model.eventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.controleventLike.common">
               <desc/>
               <classes>
                  <memberOf key="model.controleventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.keyaccidLike">
               <desc>groups elements that represent accidentals
      in a key signature.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.keysigLike">
               <desc>groups elements that have the same function
      as a key signature.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.backLike">
               <desc>groups elements that may contain back
      matter.</desc>
               <classes>
                  <memberOf key="model.musicPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.divLike">
               <desc>groups elements used to represent generic
      structural divisions of text.</desc>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.frontLike">
               <desc>groups elements that may contain front
      matter.</desc>
               <classes>
                  <memberOf key="model.musicPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.headLike">
               <desc>groups elements used to provide a heading at
      the start of a text division.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.lLike">
               <desc>groups elements representing metrical
      components such as verse lines.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.listLike">
               <desc>groups list-like elements.</desc>
               <classes>
                  <memberOf key="model.paracontentPart"/>
                  <memberOf key="model.textcomponentLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.quoteLike">
               <desc>groups elements used to directly contain
      quotations.</desc>
               <classes>
                  <memberOf key="model.paracontentPart"/>
                  <memberOf key="model.textcomponentLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.tableLike">
               <desc>groups table-like
      elements.</desc>
               <classes>
                  <memberOf key="model.paracontentPart"/>
                  <memberOf key="model.textcomponentLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.lgLike">
               <desc>groups elements that have a line-grouping
      function.</desc>
               <classes>
                  <memberOf key="model.textcomponentLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.labelLike">
               <desc>groups elements used to assign a label to
      other parts of a document.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.endingLike">
               <desc>groups elements that represent alternative
      endings.</desc>
               <classes>
                  <memberOf key="model.sectionPart"/>
                  <memberOf key="model.scorePart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.instrdefLike">
               <desc>groups elements used to declare a MIDI
      instrument.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.layerLike">
               <desc>groups elements that function as notational
      layers within a staff.</desc>
               <classes>
                  <memberOf key="model.staffPart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.layerdefLike">
               <desc>groups elements that permit declaration of
      layer properties.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.mdivLike">
               <desc>groups elements used to represent generic
      structural divisions of music notation.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.milestoneLike.music">
               <desc>groups milestone-style elements found in
      music notation.</desc>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <macroSpec type="pe" ident="macro.musicPart">
               <desc>groups elements that may appear as part of a
      music element.</desc>
               <content>
                  <rng:optional>
                     <rng:ref name="model.frontLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:choice>
                        <rng:ref name="body"/>
                        <rng:ref name="group"/>
                     </rng:choice>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.backLike"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <classSpec type="model" ident="model.partLike">
               <desc>groups elements that represent a separate
      performer part.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.partsLike">
               <desc>groups elements that group separate
      performer parts.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.scoreLike">
               <desc>groups elements that represent a
      score.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.scoredefLike">
               <desc/>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.sectionLike">
               <desc>groups elements that represent a segment of
      music notation.</desc>
               <classes>
                  <memberOf key="model.sectionPart"/>
                  <memberOf key="model.scorePart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.staffLike">
               <desc>groups elements that function like
      staves.</desc>
               <classes>
                  <memberOf key="model.measurePart"/>
                  <memberOf key="model.sectionPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.staffdefLike">
               <desc>groups elements that permit declaration of
      staff properties.</desc>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.staffgrpLike">
               <desc>groups elements that permit declaration of
      staff group properties.</desc>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.nameLike.agent">
               <desc>groups elements which contain names of
      individuals or corporate bodies.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.nameLike.geogname">
               <desc>groups geographic name
      elements.</desc>
               <classes>
                  <memberOf key="model.pubstmtPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.nameLike.place">
               <desc>groups place name and repository
      elements.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.nameLike.label">
               <desc>groups elements that serve as stylistic
      labels.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.figureLike">
               <desc>groups elements representing or containing
      graphic information such as an illustration or figure.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.captionLike">
               <desc>groups elements that contain the text of a
      caption or other text displayed along with a figure.</desc>
               <classes/>
            </classSpec>
            <macroSpec type="pe" ident="macro.availabilityPart">
               <desc>groups elements that may appear as part of a
      description of the availability of and access to a bibliographic
      item.</desc>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="acqsource"/>
                     <rng:zeroOrMore>
                        <rng:ref name="accessdesc"/>
                        <rng:optional>
                           <rng:ref name="price"/>
                        </rng:optional>
                     </rng:zeroOrMore>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="userestrict"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="sysreq"/>
                  </rng:optional>
               </content>
            </macroSpec>
            <classSpec type="model" ident="model.biblPart">
               <desc>groups elements that may appear as part of a
      bibliographic description.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.editorialdeclPart">
               <desc>groups elements that may appear as part of a
      description of the editorial process applied to the encoding of
      notation.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.encodingPart">
               <desc>groups elements that may appear as part of
      information regarding the encoding process.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.locrefLike">
               <desc>groups elements used for purposes of
      location and reference.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.ptrLike">
               <desc>groups empty elements used for purposes of
      location and reference.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.measurementLike">
               <desc>groups elements that represent a
      measurement.</desc>
               <classes>
                  <memberOf key="model.textphraseLike"/>
                  <memberOf key="model.textphraseLike.limited"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.lyricsLike">
               <desc>groups elements that represent sung
      text.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.measurePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.sylLike">
               <desc>groups elements that contain a lyric
      syllable.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.verseLike">
               <desc>groups elements that contain a lyric
      verse.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.ornamentLike.cmn">
               <desc>groups CMN ornament
      elements.</desc>
               <classes>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.syllableLike">
               <desc>groups elements that accommodate neumed
      text.</desc>
               <classes>
                  <memberOf key="model.staffPart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.neumeModifierLike">
               <desc>groups elements that modify neume-like
      features.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.neume">
               <desc>groups event elements that occur in neume
      notation.</desc>
               <classes>
                  <memberOf key="model.eventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.mensural">
               <desc>groups event elements that occur in mensural
      notation.</desc>
               <classes>
                  <memberOf key="model.eventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.measureLike">
               <desc>groups measure-like
      elements.</desc>
               <classes>
                  <memberOf key="model.sectionPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.ossiaLike">
               <desc>groups elements that function like
      ossia.</desc>
               <classes>
                  <memberOf key="model.measurePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.controleventLike.instruments">
               <desc>groups control event elements that are
      instrument specific.</desc>
               <classes>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.controleventLike.cmn">
               <desc>groups control events that appear in CMN
      notation.</desc>
               <classes>
                  <memberOf key="model.controleventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.cmn">
               <desc>groups events that appear in CMN
      notation.</desc>
               <classes>
                  <memberOf key="model.eventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.eventLike.cmn.measureFilling">
               <desc>groups events that appear in CMN notation
      and that completely fill a measure.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.chordtableLike">
               <desc>groups elements that group playable chord
      definitions.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.harmLike">
               <desc>groups elements that record
      harmony.</desc>
               <classes>
                  <memberOf key="model.controleventLike"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.graphicprimitiveLike">
               <desc>groups elements that function as drawing
      primitives.</desc>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.symboltableLike">
               <desc>groups elements that group symbol
      definitions.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.appLike">
               <desc>groups elements that contain a critical
      apparatus entry.</desc>
               <classes>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.midiLike">
               <desc>groups elements which group MIDI-like
      elements.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.measurePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.frontPart">
               <desc>groups elements that may appear as part of
      front matter.</desc>
               <classes>
                  <memberOf key="model.physdescPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.transcriptionLike">
               <desc>groups elements used for editorial
      transcription of pre-existing source materials.</desc>
               <classes>
                  <memberOf key="model.paracontentPart"/>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.editLike">
               <desc>groups elements for editorial interventions
      that may be useful both in transcribing and in
      authoring.</desc>
               <classes>
                  <memberOf key="model.paracontentPart"/>
                  <memberOf key="model.Incl"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.choicePart">
               <desc>groups elements that may appear as part of
      the content of a choice element.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.facsimileLike">
               <desc>groups non-textual elements which may appear
      together with a header and a text to constitute an MEI
      document.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.alignLike">
               <desc>groups elements that are used for temporal
      alignment.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.headerPart">
               <desc>groups elements that may appear as part of
      the MEI header.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.physdescPart">
               <desc>groups elements that may appear as part of
      the physical description of a bibliographic item.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.profiledescPart">
               <desc>groups elements that may appear as part of
      the profile description.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.pubstmtPart">
               <desc>groups elements that may appear as part of
      the publication statement for a bibliographic item.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.textphraseLike">
               <desc>Phrase-level text
      elements.</desc>
               <classes>
                  <memberOf key="model.paracontentPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.textphraseLike.limited">
               <desc>groups textual elements that occur as part
      of the representation of the score, as opposed to the textual matter which
      accompanies it. This class is equivalent to the model.textphraseLike class
      without the pb element.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.paracontentPart">
               <desc>groups elements which may appear as part of
      the paragraph content model. A paragraph may contain inline elements and
      all the other block-level elements except lg and itself. The
      model.textphrase and model.edit classes must be declared prior to this
      class.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.textcomponentLike">
               <desc>groups block-level text
      elements.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.Incl">
               <desc>groups elements that may appear between as
      well as within MEI structural elements.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.clefchangePart">
               <desc>groups elements that contain information
      regarding changes of clef.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.staffdefPart">
               <desc>groups elements that may appear more than
      once in the declaration of staff features.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.eventLike">
               <desc>groups elements that function as notated
      events. Sometimes referred to as "logical" events. The mrest, mrpt,
      mspace, multirest, and multirpt elements are not included in this list
      since in the measure element's content model they are alternatives to the
      elements listed here. They remain, however, part of the att.events
      class.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.controleventLike">
               <desc>groups elements that function as control
      events; that is, those events that modify or otherwise depend on the
      existence of notated events.</desc>
               <classes>
                  <memberOf key="model.layerPart"/>
                  <memberOf key="model.syllablePart"/>
                  <memberOf key="model.staffPart"/>
                  <memberOf key="model.measurePart"/>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.layerPart">
               <desc>groups notated events at the layer
      level.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.syllablePart">
               <desc>groups elements that may appear as part of
      content of a syllable.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.staffPart">
               <desc>groups elements that may appear as part of
      the content of a staff.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.measurePart">
               <desc>groups elements that may appear as part of a
      measure.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.sectionPart">
               <desc>groups elements that may appear as part of a
      section.</desc>
               <classes>
                  <memberOf key="model.rdgPart"/>
               </classes>
            </classSpec>
            <classSpec type="model" ident="model.scorePart">
               <desc>groups elements that may appear as part of a
      score.</desc>
               <classes/>
            </classSpec>
            <classSpec type="model" ident="model.rdgPart">
               <desc>groups elements that may appear as part of a
      textual variant.</desc>
               <classes/>
            </classSpec>
            <!--****-->
<!--Defintion of Model Classes-->
<!--Number of definitions found in original RNG: 110-->
<!--****-->
<elementSpec ident="abbr">
               <desc>abbreviation ― A generic element for a
          shortened form of a word, including an acronym. The type attribute may
          be used to classify the abbreviation according to some convenient
          typology. Sample values include: suspension - the abbreviation
          provides the first letter(s) of the word or phrase, omitting the
          remainder; contraction - the abbreviation omits some letter(s) in the
          middle; brevigraph - the abbreviation comprises a special symbol or
          mark; superscription - the abbreviation includes writing above the
          line; acronym - the abbreviation comprises the initial letters of the
          words of a phrase; title - the abbreviation is for a title of address
          (Dr, Ms, Mr, ...); organization - the abbreviation is for the name of
          an organization; geographic - the abbreviation is for a geographic
          name. This tag is the mirror image of the &lt;expan&gt; tag;
          both allow the encoder to transcribe both an abbreviation and its
          expansion. In &lt;abbr&gt;, however, the original is
          transcribed as the content of the element and the expansion as an
          attribute value; &lt;expan&gt; reverses this. The choice
          between the two is up to the user. The &lt;abbr&gt; tag is not
          required; if appropriate, the encoder may transcribe abbreviations in
          the source text silently, without tagging them. If abbreviations are
          not transcribed directly but expanded silently, then the MEI header
          should so indicate. The cert attribute signifies the degree of
          certainty ascribed to the expansion of the abbreviation. The expan
          attribute gives an expansion of the abbreviation. The resp attribute
          contains an ID reference to an element containing the name of the
          editor or transcriber responsible for supplying the expansion of the
          abbreviation.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.editorialLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="expan" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="address">
               <desc>address ― A postal
          address.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.addressLike"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="addressline"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="addressline">
               <desc>addressline ― Single line of a postal
          address. This element may be repeated as many times as necessary to
          enter all available lines of an address.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="anchoredtext">
               <desc>anchoredtext ― Page-anchored text. The
          content model here is similar to paragraph without model.textcomponent
          and &lt;pb&gt; sub-elements. If the startid attribute is
          present, then the xy coordinates are relative to the xy coordinates of
          the referenced element. Otherwise, they are assumed to be absolute
          page coordinate references.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
                  <memberOf key="model.graphicprimitiveLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="annot">
               <desc>annotation ― Provides a short statement
          explaining the text or indicating the basis for an assertion. It is
          used for both general comments and for an annotation of the musical
          text. &lt;annot&gt; provides a way to group participating
          *events* and/or *control events*, the notes that form a descending
          bass line or phrase marks, for example, and provide a label for or
          comment regarding the group. A list of event IDs may be given in the
          plist attribute. An editorial or analytical comment or observation,
          encoded elsewhere, such as in the front or back matter, in score text
          elements, or in an external document may be pointed to using the
          link.common, link.internal, or link.external attributes.
          Alternatively, the observation may be included directly within the
          &lt;annot&gt; element. The &lt;annot&gt; element,
          along with other elements with attributes from the att.link.external
          class, may also be used to link/synchronize elements within the MEI
          file to external media such as images or sound recordings. The ID of
          the MEI element(s) to be linked from should be encoded in the plist
          attribute while the link to the external media may be encoded in the
          href or entityref attributes or in the body of the annotation using
          &lt;extref&gt; or &lt;extptr&gt; elements. The
          starting point of the annotation may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute, while the ending point
          may be recorded by either a dur, dur.ges or endid
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.annot"/>
                  <memberOf key="att.vis.annot"/>
                  <memberOf key="att.ges.annot"/>
                  <memberOf key="att.anl.annot"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="model.annotLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="bibl">
               <desc>bibliographic reference ― Provides a
          citation for a published work. &lt;bibref&gt; may contain a
          mix of text and more specific elements such as &lt;title&gt;,
          &lt;edition&gt;, &lt;persname&gt;, and
          &lt;corpname&gt;. This element may also function as a
          hypertext reference to an external electronic resource. Do not confuse
          this element with &lt;ref&gt;, which is an internal link from
          one place in the MEI document to another place in the same
          document.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="model.biblLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.biblPart"/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="date">
               <desc>date ― A date in any
          format.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.date"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.dateLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="edition">
               <desc>edition ― The edition designation is a
          word or text phrase that normally indicates a difference in either
          content or form between the item being described and a related item
          previously issued by the same publisher/distributor (e.g. 2nd edition,
          version 2.0, etc.), or simultaneously issued by either the same
          publisher/distributor or another publisher/distributor (e.g. large
          print edition, British edition, etc.).</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.editionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="expan">
               <desc>expansion ― Contains the expansion of an
          abbreviation. The type attribute may be used to classify the
          abbreviation according to some convenient typology. This element is
          the mirror image of &lt;abbr&gt;. Both allow the encoder to
          transcribe both an abbreviation and its expansion. In
          &lt;abbr&gt;, however, the original is transcribed as the
          content of the element and the expansion as an attribute value;
          &lt;expan&gt; reverses this. The choice between the two
          elements is up to the user. If appropriate, the encoder may expand
          abbreviations in the source text silently, without tagging them. If
          this is done, the MEI header should indicate this has been done. The
          abbr attribute gives the abbreviation in its unexpanded form. The cert
          attribute signifies the degree of certainty ascribed to the expansion
          of the abbreviation. The resp attribute contains an ID reference to an
          element containing the name of the editor or transcriber responsible
          for supplying the expansion of the abbreviation held as the content of
          the &lt;expan&gt; element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.editorialLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="abbr" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="figdesc">
               <desc>figure description ― Contains a brief
          prose description of the appearance or content of a graphic figure,
          for use when documenting an image without displaying it. Best practice
          suggests the use of controlled vocabulary. Don't confuse this element
          with a figure caption. A caption is text primarily intended for
          display with an illustration. It may or may not function as a
          description of the illustration.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.graphicprimitiveLike_alternation"/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.annotLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="fw">
               <desc>forme work ― This element is intended
          for capture of header/footer material that is non-repeating; that is,
          it occurs on isolated pages. For running headers and footers use
          pgheadN and pgfootN elements. Auto-generated page numbers may be
          included by using a processing instruction.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.metaLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="graphic">
               <desc>graphic ― Indicates the location of an
          inline graphic, illustration, or figure.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="model.graphicLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="height" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="unit" usage="opt"/>
                  <attDef ident="width" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="identifier">
               <desc>identifier ― Bibliographic, e.g.,
          International Standard Book/Music Number, Library of Congress Control
          Number, publisher's number, plate number, or personal
          identifier.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.identifierLike"/>
                  <memberOf key="model.pubstmtPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lb">
               <desc>line break ― An empty formatting element
          that forces text to begin on a new line. The n attribute should be
          used to record a label for the line, i.e., most likely a line number.
          See comment on &lt;verse&gt; element for description of func
          attribute. Do not confuse this element with the &lt;sb&gt;
          element, which performs a similar function for musical
          notation.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.lbLike"/>
                  <memberOf key="model.milestoneLike.text"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="line"/>
                        <valItem ident="group"/>
                     </valList>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="name">
               <desc>name ― Contains the name of an entity
          that is difficult to tag more specifically as a
          &lt;corpname&gt;, &lt;geogname&gt;,
          &lt;persname&gt;, or &lt;title&gt;. The
          &lt;name&gt; element may be used in place of the more specific
          elements when it is not known what kind of name is being described or
          when a high degree of precision is not necessary. For example, the
          &lt;name&gt; element might be used when it is not clear
          whether the name "Bach" refers to a person or a geographic feature.
          The &lt;name&gt; element may be used for an individual, such
          as 'Henry VIII, King of England'; a corporate body, such as 'The
          Beatles'; a geographical place; or a generative mechanical process.
          When name parts are needed, use &lt;name&gt; sub-elements. The
          recommended values for the type attribute are: pers, corp, place,
          process. The &lt;date&gt; sub-element is available within
          &lt;name&gt; in order to record any dates, associated with the
          name, i.e., birth and death in the case of persons or creation and
          dissolution in the case of a corporate entity or
          place.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.nameLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="num">
               <desc>number ― Numeric information in any form
          occurring in text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.numLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="unit" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="p">
               <desc>paragraph ― One or more text phrases
          that form a logical prose passage. A paragraph is usually
          typographically distinct: The text usually begins on a new line and
          the first letter of the content is often indented, enlarged, or
          both.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.pLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.paracontentPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pb">
               <desc>page break ― The n attribute records the
          page number in the source. It need not be an integer, e.g. 'iv', or
          'p17-3'. The logical page number can be calculated by counting
          previous &lt;pb&gt; ancestor elements. When used in a score
          context, a page break implies an accompanying system
          break.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="model.milestoneLike.text"/>
                  <memberOf key="model.pbLike"/>
               </classes>
               <content>
                  <rng:ref name="macro.metaLike"/>
               </content>
               <attList>
                  <attDef ident="func" usage="opt">
                     <valList type="closed">
                        <valItem ident="verso"/>
                        <valItem ident="recto"/>
                     </valList>
                  </attDef>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="pgdesc">
               <desc>page description ― Contains a brief
          prose description of the appearance or description of the content of a
          physical page. Best practice suggests the use of controlled
          vocabulary. Don't confuse this element with a figure caption. A
          caption is text primarily intended for display with an illustration.
          It may or may not function as a description of the
          illustration.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.metaLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.graphicprimitiveLike_alternation"/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.annotLike"/>
                        <rng:ref name="model.locrefLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rend">
               <desc>rend ― A formatting element indicating
          special visual rendering, e.g., bold or italicized, of a text word or
          phrase. When an entire element should be rendered in a special way, a
          style sheet function should be used instead of the
          &lt;rend&gt; element.</desc>
               <classes>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="model.rendLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="altrend" usage="opt"/>
                  <attDef ident="halign" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="justify"/>
                     </valList>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.TEXTRENDITION"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rotation" usage="opt">
                     <datatype>
                        <rng:ref name="data.DEGREES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="valign" usage="opt">
                     <valList type="closed">
                        <valItem ident="top"/>
                        <valItem ident="middle"/>
                        <valItem ident="bottom"/>
                        <valItem ident="baseline"/>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="repository">
               <desc>repository ― Institution or agency which
          holds a bibliographic item. Sub-units of the institution may be marked
          with nested &lt;repository&gt; elements.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.repositoryLike"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stack">
               <desc>stacked text ― An inline table with a
          single column.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.rendLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="delim" usage="opt"/>
                  <attDef ident="align" usage="opt">
                     <valList type="closed">
                        <valItem ident="left"/>
                        <valItem ident="right"/>
                        <valItem ident="center"/>
                        <valItem ident="rightdigit"/>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="title">
               <desc>title ― Title of a bibliographic entity.
          The type attribute may be used to classify the title according to some
          convenient typology. Sample values include: main (main title),
          subordinate (subtitle, title of part), abbreviated (abbreviated form
          of title), alternative (alternate title by which the work is also
          known), translated (translated form of title), uniform (collective
          title). The type attribute is provided for convenience in analysing
          titles and processing them according to their type; where such
          specialized processing is not necessary, there is no need for such
          analysis, and the entire title, including subtitles and any parallel
          titles, may be enclosed within a single &lt;title&gt; element.
          Title parts may be encoded in &lt;title&gt;
          sub-elements</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.titleLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="level" usage="opt">
                     <valList type="closed">
                        <valItem ident="a"/>
                        <valItem ident="m"/>
                        <valItem ident="j"/>
                        <valItem ident="s"/>
                        <valItem ident="u"/>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="clef">
               <desc>clef ― This element must be used instead
          of clef.* attributes when a staff employs multiple simultaneous
          clefs.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.anl.clef"/>
                  <memberOf key="att.ges.clef"/>
                  <memberOf key="att.log.clef"/>
                  <memberOf key="att.vis.clef"/>
                  <memberOf key="model.clefchangePart"/>
                  <memberOf key="model.staffdefPart"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_clef_position" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:clef[ancestor::staffdef[@lines]]">
                        <sch:let name="staff" value="ancestor::staffdef/@n"/>
                        <sch:assert test="number(@line) &lt;= number(ancestor::staffdef[@n=$staff and @lines][1]/@lines)">The clef position must be less than or equal to the number of lines
          on the staff.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="check_clef_position" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:clef[ancestor::staffdef[not(@lines)]]">
                        <sch:let name="staff" value="ancestor::staffdef/@n"/>
                        <sch:assert test="number(@line) &lt;= number(preceding::staffdef[@n=$staff and @lines][1]/@lines)">The clef position must be less than or equal to the number of lines
          on the staff.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="custos">
               <desc>custos ― The symbol placed at the end of
          a staff to indicate the first note of the next staff. Sometimes called
          a "direct".</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.custos"/>
                  <memberOf key="att.vis.custos"/>
                  <memberOf key="att.ges.custos"/>
                  <memberOf key="att.anl.custos"/>
                  <memberOf key="model.eventLike.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_custostarget" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:custos[@target]">
                        <sch:let name="thistarget" value="@target"/>
                        <sch:assert test="@target = following::note[@xml:id=$thistarget]/@xml:id or           @target = following::nota[@xml:id=$thistarget]/@xml:id">The value of @target must be the ID of a note or nota
          element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="clefchange">
               <desc>clef change ― Mid-measure clef change.
          Coming as it does, in the middle of a measure, a clef change is an
          event.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.event"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.clefchange"/>
                  <memberOf key="att.vis.clefchange"/>
                  <memberOf key="att.ges.clefchange"/>
                  <memberOf key="att.anl.clefchange"/>
                  <memberOf key="model.eventLike.common"/>
               </classes>
               <content>
                  <rng:ref name="model.clefchangePart_sequenceOptionalRepeatable"/>
               </content>
               <constraintSpec ident="check_clef_position_clefchange" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:clefchange[@line]">
                        <sch:let name="staff" value="ancestor::staff/@n"/>
                        <sch:let name="staffpos" value="count(ancestor::staff/preceding-sibling::staff) + 1"/>
                        <sch:assert test="number(@line) &lt;= number(preceding::staffdef[@n=$staff and @lines][1]/@lines) or          number(@line) &lt;= number(preceding::staffdef[@n=$staffpos and @lines][1]/@lines)">The clef position must be less than or equal to the number of lines
          on the staff.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="pad">
               <desc>pad ― An indication of extra visual
          space between notational elements.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.pad"/>
                  <memberOf key="att.vis.pad"/>
                  <memberOf key="att.ges.pad"/>
                  <memberOf key="att.anl.pad"/>
                  <memberOf key="model.eventLike.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="space">
               <desc>space ― A placeholder used to fill an
          incomplete measure, layer, etc. most often so that the combined
          duration of the events equals the number of beats in the
          measure.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.space"/>
                  <memberOf key="att.vis.space"/>
                  <memberOf key="att.ges.space"/>
                  <memberOf key="att.anl.space"/>
                  <memberOf key="model.eventLike.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="dir">
               <desc>directive ― A text expression that is on
          the score (typically above, below, or between staves), but not on the
          staff and not encoded elsewhere in more specific elements, such as
          &lt;tempo&gt; or &lt;dynam&gt;. Examples include text
          strings, such as 'affettuoso' or fingerings and music symbols, such as
          segno and coda symbols, fermatas over a barline, etc. Unlike generic
          text elements, directives can be control elements. That is, they can
          be used as pointers to other events. The starting point of the
          directive may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute, while the ending point may be recorded by either
          a dur, dur.ges or endid attribute. It is a semantic error not to
          specify a starting point attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.dir"/>
                  <memberOf key="att.vis.dir"/>
                  <memberOf key="att.ges.dir"/>
                  <memberOf key="att.anl.dir"/>
                  <memberOf key="model.controleventLike.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.graphicprimitiveLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:dir">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="dynam">
               <desc>dynamic ― Records instantaneous or
          continuous textual dynamics, e.g. 'p', 'mf', or 'cresc. poco a poco'.
          See Read, p. 250-255. The &lt;hairpin&gt; element should be
          used for graphical dynamic markings. The starting point of the dynamic
          marking may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute, while the ending point may be recorded by either
          a dur, dur.ges or endid attribute. It is a semantic error not to
          specify a starting point attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.dynam"/>
                  <memberOf key="att.vis.dynam"/>
                  <memberOf key="att.ges.dynam"/>
                  <memberOf key="att.anl.dynam"/>
                  <memberOf key="model.controleventLike.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:dynam">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="phrase">
               <desc>phrase ― Historically, a phrase mark
          indicated a "unified melodic idea", while the term "slur" was used for
          two-note legato patterns. (Read, p. 265). Nowadays, however, "phrase"
          and "slur" are often used interchangably (Read, p. 265-266), since the
          visual rendition of the two concepts is the same. MEI provides two
          distinct elements so that those users wishing to maintain a
          distinction for historical reasons may do so. If the user does not
          want to maintain the distinction, then the more generic
          &lt;slur&gt; element should be employed. The starting point of
          the phrase may be indicated by either a tstamp, tstamp.ges,
          tstamp.real or startid attribute, while the ending point may be
          recorded by either a dur, dur.ges or endid attribute. It is a semantic
          error not to specify one starting and one ending type of attribute.
          Either place, bulge, or bezier attributes may be used to record the
          curvature of the phrase.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.phrase"/>
                  <memberOf key="att.vis.phrase"/>
                  <memberOf key="att.ges.phrase"/>
                  <memberOf key="att.anl.phrase"/>
                  <memberOf key="model.controleventLike.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:phrase">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="tempo">
               <desc>tempo ― Text and symbols descriptive of
          tempo, mood, or style, e.g., "allarg.", "a tempo", "cantabile",
          "Moderato", "[qtrnote]=60", "Moderato [qtrnote] =60"). Both
          "instantaneous" and "continuous" tempo markings may be encoded using
          this element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.tempo"/>
                  <memberOf key="att.vis.tempo"/>
                  <memberOf key="att.ges.tempo"/>
                  <memberOf key="att.anl.tempo"/>
                  <memberOf key="model.controleventLike.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.graphicprimitiveLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mensur">
               <desc>mensuration ― The &lt;mensur&gt;
          element is provided for the encoding of mensural notation. It collects
          information about the metrical relationship between a note value and
          the next smaller value.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mensur"/>
                  <memberOf key="att.vis.mensur"/>
                  <memberOf key="att.ges.mensur"/>
                  <memberOf key="att.anl.mensur"/>
                  <memberOf key="model.staffdefPart"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="proport">
               <desc>proportion ― The
          &lt;proportion&gt; element is provided for the encoding of
          mensural notation. It allows the description of note durations as
          arithmetic ratios. While mensuration refers to the normal
          relationships between note durations, proportion affects the relations
          of the note durations to the tactus.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.proport"/>
                  <memberOf key="att.vis.proport"/>
                  <memberOf key="att.ges.proport"/>
                  <memberOf key="att.anl.proport"/>
                  <memberOf key="model.staffdefPart"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="ligature">
               <desc>ligature ― The &lt;ligature&gt;
          element is provided for the encoding of mensural notation where
          multiple notes are represented by joined symbols.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.ligature"/>
                  <memberOf key="att.vis.ligature"/>
                  <memberOf key="att.ges.ligature"/>
                  <memberOf key="att.anl.ligature"/>
                  <memberOf key="model.eventLike.neume-mensural"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.layerPart_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mensurchange">
               <desc>mensuration change ― Use of the
          &lt;mensurchange&gt; element indicates a change of
          mensuration; that is, the relationship between note duration
          values.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.eventLike.neume-mensural"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="mensur"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="proportchange">
               <desc>proportion change ― Use of the
          &lt;proportchange&gt; element indicates a change of propotion;
          that is, the relationship between note duration values and the
          tactus.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.eventLike.neume-mensural"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="proport"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="artic">
               <desc>articulation ― This element provides an
          alternative to the artic attributes on the &lt;note&gt; and
          &lt;chord&gt; elements. The element should be used when when
          specific display info, such as size or color, needs to be recorded for
          the articulation.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.log.artic"/>
                  <memberOf key="att.vis.artic"/>
                  <memberOf key="att.ges.artic"/>
                  <memberOf key="att.anl.artic"/>
                  <memberOf key="model.noteModifierLike"/>
                  <memberOf key="model.neumeModifierLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keyaccid">
               <desc>key accidental ― Accidental in a key
          signature. It is a semantic error not to provide either the x and y
          pair of attributes or the staffloc attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.keyaccidLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="x_and_y_or_staffloc_attributes_required_on_keyaccid"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:keyaccid">
                        <sch:assert test="(@x and @y and not(@staffloc)) or (@staffloc and not(@x or @y))">Must have either x and y attributes or staffloc attribute
        </sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="enclose" usage="opt">
                     <datatype>
                        <rng:ref name="data.ENCLOSURE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="implicit"/>
                        <valItem ident="explicit"/>
                     </valList>
                  </attDef>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="req">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
                  <attDef ident="staffloc" usage="opt">
                     <datatype>
                        <rng:ref name="data.STAFFLOC"/>
                     </datatype>
                  </attDef>
                  <attDef ident="value" usage="req">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="keysig">
               <desc>key signature ― This element may be used
          as an alternative to the key.* attributes (especially key.sig.mixed)
          on scoredef and staffdef.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.keysigLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.keyaccidLike"/>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="mode" usage="opt">
                     <datatype>
                        <rng:ref name="data.MODE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="opt">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="accid">
               <desc>accidental ― This element provides an
          alternative to the acci attributes on the &lt;note&gt;
          element. The element should be used when specific display info, such
          as size or color, needs to be recorded for the accidental. The func
          attribute can be used to differentiate different functions, such as
          'cautionary' or 'editorial'.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typography"/>
                  <memberOf key="att.log.accid"/>
                  <memberOf key="att.vis.accid"/>
                  <memberOf key="att.ges.accid"/>
                  <memberOf key="att.anl.accid"/>
                  <memberOf key="model.noteModifierLike"/>
                  <memberOf key="model.neumeModifierLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="barline">
               <desc>barline ― The &lt;barline&gt;
          element may be used instead of the &lt;measure&gt; element. It
          has the same attributes as &lt;measure&gt;.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.log.barline"/>
                  <memberOf key="att.vis.barline"/>
                  <memberOf key="att.ges.barline"/>
                  <memberOf key="att.anl.barline"/>
                  <memberOf key="model.eventLike.mensural-cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_barlinetaktplace" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:barline[@taktplace]">
                        <sch:let name="staff" value="ancestor::staff/@n"/>
                        <sch:let name="staffpos" value="count(ancestor::staff/preceding-sibling::staff) + 1"/>
                        <sch:assert test="number(@taktplace) &lt;= number(2 * preceding::staffdef[@n=$staff and @lines][1]/@lines) or         number(@taktplace) &lt;= number(2 * preceding::staffdef[@n=$staffpos and @lines][1]/@lines)"/>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="dot">
               <desc>dot ― May be used for dots of
          augmentation or division.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.dot"/>
                  <memberOf key="att.vis.dot"/>
                  <memberOf key="att.ges.dot"/>
                  <memberOf key="att.anl.dot"/>
                  <memberOf key="model.noteModifierLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="keychange">
               <desc>key change ― </desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.eventLike.mensural-cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.keyaccidLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="back">
               <desc>back ― Back matter such as indexes,
          advertisements, etc.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.backLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text_alternation"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:ref name="model.divLike"/>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="blockquote">
               <desc>blockquote ― A formatting element that
          designates an extended quotation; that is, a passage attributed to a
          source external to the text. The quotation is normally set off from
          the text by spacing or other typographic distinction. The source for
          the quote may be included in the optional &lt;bibl&gt;
          sub-element. Use &lt;rend&gt; for words that are enclosed in
          quotation marks for emphasis or for a short quoted phrase that occurs
          within a line of text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.quoteLike"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.textcomponentLike_alternation"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="model.biblLike"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="div">
               <desc>division ― Major structural division of
          text, such as a preface, chapter or section. Often, the
          &lt;head&gt; element identifies the &lt;div&gt;'s
          purpose.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.divLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text_alternation"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.divLike"/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="front">
               <desc>front ― Bundles prefatory text found
          before the start of the musical text. &lt;titlepage&gt; may be
          used to transcribe the item's title page. Other front matter
          structures, such as a preface, dedication, or table of contents, may
          be encoded as textual divisions; that is, as &lt;div&gt;s,
          with an optional &lt;head&gt; sub-element describing the
          nature of the division. The &lt;pb&gt; element is allowed here
          in order to accommodate page images, e.g. cover, endpapers, etc.
          before and after the actual textual matter.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.frontLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text_alternation"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.divLike"/>
                        <rng:ref name="model.frontPart"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.milestoneLike.text_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="head">
               <desc>heading ― Contains any heading, for
          example, the title of a section of text, or the heading of a list.
          When &lt;head&gt; is used, it should be the first sub-element,
          followed by one or more other elements.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.headLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="item">
               <desc>item ― Single item in a
          &lt;list&gt;.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="l">
               <desc>line ― Contains a single line of text.
          The n attribute should be used to record a label for the line, i.e.,
          most likely a line number. Do not confuse this element with the
          &lt;line&gt; element, which is used for graphical
          lines.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.lLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lg">
               <desc>line group ― Usually contains a lyric
          verse although it may be used for any section of text that is
          organized as a group of lines.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.lgLike"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="model.lLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="list">
               <desc>list ― A formatting element that
          contains as series of items separated from one another and arranged in
          a linear, of vertical sequence.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.listLike"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="model.headLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="item"/>
                  </rng:oneOrMore>
               </content>
               <attList>
                  <attDef ident="form" usage="opt">
                     <valList type="closed">
                        <valItem ident="simple"/>
                        <valItem ident="marked"/>
                        <valItem ident="ordered"/>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="table">
               <desc>table ― Visual layout in tabular
          form.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.tableLike"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="model.captionLike"/>
                  </rng:optional>
                  <rng:oneOrMore>
                     <rng:ref name="tr"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="td">
               <desc>table data ― Designates a table cell
          that contains data as opposed to a cell that contains column or row
          heading information. The &lt;td&gt; attributes control cell
          spanning.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="colspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rowspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="th">
               <desc>table header ― Designates a table cell
          containing column or row heading information as opposed to one
          containing data. The &lt;td&gt; attributes control cell
          spanning.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="colspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rowspan" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="tr">
               <desc>table row ― A formatting element that
          contains one or more &lt;td&gt; or &lt;th&gt; elements
          (cells) in a &lt;table&gt;. A cell is the intersection of a
          row and a column. The precise rendition of the table and its cells
          should be specified in a style sheet.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.xy"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="th"/>
                        <rng:ref name="td"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="corpname">
               <desc>corporate name ― Identifies an
          organization or group of people that acts as a single entity. Examples
          include names of associations, institutions, business firms,
          non-profit enterprises, governments, government agencies, projects,
          programs, religious bodies, churches, conferences, athletic contests,
          exhibitions, expeditions, fairs, and ships. Secondary name parts may
          be encoded in nested &lt;corpname&gt;
          sub-elements.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.nameLike.agent"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="geogname">
               <desc>geographic name ― The proper noun
          designation for a place, natural feature, or political jurisdiction.
          Examples include Black Forest; Baltimore, Maryland; and Quartier
          Latin, Paris. May contain name sub-parts in &lt;geogname&gt;
          sub-elements.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.nameLike.geogname"/>
                  <memberOf key="model.nameLike.place"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="periodname">
               <desc>period name ― A label that describes a
          period of time, such as 'Baroque' or '3rd Style
          period'.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.nameLike.label"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="persname">
               <desc>personal name ― Designation for an
          individual, including any or all of that individual's forenames,
          surnames, honorific titles, and added names. May contain name parts in
          &lt;persname&gt; sub-elements.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.nameLike.agent"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stylename">
               <desc>style name ― A label for a
          characteristic style of writing or performance, such as 'bebop' or
          'rock-n-roll'. Do not confuse this element with the
          &lt;periodname&gt; element.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.name"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.nameLike.label"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="caption">
               <desc>caption ― A label which accompanies an
          illustration or a table.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.captionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="fig">
               <desc>figure ― An
          illustration.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.xy"/>
                  <memberOf key="model.figureLike"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="caption"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="figdesc"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="extptr">
               <desc>external pointer ― An empty linking
          element that uses attributes to connect the MEI document to an
          external electronic object. Either the entityref or href attribute may
          be used to identify the external object. Don't confuse this element
          with the &lt;ptr&lt; element, which is an internal link for
          movement from one place in the MEI document to another in the same
          document.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="model.locrefLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="extref">
               <desc>external reference ― A linking element
          that can include text and sub-elements as part of its reference to an
          electronic object that is external to the MEI document. Either the
          entityref or href attribute may be used to identify the external
          object. Don't confuse this element with the &lt;ref&gt;
          element, which is an internal link for movement from one place in the
          MEI document to another in the same document.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="model.locrefLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ptr">
               <desc>pointer ― An empty internal linking
          element that uses attributes to provide for movement from one place in
          an MEI document to another place in the same document. Unlike the
          &lt;ref&gt; element, &lt;ptr&gt; cannot contain text
          or sub-elements to describe the referenced object. Don't confuse this
          element with &lt;extptr&gt; which is used to connect the MEI
          document to an external electronic object.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="model.locrefLike"/>
                  <memberOf key="model.ptrLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="ref">
               <desc>reference ― An internal linking element
          that provides for movement from one place in a MEI document to another
          point in the same document. Unlike the &lt;ptr&gt; element,
          &lt;ref&gt; may contain text and sub-elements to describe the
          destination. Don't confuse this element with &lt;extref&gt;
          which provides for linking to an electronic object that is external to
          the MEI document.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="model.locrefLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="body">
               <desc>body ― This element contains the actual
          music data. When the music can be broken into high-level, discrete,
          linear segments, such as movements in the case of a symphony, there
          may be multiple mdiv elements within this element. This is the highest
          level indication of the structure of the music.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.musicPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.mdivLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ending">
               <desc>ending ― Alternative ending. The
          scoredef element is allowed so that an ending may have its own
          meta-data without the overhead of child &lt;section&gt;s. Div
          sub-elements are not allowed within ending in order to avoid
          collisions with the brackets that are usually displayed over endings.
          Endings may *not* contain other ending elements.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.anl.ending"/>
                  <memberOf key="att.ges.ending"/>
                  <memberOf key="att.log.ending"/>
                  <memberOf key="att.vis.ending"/>
                  <memberOf key="model.endingLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.sectionPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="group">
               <desc>group ― Enables the gathering of
          multiple documents into a single file. Because its model contains the
          music element, each of the documents can have its own front and back
          matter.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.musicPart"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:ref name="music"/>
                     <rng:ref name="group"/>
                  </rng:choice>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="music"/>
                        <rng:ref name="group"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="grpsym">
               <desc>group symbol ― i.e., a brace or bracket.
          This element may be used instead of the staffgrp element's symbol
          attribute when exact placement or editorial details for the brace must
          be recorded.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.grpsym"/>
                  <memberOf key="att.vis.grpsym"/>
                  <memberOf key="att.ges.grpsym"/>
                  <memberOf key="att.anl.grpsym"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="instrgrp">
               <desc>instrument group ― Collects MIDI
          instrument definitions.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="instrdef">
               <desc>instrument definition ― MIDI instrument
          declaration. This element provides a starting or default instrument
          declaration for a staff, a group of staves, or a layer. MIDI prog
          elements may then change the instrument as
          necessary.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.instrdefLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="midi.channel" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.duty" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instr" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.instrname" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDINAMES"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.port" usage="opt">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="midi.track" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="label">
               <desc>label ― A text string that identifies a
          staff or staff group.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.labelLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="layer">
               <desc>layer ― An independent stream of events
          on a staff. The term 'layer' in used instead of 'voice' in order to
          avoid confusion between 'voice' and 'voice leading'. The n attribute
          is used to establish a connection back to the appropriate layerdef
          element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.layer"/>
                  <memberOf key="att.vis.layer"/>
                  <memberOf key="att.ges.layer"/>
                  <memberOf key="att.anl.layer"/>
                  <memberOf key="model.layerLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.layerPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="layerdef">
               <desc>layer definition ― Container for layer
          meta-information.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.layerdef"/>
                  <memberOf key="att.vis.layerdef"/>
                  <memberOf key="att.ges.layerdef"/>
                  <memberOf key="att.anl.layerdef"/>
                  <memberOf key="model.layerdefLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mdiv">
               <desc>musical division ― The mdiv element may
          contain one or both of 2 possible views of the music. The score view
          is the traditional full and open score while the parts view contains
          each performer's view of the score; that is, his part. These 2 views
          are necessary because it is not always possible or desirable to
          generate one from the other. The score and parts elements are placed
          here and not directly within the body element because score and part
          characteristics may change from mdiv to mdiv. For example, the 2nd
          movement of a symphony may require different performing forces (and
          therefore different score and part layout) than the other movements.
          The mdiv element may be recursively nested in order to represent music
          which exhibits this kind of structure. For example, an opera is
          normally divided into acts, which are in turn divided into scenes.
          This may be represented by the following markup: &lt;mdiv&gt;
          &lt;- the opera &lt;mdiv&gt; &lt;- act I
          &lt;mdiv&gt; &lt;- scene i &lt;mdiv&gt; &lt;-
          scene ii &lt;/mdiv&gt; &lt;mdiv&gt; &lt;- act II
          &lt;mdiv&gt; &lt;- scene i &lt;mdiv&gt; &lt;-
          scene ii &lt;/mdiv&gt; &lt;/mdiv&gt;</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.mdivLike"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:group>
                        <rng:optional>
                           <rng:ref name="model.scoreLike"/>
                        </rng:optional>
                        <rng:optional>
                           <rng:ref name="model.partsLike"/>
                        </rng:optional>
                     </rng:group>
                     <rng:zeroOrMore>
                        <rng:ref name="model.mdivLike"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="part">
               <desc>part ― An alternative visual rendition
          of the score from a particular performer's point of view. Part
          elements are not used in the score to indicate voice leading. Next
          attributes on event elements should be used for this purpose. Part
          elements are useful for encoding individual parts when there is no
          score, such as early music part books, when the music has non-aligning
          barlines, when different layout, such as page turns, are needed for
          the score and parts, or for accommodating software that requires
          part-by-part encoding. When assembly of the parts into a score is
          desired and there are non-aligning barlines, barlines which indicate
          points of alignment across all the parts may be marked as
          'controlling', while non-aligning ones may be marked as
          'non-controlling'.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.part"/>
                  <memberOf key="att.vis.part"/>
                  <memberOf key="att.ges.part"/>
                  <memberOf key="att.anl.part"/>
                  <memberOf key="model.partLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.scorePart_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="parts">
               <desc>parts ― Gathers performers'
          parts.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.parts"/>
                  <memberOf key="att.vis.parts"/>
                  <memberOf key="att.ges.parts"/>
                  <memberOf key="att.anl.parts"/>
                  <memberOf key="model.partsLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.partLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pgfoot1">
               <desc>page footer 1 ― A running footer on the
          first page. This element is a specialized form of the fw element.
          Auto-generated page numbers may be indicated with a processing
          instruction. The pgheadN and pgfootN elements should *not* be used to
          encode textual notes/annotations.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.metaLike.score"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pgfoot2">
               <desc>page footer 2 ― A running header on the
          pages following the first. This element is a specialized form of the
          fw element. Auto-generated page numbers may be indicated with a
          processing instruction. The pgheadN and pgfootN elements should *not*
          be used to encode textual notes/annotations.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.metaLike.score"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pghead1">
               <desc>page header 1 ― A running header on the
          first page. This element is a specialized form of the fw element for
          capturing the table-formatted textual data that often appears on the
          first page of printed music. It may also be used for similarly
          formatted material in manuscripts. The pgheadN and pgfootN elements
          should *not* be used to encode textual notes/annotations.
          Auto-generated page numbers may be indicated with a processing
          instruction.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.metaLike.score"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pghead2">
               <desc>page header 2 ― A running header on the
          pages following the first. This element is a specialized form of the
          fw element. The pgheadN and pgfootN elements should *not* be used to
          encode textual notes/annotations. Auto-generated page numbers may be
          indicated with a processing instruction.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.metaLike.score"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sb">
               <desc>system break ― An empty formatting
          element that forces notation to begin on a new line. Do not confuse
          this element with the &lt;lb&gt; element, which performs a
          similar function for text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.sb"/>
                  <memberOf key="att.vis.sb"/>
                  <memberOf key="att.ges.sb"/>
                  <memberOf key="att.anl.sb"/>
                  <memberOf key="model.milestoneLike.music"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="custos"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="score">
               <desc>score ― Full score view of the mdiv.
          Since the measure element is optional, a score may consist entirely of
          pagebreaks, each of which points to a page image. Div elements are
          allowed preceding and following sections of music data in order to
          accommodate blocks of explanatory text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.score"/>
                  <memberOf key="att.vis.score"/>
                  <memberOf key="att.ges.score"/>
                  <memberOf key="att.anl.score"/>
                  <memberOf key="model.scoreLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.scorePart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="scoredef">
               <desc>score definition ― Container for score
          meta-information.
          </desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.scoredef"/>
                  <memberOf key="att.vis.scoredef"/>
                  <memberOf key="att.ges.scoredef"/>
                  <memberOf key="att.anl.scoredef"/>
                  <memberOf key="model.scoredefLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.alignLike"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.chordtableLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.symboltableLike"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="model.keysigLike"/>
                  </rng:optional>
                  <rng:ref name="model.metaLike.score_sequenceOptional"/>
                  <rng:optional>
                     <rng:ref name="instrgrp"/>
                  </rng:optional>
                  <rng:choice>
                     <rng:optional>
                        <rng:ref name="model.staffgrpLike"/>
                     </rng:optional>
                     <rng:optional>
                        <rng:ref name="model.staffdefLike"/>
                     </rng:optional>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="section">
               <desc>section ― Container for actual music
          data. The linking attributes are available here so that this element
          can point to external media objects or to related internal elements,
          such as annotations.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.log.section"/>
                  <memberOf key="att.vis.section"/>
                  <memberOf key="att.ges.section"/>
                  <memberOf key="att.anl.section"/>
                  <memberOf key="model.sectionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.sectionPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_expan" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:section[@expan]">
                        <sch:assert test="descendant::section|descendant::ending|descendant::rdg">Must
          have descendant section, ending, or rdg elements that can be pointed
          to.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="staff">
               <desc>staff ― The n attribute is a connection
          back to the appropriate staffdef element. If the n attribute is
          omitted, encoding order is presumed to match the staff order. Of
          course, if data is supplied for only a subset of staves, the n
          attribute must be supplied.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.staff"/>
                  <memberOf key="att.vis.staff"/>
                  <memberOf key="att.ges.staff"/>
                  <memberOf key="att.anl.staff"/>
                  <memberOf key="model.staffLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.staffPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="staffdef">
               <desc>staff definition ― Container for staff
          meta-information.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.staffdef"/>
                  <memberOf key="att.vis.staffdef"/>
                  <memberOf key="att.ges.staffdef"/>
                  <memberOf key="att.anl.staffdef"/>
                  <memberOf key="model.staffdefLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="model.keysigLike"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.instrdefLike"/>
                        <rng:ref name="model.layerdefLike"/>
                        <rng:ref name="model.staffdefPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_staffdef_n" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:staffdef">
                        <sch:let name="thisstaff" value="@n"/>
                        <sch:assert test="@n">A staffdef must have an n attribute.</sch:assert>
                        <sch:assert test="@lines or preceding::staffdef[@n=$thisstaff and @lines]">The
          first occurrence of a staff must declare the number of staff
          lines.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="check_clef_position_staffdef" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:staffdef[@clef.line and @lines]">
                        <sch:assert test="number(@clef.line) &lt;= number(@lines)">The clef
          position must be less than or equal to the number of lines on the
          staff.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="check_clef_position_staffdef" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:staffdef[@clef.line and not(@lines)]">
                        <sch:let name="thisstaff" value="@n"/>
                        <sch:let name="stafflines"
                                 value="preceding::staffdef[@n=$thisstaff and @lines][1]/@lines"/>
                        <sch:assert test="number(@clef.line) &lt;= number($stafflines)">The
          clef position must be less than or equal to the number of lines on the
          staff.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="staffgrp">
               <desc>staff group ― A group of bracketed or
          braced staves. Bracketed staff groups may contain other bracketed or
          braced staff groups or single staves. See Read, p. 35-38, examples p.
          434, 438. System is the more proper name for this concept (Read, p.
          37-38).</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.staffgrp"/>
                  <memberOf key="att.vis.staffgrp"/>
                  <memberOf key="att.ges.staffgrp"/>
                  <memberOf key="att.anl.staffgrp"/>
                  <memberOf key="model.staffgrpLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="grpsym"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.labelLike"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.instrdefLike"/>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.staffgrpLike"/>
                        <rng:ref name="model.staffdefLike"/>
                     </rng:choice>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="grpsym"/>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="no_title" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:staffgrp">
                        <sch:let name="countstaves" value="count(descendant::staffdef)"/>
                        <sch:let name="countuniqstaves" value="count(distinct-values(descendant::staffdef/@n))"/>
                        <sch:assert test="$countstaves eq $countuniqstaves"> When defining
          staffgrp(s),each staffdef must have a unique @n value. </sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="syllable">
               <desc>syllable ― Neume notation can be thought
          of as "neumed text". Therefore, the syllable element provides
          high-level organization in this repertoire.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.syllableLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.syllablePart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="ineume">
               <desc>interrupted neume ― </desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.ineume"/>
                  <memberOf key="att.vis.ineume"/>
                  <memberOf key="att.ges.ineume"/>
                  <memberOf key="att.anl.ineume"/>
                  <memberOf key="model.eventLike.neume"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.neumeModifierLike_alternation"/>
                        <rng:ref name="model.appLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.verseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="uneume">
               <desc>uninterrupted neume ― A single,
          uninterrupted neume sign. While ineume is allowed as a sub-element of
          uneume here as part of the model.eventLike.neume class, it is unlikely
          that an uninterrupted neume containing an interrupted neume is a
          meaningful construct.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.uneume"/>
                  <memberOf key="att.vis.uneume"/>
                  <memberOf key="att.ges.uneume"/>
                  <memberOf key="att.anl.uneume"/>
                  <memberOf key="model.eventLike.neume"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.neumeModifierLike_alternation"/>
                        <rng:ref name="model.appLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.verseLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="nota">
               <desc>nota ― A single pitched event in the
          mensural repertoire. The nota element is allowed to contain other
          events for situations where a single written note may be
          representative of a group of performed notes. The accid and artic
          sub-elements may be used instead of the note element's attributes when
          accid and artic represent first-class objects, e.g. when they require
          attributes, such as x and y location attributes. Similarly, the syl
          sub-element may be used instead of the syl attribute. The verse
          sub-element may be used to group text syllables by
          verse.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.nota"/>
                  <memberOf key="att.vis.nota"/>
                  <memberOf key="att.ges.nota"/>
                  <memberOf key="att.anl.nota"/>
                  <memberOf key="model.eventLike.mensural"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sylLike"/>
                        <rng:ref name="model.verseLike"/>
                        <rng:ref name="model.appLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:nota[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="pausa">
               <desc>pausa ― A rest in the mensural
          repertoire.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.pausa"/>
                  <memberOf key="att.vis.pausa"/>
                  <memberOf key="att.ges.pausa"/>
                  <memberOf key="att.anl.pausa"/>
                  <memberOf key="model.eventLike.mensural"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_pausa_line" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:pausa[@line]">
                        <sch:let name="staff" value="ancestor::staff/@n"/>
                        <sch:let name="staffpos" value="count(ancestor::staff/preceding-sibling::staff) + 1"/>
                        <sch:assert test="number(@line) &lt;= number(preceding::staffdef[@n=$staff and @lines][1]/@lines) or          number(@line) &lt;= number(preceding::staffdef[@n=$staffpos and @lines][1]/@lines)">The value of @line must be less than or equal to the number of lines
          on the staff.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:pausa[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="measure">
               <desc>measure ― "In Western notation a
          vertical line drawn through the staff to mark off metrical units.
          Hence also the metrical unit thus indicated, which in American usage
          is called 'measure'. English usage often relies on context alone to
          make the distinction clear (e.g. 'up to the double bar', 'the end of
          the bar'), but 'bar-line' is also common." (New Grove) In MEI, the
          measure element is also a linking element that uses attributes to
          connect the MEI document to an external electronic object or to
          another location within the MEI instance.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.log.measure"/>
                  <memberOf key="att.vis.measure"/>
                  <memberOf key="att.ges.measure"/>
                  <memberOf key="att.anl.measure"/>
                  <memberOf key="model.measureLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.measurePart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_measurejoin" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:measure[@join]">
                        <sch:let name="thisjoin" value="@join"/>
                        <sch:assert test="@join = //measure[@xml:id=$thisjoin]/@xml:id">The
          value of @join must be the ID of a measure element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="ossia">
               <desc>ossa ― Indicates an alternative, usually
          simpler, version of a measure *present in the source being
          transcribed*. An ossia may be treated as a substitute for the measure,
          in which case it is rendered on the current staff, or it may be
          rendered in addition to the measure's contents, in which case it is
          rendered above the staff on a reduced-size staff.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.ossia"/>
                  <memberOf key="att.vis.ossia"/>
                  <memberOf key="att.ges.ossia"/>
                  <memberOf key="att.anl.ossia"/>
                  <memberOf key="model.ossiaLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.measurePart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="beam">
               <desc>beam ― A container for a series of
          explicitly beamed events (Read, p. 80-94) which begins and ends
          entirely within a measure. For beams that cross the barline, use the
          beamspan element. Beaming may be indicated for an entire score, part
          or section by using the beamgroup attribute on these elements.
          Secondary beams may be broken explicitly using the breaksec attribute
          on the notes or chords under the beam. Stem direction determines
          whether beams are centered between notes with alternating stems (Read,
          p. 88-89).</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.beam"/>
                  <memberOf key="att.vis.beam"/>
                  <memberOf key="att.ges.beam"/>
                  <memberOf key="att.anl.beam"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike.common_alternation"/>
                        <rng:ref name="model.eventLike.cmn_alternation"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="beatrpt">
               <desc>beat repeat ― A repeated single beat
          (Read, p. 223-224).</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.beatrpt"/>
                  <memberOf key="att.vis.beatrpt"/>
                  <memberOf key="att.ges.beatrpt"/>
                  <memberOf key="att.anl.beatrpt"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="bend">
               <desc>bend ― A performance directive
          indication a stretching of a string to make it sound higher than
          normal. The bend element can also be used for scoop, plop, falloff,
          and doit performance effects. It should *not* be used for l.v.
          (laissez vibrer) indications. Precise performance data that differs
          from the logical events in a measure may be recorded within the bend
          element. The starting point of the bend may be indicated by either a
          tstamp, tstamp.ges, tstamp.real or startid attribute. It is a semantic
          error not to specify a starting attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.bend"/>
                  <memberOf key="att.vis.bend"/>
                  <memberOf key="att.ges.bend"/>
                  <memberOf key="att.anl.bend"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="rest"/>
                        <rng:ref name="tuplet"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:bend">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="btrem">
               <desc>bowed tremolo ― A rapid alternation on a
          single pitch or chord (Read, p. 393-394). This element should also be
          used for wind double and triple tonguing and for flutter tonguing when
          these are expressed as tremolandi.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.btrem"/>
                  <memberOf key="att.vis.btrem"/>
                  <memberOf key="att.ges.btrem"/>
                  <memberOf key="att.anl.btrem"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:ref name="chord"/>
                     <rng:ref name="note"/>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="chord">
               <desc>chord ― A simultaneous sounding of 2 or
          more notes in the same layer *with the same duration*. See Read, p.
          69.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.chord"/>
                  <memberOf key="att.vis.chord"/>
                  <memberOf key="att.ges.chord"/>
                  <memberOf key="att.anl.chord"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="artic"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:chord[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="ftrem">
               <desc>fingered tremolo ― A rapid alternation
          between a pair of notes (or chords or perhaps between a note and a
          chord) that are (usually) farther apart than a major second. See Read,
          p. 235-238. For rapid alternation between notes on the same pitch
          (bowed tremolo, double &amp;amp; triple tonguing, and flutter
          tonguing) use the btrem element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.ftrem"/>
                  <memberOf key="att.vis.ftrem"/>
                  <memberOf key="att.ges.ftrem"/>
                  <memberOf key="att.anl.ftrem"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:group>
                        <rng:ref name="chord"/>
                        <rng:choice>
                           <rng:ref name="chord"/>
                           <rng:ref name="note"/>
                        </rng:choice>
                     </rng:group>
                     <rng:group>
                        <rng:ref name="note"/>
                        <rng:choice>
                           <rng:ref name="chord"/>
                           <rng:ref name="note"/>
                        </rng:choice>
                     </rng:group>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="gliss">
               <desc>glissando ― An indication to perform
          notes between the written pitches at a tempo such that the
          intermediate pitches are not heard individually. See Read, p. 243-245,
          397-398. Sometimes called a 'slide'. Precise performance data, that
          is, exact pitches, may be recorded within the gliss element. The
          starting point of the glissand sign may be indicated by either a
          tstamp, tstamp.ges, tstamp.real or startid attribute. It is a semantic
          error not to specify a starting point attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.gliss"/>
                  <memberOf key="att.vis.gliss"/>
                  <memberOf key="att.ges.gliss"/>
                  <memberOf key="att.anl.gliss"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="note"/>
                        <rng:ref name="rest"/>
                        <rng:ref name="tuplet"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:gliss">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="halfmrpt">
               <desc>half-measure repeat ― A half-measure
          repeat in any meter.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.halfmrpt"/>
                  <memberOf key="att.vis.halfmrpt"/>
                  <memberOf key="att.ges.halfmrpt"/>
                  <memberOf key="att.anl.halfmrpt"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="note">
               <desc>note ― A single pitched event. (Read, p.
          63) The note element is allowed to contain other events for situations
          where a single written note may be representative of a group of
          performed notes. The accid and artic sub-elements may be used instead
          of the note element's attributes when accid and artic represent
          first-class objects, e.g., when they require attributes, such as x and
          y location attributes. Similarly, the syl sub-element may be used
          instead of the syl attribute. The verse sub-element may be used to
          group text syllables by verse.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.note"/>
                  <memberOf key="att.vis.note"/>
                  <memberOf key="att.ges.note"/>
                  <memberOf key="att.anl.note"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.verseLike"/>
                        <rng:ref name="model.sylLike"/>
                        <rng:ref name="model.appLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:note[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="rest">
               <desc>rest ― A non-sounding event found in the
          source being transcribed (Read, p. 96-102). Do not confuse this
          element with the space element which is used as an aid for visual
          alignment.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.rest"/>
                  <memberOf key="att.vis.rest"/>
                  <memberOf key="att.ges.rest"/>
                  <memberOf key="att.anl.rest"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:rest[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="tuplet">
               <desc>tuplet ― A group of notes with
          "irregular" (sometimes called "irrational") rhythmic values, for
          example, three notes in the time normally occupied by two or nine in
          the time of five. The beam sub-element is allowed so that custom
          beaming may be indicated, i.e., a septuplet may be divided into a
          group of 3 plus a group of 4 notes. See Read, p. 187-215. The tuplet
          element may also used for bowed tremolo (Read, p. 394) and double,
          triple, or flutter tonguing (Read, p. 348-349); that is, for
          repetition of the same pitch.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.tuplet"/>
                  <memberOf key="att.vis.tuplet"/>
                  <memberOf key="att.ges.tuplet"/>
                  <memberOf key="att.anl.tuplet"/>
                  <memberOf key="model.eventLike.cmn"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.eventLike.common_alternation"/>
                        <rng:ref name="model.eventLike.cmn_alternation"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mrest">
               <desc>measure rest ― Complete measure rest in
          any meter (Read, p. 97-98). The numbering of consecutive measures of
          rest may be controlled via the multi.number attribute on the scoredef
          or staffdef elements.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mrest"/>
                  <memberOf key="att.vis.mrest"/>
                  <memberOf key="att.ges.mrest"/>
                  <memberOf key="att.anl.mrest"/>
                  <memberOf key="model.eventLike.cmn.measureFilling"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:mrest[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="mrpt">
               <desc>measure repeat ― A repeated measure
          (Read, p. 224-225). The numbering of consecutive measures of rest may
          be controlled via the multi.number attribute on the scoredef or
          staffdef elements.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mrpt"/>
                  <memberOf key="att.vis.mrpt"/>
                  <memberOf key="att.ges.mrpt"/>
                  <memberOf key="att.anl.mrpt"/>
                  <memberOf key="model.eventLike.cmn.measureFilling"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mrpt2">
               <desc>measure repeat 2 ― 2-measure repeat
          sign.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mrpt2"/>
                  <memberOf key="att.vis.mrpt2"/>
                  <memberOf key="att.ges.mrpt2"/>
                  <memberOf key="att.anl.mrpt2"/>
                  <memberOf key="model.eventLike.cmn.measureFilling"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="mspace">
               <desc>measure space ― Complete measure of
          space in any meter. The numbering of consecutive measures of space may
          be controlled via the multi.number attribute on the scoredef or
          staffdef elements.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mspace"/>
                  <memberOf key="att.vis.mspace"/>
                  <memberOf key="att.ges.mspace"/>
                  <memberOf key="att.anl.mspace"/>
                  <memberOf key="model.eventLike.cmn.measureFilling"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:mspace[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="multirest">
               <desc>multi-rest ― Multiple measures of
          rest.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.multirest"/>
                  <memberOf key="att.vis.multirest"/>
                  <memberOf key="att.ges.multirest"/>
                  <memberOf key="att.anl.multirest"/>
                  <memberOf key="model.eventLike.cmn.measureFilling"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_instr" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:multirest[@instr]">
                        <sch:let name="thisinstr" value="@instr"/>
                        <sch:assert test="@instr = preceding::instrdef[@xml:id=$thisinstr]/@xml:id">The
          value of @instr must be the ID of an instrdef element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="multirpt">
               <desc>multi-repeat ― Multiple repeated
          measures. Read (p. 225-226) says repeats of more than 2 measures
          should always be written out using repeat signs.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.multirpt"/>
                  <memberOf key="att.vis.multirpt"/>
                  <memberOf key="att.ges.multirpt"/>
                  <memberOf key="att.anl.multirpt"/>
                  <memberOf key="model.eventLike.cmn.measureFilling"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="arpeg">
               <desc>arpeggiation ― Indicates presence of a
          wavy line symbol meaning that the notes of the following chord are to
          be performed successively rather than simultaneously, usually from
          lowest to highest. (Read, p. 241-243). Sometimes called a
          'roll'.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.arpeg"/>
                  <memberOf key="att.vis.arpeg"/>
                  <memberOf key="att.ges.arpeg"/>
                  <memberOf key="att.anl.arpeg"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="beamspan">
               <desc>beam span ― Alternative element for
          encoding beams, especially useful for beams which extend across
          barlines. The starting point of the beam may be indicated by either a
          tstamp, tstamp.ges, tstamp.real or startid attribute, while the ending
          point may be recorded by either a dur, dur.ges or endid attribute. It
          is a semantic error not to specify one starting and one ending type of
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.beamspan"/>
                  <memberOf key="att.vis.beamspan"/>
                  <memberOf key="att.ges.beamspan"/>
                  <memberOf key="att.anl.beamspan"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:beamspan">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="breath">
               <desc>breath mark ― The breath element is a
          specialized form of, i.e., syntactic sugar for, dir/@type="breathmark"
          with "," as its PCDATA content. The starting point of the breath mark
          may be indicated by either a tstamp, tstamp.ges, tstamp.real or
          startid attribute. It is a semantic error not to specify a starting
          point attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.breath"/>
                  <memberOf key="att.vis.breath"/>
                  <memberOf key="att.ges.breath"/>
                  <memberOf key="att.anl.breath"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="fermata">
               <desc>fermata ― The fermata element is a
          specialized form of, i.e., syntactic sugar for, dir/@type="fermata"
          with &amp;ferm; or &amp;uferm; as its PCDATA content. The
          starting point of the fermata may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute. It is a semantic error
          not to specify a starting point attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.fermata"/>
                  <memberOf key="att.vis.fermata"/>
                  <memberOf key="att.ges.fermata"/>
                  <memberOf key="att.anl.fermata"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:fermata">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="hairpin">
               <desc>hairpin ― Indicates continuous dynamics
          expressed on the score as graphics, e.g. &lt; and &gt; (Read,
          p. 250-255). The starting point of the hairpin may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute, while
          the ending point may be recorded by either a dur, dur.ges or endid
          attribute. It is a semantic error not to specify one starting and one
          ending type of attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.hairpin"/>
                  <memberOf key="att.vis.hairpin"/>
                  <memberOf key="att.ges.hairpin"/>
                  <memberOf key="att.anl.hairpin"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:hairpin">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="harppedal">
               <desc>harp pedal ― Harp pedal diagram. (Read,
          p. 325). The starting point of the harp pedal diagram may be indicated
          by either a tstamp, tstamp.ges, tstamp.real or startid attribute. It
          is a semantic error not to specify a starting point
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.harppedal"/>
                  <memberOf key="att.vis.harppedal"/>
                  <memberOf key="att.ges.harppedal"/>
                  <memberOf key="att.anl.harppedal"/>
                  <memberOf key="model.controleventLike.instruments"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:harppedal">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="octave">
               <desc>octave ― Octave displacement. (Read, p.
          45). The starting point of the octave displacement may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute, while
          the ending point may be recorded by either a dur, dur.ges or endid
          attribute. It is a semantic error not to specify one starting and one
          ending type of attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.octave"/>
                  <memberOf key="att.vis.octave"/>
                  <memberOf key="att.ges.octave"/>
                  <memberOf key="att.anl.octave"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:octave">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="pedal">
               <desc>pedal ― Piano pedal mark (Read, p.
          317-318). The starting point of the pedal mark may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute. It is a
          semantic error not to specify a starting point
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.pedal"/>
                  <memberOf key="att.vis.pedal"/>
                  <memberOf key="att.ges.pedal"/>
                  <memberOf key="att.anl.pedal"/>
                  <memberOf key="model.controleventLike.instruments"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:pedal">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="reh">
               <desc>rehearsal mark ― In an orchestral score
          and its corresponding parts, a mark indicating a convenient point from
          which to resume rehearsal after a break. They may also be called
          rehearsal figures, or when numbers are used instead of letters,
          rehearsal numbers. See Read, p. 443. Reh uses a subset of
          model.textphraseLike.limited. If the entire rehearsal mark is boxed or
          circled, the enclose attribute is preferred over a rend
          sub-element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.reh"/>
                  <memberOf key="att.vis.reh"/>
                  <memberOf key="att.ges.reh"/>
                  <memberOf key="att.anl.reh"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="lb"/>
                        <rng:ref name="model.rendLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="slur">
               <desc>slur ― Historically, the term "slur"
          indicated two notes performed legato, while the term "phrase" was used
          for a "unified melodic idea". Nowadays, however, "slur" often has the
          same meaning as "phrase" (See Read, p. 265-266), since the visual
          rendition of the two concepts is the same. MEI provides two distinct
          elements so that those users wishing to maintain a distinction for
          historical reasons may do so. If the user does not want to maintain
          the distinction, then the more generic &lt;slur&gt; element
          should be employed. The starting point of the slur may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute, while
          the ending point may be recorded by either a dur, dur.ges or endid
          attribute. It is a semantic error not to specify one starting and one
          ending type of attribute. Either place, bulge, or bezier attributes
          may be used to record the curvature of the slur. The slur and tie
          elements may be used instead of the slur.* and tie.* attributes
          provided on chord and note elements when 1) they are required by
          software, or 2) multiple, alternative slurs are
          needed.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.slur"/>
                  <memberOf key="att.vis.slur"/>
                  <memberOf key="att.ges.slur"/>
                  <memberOf key="att.anl.slur"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:slur">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="tie">
               <desc>tie ― An indication that two notes of
          the same pitch form a single note with their combined values. Most
          often it is rendered as a curved line connecting the two notes. See
          Read, p. 110-111, 122.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.log.tie"/>
                  <memberOf key="att.vis.tie"/>
                  <memberOf key="att.ges.tie"/>
                  <memberOf key="att.anl.tie"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:tie">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="tupletspan">
               <desc>tuplet span ― Alternative element for
          encoding tuplets, especially useful for those which extend across
          barlines. The starting point of the tuplet may be indicated by either
          a tstamp, tstamp.ges, tstamp.real or startid attribute, while the
          ending point may be recorded by either a dur, dur.ges or endid
          attribute. It is a semantic error not to specify one starting and one
          ending type of attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.tupletspan"/>
                  <memberOf key="att.vis.tupletspan"/>
                  <memberOf key="att.ges.tupletspan"/>
                  <memberOf key="att.anl.tupletspan"/>
                  <memberOf key="model.controleventLike.cmn"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_start_and_end_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:tupletspan">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                        <sch:assert test="@endid or @dur">Must have one of the attributes: dur
          or endid</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="lyrics">
               <desc>lyrics ― The staff attribute gives the
          staff to which the lyrics are attached. The rhythm of the lyrics will
          be taken from the notes of that staff. If there is more than 1 layer
          on that staff, the layer attribute may be used to indicate the layer
          from which the rhythm should be taken.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.lyrics"/>
                  <memberOf key="att.vis.lyrics"/>
                  <memberOf key="att.ges.lyrics"/>
                  <memberOf key="att.anl.lyrics"/>
                  <memberOf key="model.lyricsLike"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="verse"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="verse">
               <desc>verse ― Lyric verse. The lb element is
          allowed here in order to facilitate karaoke applications. The func
          attribute on lb may be used to distinguish true line ends from line
          group ends for these applications.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="att.log.verse"/>
                  <memberOf key="att.vis.verse"/>
                  <memberOf key="att.ges.verse"/>
                  <memberOf key="att.anl.verse"/>
                  <memberOf key="model.verseLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="dir"/>
                        <rng:ref name="dynam"/>
                        <rng:ref name="tempo"/>
                        <rng:ref name="space"/>
                     </rng:choice>
                  </rng:zeroOrMore>
                  <rng:oneOrMore>
                     <rng:ref name="syl"/>
                  </rng:oneOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="lb"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="syl">
               <desc>syllable ― Individual lyric syllable. Do
          not confuse this element with the syllable element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.syl"/>
                  <memberOf key="att.vis.syl"/>
                  <memberOf key="att.ges.syl"/>
                  <memberOf key="att.anl.syl"/>
                  <memberOf key="model.sylLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="mordent">
               <desc>mordent ― An ornament indicating rapid
          alternation of the main note with a secondary note, usually a step
          below, but sometimes a step above. See Read, p. 245-246. Events may be
          contained within &lt;mordent&gt; in order to record precise
          performance data. The starting point of the mordent may be indicated
          by either a tstamp, tstamp.ges, tstamp.real or startid attribute. It
          is a semantic error not to specify a starting point
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.mordent"/>
                  <memberOf key="att.vis.mordent"/>
                  <memberOf key="att.ges.mordent"/>
                  <memberOf key="att.anl.mordent"/>
                  <memberOf key="model.ornamentLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike_alternation"/>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:mordent">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="trill">
               <desc>trill ― Rapid alternation of two notes a
          second apart. Usually, the interval is understood to be diatonic
          unless altered by an accidental. See Read, p. 232-235. Events may be
          contained within &lt;trill&gt; in order to record precise
          performance data. The starting point of the trill may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute, while
          the ending point may be recorded by either a dur, dur.ges or endid
          attribute. It is a semantic error not to specify a starting point
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.trill"/>
                  <memberOf key="att.vis.trill"/>
                  <memberOf key="att.ges.trill"/>
                  <memberOf key="att.anl.trill"/>
                  <memberOf key="model.ornamentLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike_alternation"/>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:trill">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="turn">
               <desc>turn ― An ornament consisting of four
          notes — the upper neighbor of the written note, the written note, the
          lower neighbor, and the written note. See Read, p. 246-247. Events may
          be contained within &lt;turn&gt; in order to record precise
          performance data. Whether the turn is accented or unaccented may be
          inferred from the timestamp — accented turns occur directly on the
          affected beat, unaccented ones do not.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.turn"/>
                  <memberOf key="att.vis.turn"/>
                  <memberOf key="att.ges.turn"/>
                  <memberOf key="att.anl.turn"/>
                  <memberOf key="model.ornamentLike.cmn"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.eventLike_alternation"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="barre">
               <desc>barre ― An indication of fingering in a
          chord tablature grid. The from and to attributes should each contain
          the id of a &lt;chordmember&gt; element.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_barrefrom_and_to" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:barre">
                        <sch:let name="thisfrom" value="@from"/>
                        <sch:let name="thisto" value="@to"/>
                        <sch:assert test="@from = preceding-sibling::chordmember[@xml:id=$thisfrom]/@xml:id">The value of @from must be the ID of a chordmember
          element.</sch:assert>
                        <sch:assert test="@to = preceding-sibling::chordmember[@xml:id=$thisto]/@xml:id">The value of @to must be the ID of a chordmember
          element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="fret" usage="req">
                     <datatype>
                        <rng:ref name="data.FRET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="from" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="to" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="chorddef">
               <desc>chord definition ― Chord tablature
          definition. An individual chord in the chord table. An id isn't
          required here but &lt;harm&gt; elements can only reference a
          particular chorddef via an id. Therefore, if a chorddef will ever be
          referenced, an id is necessary. The pos (position) attribute is
          provided in order to create displayable chord tablature grids. (Read,
          p. 409-410)</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="chordmember"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="barre"/>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="pos" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="chordmember">
               <desc>chord member ― An individual pitch in a
          chord defined using the &lt;chorddef&gt; element. The fing and
          fret attributes are provided in order to create displayable chord
          tablature grids. The inth (harmonic interval) attribute may be used to
          facilitate automated performance of a chord. It gives the number of
          1/2 steps above the bass. Of course, for the bass note itself, inth
          should be set to '0'.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="accid" usage="opt">
                     <datatype>
                        <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fing" usage="opt">
                     <datatype>
                        <rng:ref name="data.FINGER.FRET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="fret" usage="opt">
                     <datatype>
                        <rng:ref name="data.FRET"/>
                     </datatype>
                  </attDef>
                  <attDef ident="inth" usage="opt"/>
                  <attDef ident="oct" usage="opt">
                     <datatype>
                        <rng:ref name="data.OCTAVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="pname" usage="req">
                     <datatype>
                        <rng:ref name="data.PITCHNAME"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="chordtable">
               <desc>chord table ― Chord/tablature look-up
          table. A table may be shared between MEI instances through the use of
          an external parsed entity containing the look-up table to be
          shared.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.chordtableLike"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="chorddef"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="harm">
               <desc>harmony ― Indication of harmony, e.g.
          chord names, tablature grids, harmonic analysis, figured bass. (Read,
          p. 411.) The starting point of the harmony may be indicated by either
          a tstamp, tstamp.ges, tstamp.real or startid attribute, while the
          ending point may be recorded by either a dur, dur.ges or endid
          attribute. It is a semantic error not to specify a starting point
          attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.log.harm"/>
                  <memberOf key="att.vis.harm"/>
                  <memberOf key="att.ges.harm"/>
                  <memberOf key="att.anl.harm"/>
                  <memberOf key="model.harmLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.graphicprimitiveLike_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_start-type_attributes_on_some_control_events"
                               scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:harm">
                        <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">
          Must have one of the attributes: startid, tstamp, tstamp.ges or
          tstamp.real</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="check_harmchordref" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:harm[@chordref]">
                        <sch:let name="thischordref" value="@chordref"/>
                        <sch:assert test="@chordref = preceding::chorddef[@xml:id=$thischordref]/@xml:id">The value of @chordref must be the ID of a chorddef
          element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
            <elementSpec ident="curve">
               <desc>curve ― A curved line that cannot be
          represented by a more specific element. The x1,y1 and x2,y2 attributes
          identify the two terminal points of the curve. If the startid or endid
          attributes are present, then the x,y and x2,y2 coordinates are
          relative to the xy coordinates of the referenced element(s).
          Otherwise, they are assumed to be absolute page coordinate references.
          The bulge or, alternatively, the bezier attribute, describe the shape
          of the curve. The bulge attribute describes the curve as a set of
          distance values above or below an imaginary line connecting the
          endpoints of the curve while the bezier attribute records the
          placement of Bezier control points as a series of space-separated xy
          coordinate pairs, eg. 19 45 -32 118. The bulge attribute must contain
          one or more values of the NUMBER datatype. Either the bezier attribute
          or the bulge and xy coordinates are required. The rend attribute
          captures the appearance of the curve.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.startendid"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
                  <memberOf key="att.xy2.required"/>
                  <memberOf key="model.graphicprimitiveLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="bezier" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="bulge" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKENS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.CURVERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="line">
               <desc>line ― A line that cannot be represented
          by a more specific element. The x,y and x2,y2 attributes identify the
          two terminal points of the line. Text content of the line element,
          e.g. 'gliss.', may be rendered with the line. If the startid or endid
          attributes are present, then the x,y and x2,y2 coordinates are
          relative to the xy coordinates of the referenced element(s).
          Otherwise, they are assumed to be absolute page coordinate references.
          The appearance of the line is captured in the rend
          attribute.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.startendid"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
                  <memberOf key="att.xy2.required"/>
                  <memberOf key="model.graphicprimitiveLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="rend" usage="opt">
                     <datatype>
                        <rng:ref name="data.LINERENDITION"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="symbol">
               <desc>symbol ― A reference to a previously
          defined symbol. The x and y attributes identify the starting point,
          e.g. "hotspot" of the symbol. If the startid attribute is present,
          then the xy coordinates are relative to the xy coordinates of the
          referenced element. Otherwise, they are assumed to be absolute page
          coordinate references. The ref attribute must contain the id of a
          symboldef element. The scale attribute indicates that the printed
          output must be scaled by the specified percentage.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.color"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.xy.required"/>
                  <memberOf key="model.graphicprimitiveLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="ref" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="scale" usage="opt">
                     <datatype>
                        <rng:ref name="data.PERCENT"/>
                     </datatype>
                  </attDef>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="symboldef">
               <desc>symbol definition ― Declaration of an
          individual symbol in a symboltable.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.graphicprimitiveLike_alternation"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="symboltable">
               <desc>symbol table ― Contains individual,
          user-defined symbols. Like a chord table, a symboltable may be shared
          between mei instances through the use of an external parsed entity
          containing the symboltable to be shared.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.symboltableLike"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="symboldef"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="app">
               <desc>apparatus ― Contains one or more
          alternative encodings. The alternatives may be thought of as exclusive
          or as parallel. The type attribute may contain any convenient
          descriptive word, describing the extent of the variation (e.g. note,
          phrase, measure, etc.), its text-critical significance (e.g.
          significant, accidental, unclear), or the nature of the variation or
          the principles required to understand it (e.g. lectio difficilior,
          usus auctoris, etc.).</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.appLike"/>
               </classes>
               <content>
                  <rng:optional>
                     <rng:ref name="lem"/>
                  </rng:optional>
                  <rng:ref name="rdg"/>
                  <rng:zeroOrMore>
                     <rng:ref name="rdg"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="lem">
               <desc>lemma ― Contains the lemma, or base
          text, of a textual variation. The lem element may also be used, under
          some circumstances, to record the base text of the source edition, to
          mark the readings of a base witness, to indicate the preference of an
          editor or encoder for a particular reading, or to make clear, in cases
          of ambiguity, precisely which portion of the main text the variation
          applies to. Those who prefer to work without the notion of a base text
          may prefer not to use it at all.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.crit"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.anl.rdg"/>
                  <memberOf key="att.ges.rdg"/>
                  <memberOf key="att.log.rdg"/>
                  <memberOf key="att.vis.rdg"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.rdgPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="rdg">
               <desc>reading ― Since a reading can be a
          multi-measure section, the scoredef element is allowed so that a
          reading may have its own meta-data without the overhead of child
          sections. The measure sub-element is declared in the meiBase DTD and
          the pb sub-element is declared in the meiShared DTD. The app
          sub-element is permitted in order to allow nested
          sub-variants.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.crit"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="att.link.common"/>
                  <memberOf key="att.link.external"/>
                  <memberOf key="att.link.internal"/>
                  <memberOf key="att.anl.rdg"/>
                  <memberOf key="att.ges.rdg"/>
                  <memberOf key="att.log.rdg"/>
                  <memberOf key="att.vis.rdg"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.Incl_alternation"/>
                        <rng:ref name="model.rdgPart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="accessdesc">
               <desc>access description ― Describes the
          conditions that affect the accessibility of a bibliographic item. May
          indicate the nature of restrictions or the lack of
          restrictions.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.availabilityPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="acqsource">
               <desc>acquisition source ― Post-publication
          source from which access to a bibliographic item may be obtained, e.g.
          vendor, distributor, etc.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.availabilityPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="altmeiid">
               <desc>alternative MEI id ― May contain a
          bibliographic identifier that does not fit within the meihead id
          attribute, for example because the id does not fit the definition of
          an XML id or because multiple identifiers are needed. One or the other
          of &lt;altmeiid&gt; or the id attribute on &lt;mei&gt;
          is required when applicable.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="appinfo">
               <desc>application information ― Groups
          information about applications which have acted upon the MEI file.
          This is not to be confused with applications which were used to create
          the MEI file. These are recorded in the projectdesc
          element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.encodingPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="application"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="application">
               <desc>application ― Provides information about
          an application which has acted upon the document.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.date"/>
                  <memberOf key="att.typed"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="name"/>
                  </rng:oneOrMore>
                  <rng:choice>
                     <rng:zeroOrMore>
                        <rng:ref name="model.ptrLike"/>
                     </rng:zeroOrMore>
                     <rng:zeroOrMore>
                        <rng:ref name="model.pLike"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
               <attList>
                  <attDef ident="version" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="availability">
               <desc>availability ― Groups elements that
          describe the availability of and access to a bibliographic
          item.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.pubstmtPart"/>
               </classes>
               <content>
                  <rng:ref name="macro.availabilityPart"/>
               </content>
            </elementSpec>
            <elementSpec ident="change">
               <desc>change ― Individual change within the
          revision description. Additions, deletions, and significant recoding
          should be noted, but not correction of minor typographical errors. It
          is recommended that revisions should be entered in reverse
          chronological order, with the most recent &lt;change&gt;
          first. The resp attribute contains a pointer to an element containing
          info about the person/entity responsible for change. The edition
          element can be used to designate an MEI encoding that has been so
          substantively changed that it constitutes a new version that
          supersedes earlier versions.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:ref name="respstmt"/>
                  <rng:ref name="changedesc"/>
                  <rng:ref name="model.dateLike"/>
               </content>
            </elementSpec>
            <elementSpec ident="changedesc">
               <desc>change description ― Description of a
          revision of the MEI file.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="classcode">
               <desc>classification code ― LC subject or call
          number, or a thesaurus or ontology citation. The source of
          controlled-vocabulary terms used in the keywords
          element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="classification">
               <desc>classification ― Groups information
          which describes the nature or topic of a musical work. Although use of
          names and terms from locally controlled vocabularies is possible,
          terms used here should come from standard national or international
          vocabularies whenever they are available in order to enable searches
          in systems that include multiple MEI documents, or MEI documents and
          bibliographic records from many institutions.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.profiledescPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="classcode"/>
                        <rng:ref name="keywords"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="condition">
               <desc>condition ― The physical condition of an
          item, particularly any variances between the physical makeup of the
          item and that of other copies of the same item (e.g., missing pages,
          plates, etc.). Condition may reflect other aspects of the physical
          condition of the item as well (e.g., brittleness, faded images,
          etc.).</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="correction">
               <desc>correction ― States how and under what
          circumstances corrections have been made in the
          music/text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.editorialdeclPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
               <attList>
                  <attDef ident="method" usage="opt">
                     <valList type="closed">
                        <valItem ident="silent"/>
                        <valItem ident="tags"/>
                     </valList>
                  </attDef>
                  <attDef ident="status" usage="opt">
                     <valList type="closed">
                        <valItem ident="high"/>
                        <valItem ident="medium"/>
                        <valItem ident="low"/>
                        <valItem ident="unknown"/>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="creation">
               <desc>creation ― Non-bibliographic creation
          details for the work being encoded, in narrative form. Contains
          phrases describing the origin of the text, e.g. the date, place, and
          circumstances of its composition.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.profiledescPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.textcomponentLike_alternation"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="dimensions">
               <desc>dimensions ― Information about the
          physical size of a bibliographic source; usually includes numerical
          data. There are no height and width sub-elements; however, num
          sub-elements may be used with appropriate n attribute values.
          Measurements may be expressed in any convenient unit. Do not confuse
          this element with the &lt;extent&gt; element, which is used to
          indicate the quantity of described materials.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="unit" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="editionstmt">
               <desc>edition statement ― Container for
          meta-data pertaining to a particular edition of the material being
          described.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="edition"/>
                     <rng:zeroOrMore>
                        <rng:ref name="respstmt"/>
                     </rng:zeroOrMore>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="editorialdecl">
               <desc>editorial declaration ― Used to provide
          details of editorial principles and practices applied during the
          encoding of musical text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.encodingPart"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:oneOrMore>
                        <rng:ref name="model.pLike"/>
                     </rng:oneOrMore>
                     <rng:group>
                        <rng:oneOrMore>
                           <rng:ref name="model.editorialdeclPart_alternation"/>
                        </rng:oneOrMore>
                        <rng:zeroOrMore>
                           <rng:ref name="model.pLike"/>
                        </rng:zeroOrMore>
                     </rng:group>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="encodingdesc">
               <desc>encoding description ― Documents the
          relationship between an electronic file and the source or sources from
          which it was derived as well as applications used in the
          encoding/editing process.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="model.headerPart"/>
               </classes>
               <content>
                  <rng:ref name="model.encodingPart_sequenceOptional"/>
               </content>
            </elementSpec>
            <elementSpec ident="exhibithist">
               <desc>exhibition history ― A record of public
          exhibitions, including dates, venues, etc.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="extent">
               <desc>extent ― Used to express size in terms
          other than physical dimensions, such as number of pages, number of
          records in file, number of bytes, performance duration for music,
          audio recordings and visual projections, etc. Use the
          &lt;dimensions&gt; element when it is necessary to specify the
          physical size of materials being described, for example, height and
          width.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="unit" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="filedesc">
               <desc>file description ― Contains a full
          bibliographic description of the MEI file. Extent in this context is
          file size.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:ref name="titlestmt"/>
                  <rng:optional>
                     <rng:ref name="editionstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="extent"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="fingerprint"/>
                  </rng:optional>
                  <rng:ref name="pubstmt"/>
                  <rng:optional>
                     <rng:ref name="seriesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="notesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="sourcedesc"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="fingerprint">
               <desc>fingerprint ― Traditionally, an
          identifier constructed by combining groups of characters transcribed
          from specified pages of a printed item. For an electronic item,
          however, the fingerprint should be a checksum. The checksum makes it
          possible to signal differences between copies of the
          item.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="hand">
               <desc>hand ― Defines a distinct scribe or
          handwriting style. The initial attribute indicates whether this is the
          first or main scribe of the document. The medium attribute describes
          the writing medium, e.g., 'pencil', or the tint or type of ink, e.g.
          'brown'. The resp attribute contains an ID reference to an element
          containing the name of the editor or transcriber responsible for
          identifying the hand. The characteristics of the hand, particularly
          those related to the quality of the writing, such as 'shaky', 'thick',
          etc. may be described within the content of the hand
          element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="initial" usage="opt">
                     <datatype>
                        <rng:ref name="data.BOOLEAN"/>
                     </datatype>
                  </attDef>
                  <attDef ident="medium" usage="opt"/>
                  <attDef ident="resp" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="handlist">
               <desc>hand list ― Contains a series of hand
          elements listing the different hands of the source.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="hand"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="inscription">
               <desc>inscription ― An inscription added to an
          item, such as a bookplate, a note designating the item as a gift,
          and/or the author's signature.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="interpretation">
               <desc>interpretation ― Describes the scope of
          any analytic or interpretive information added to the transcription of
          the music.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.editorialdeclPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="keywords">
               <desc>keywords ― Collection of keywords or
          text phrases which describe the work.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="term"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="language">
               <desc>language ― The name of a language. The
          language of text elements may be related to this element via its id,
          which normally takes the form of a code, drawn from a coded list, such
          as RFC3066 or iso639-2b.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="langusage">
               <desc>language usage ― Langusage groups
          elements describing the languages, sublanguages, dialects, etc.,
          represented within the encoded work.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.profiledescPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="language"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="normalization">
               <desc>normalization ― Indicates the extent of
          normalization or regularization of the original source carried out in
          converting it to electronic form.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.editorialdeclPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
               <attList>
                  <attDef ident="method" usage="opt">
                     <valList type="closed">
                        <valItem ident="silent"/>
                        <valItem ident="tags"/>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="notesstmt">
               <desc>notes statement ― Groups bibliographic
          annotations, each of which provides descriptive information in
          addition to that recorded in other parts of the bibliographic
          description. These annotations are similar to "general notes" in
          traditional bibliographic descriptions.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.annotLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physdesc">
               <desc>physical description ― Container for
          information about the location, appearance, construction, or handling
          of physical materials, such as their dimension, quantity, color,
          style, and technique of creation. Dedicatory text and title page
          features may also be encoded here when they are not transcribed as
          part of the front or back matter; i.e., when they are considered to be
          meta-data rather than a transcription.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.physdescPart_alternation"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physloc">
               <desc>physical location ― Location of the
          source within a repository, e.g., shelf mark or other locational
          information.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="physmedium">
               <desc>physical medium ― Records the physical
          materials used in the source, such as ink and paper. All materials may
          be described in a single &lt;physmedium&gt; element or
          multiple elements may be used, one for each medium.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="price">
               <desc>price ― The cost of access to a
          bibliographic item.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.availabilityPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="unit" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="profiledesc">
               <desc>profile description ― A detailed
          description of the non-bibliographic aspects of the creation of a
          musical work, specifically the languages and sublanguages used, the
          situation in which it was produced, e.g. the participants, setting,
          reception history, etc. Do not confuse this with
          &lt;filedesc&gt;, which bundles bibliographic information
          about the creation of the MEI file.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="model.headerPart"/>
               </classes>
               <content>
                  <rng:ref name="model.profiledescPart_sequenceOptional"/>
               </content>
            </elementSpec>
            <elementSpec ident="projectdesc">
               <desc>project description ― Project-level
          meta-data describing the aim or purpose for which the electronic file
          was encoded, funding agencies, etc. together with any other relevant
          information concerning the process by which it was assembled or
          collected.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.encodingPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="provenance">
               <desc>provenance ― The record of ownership or
          custodianship of an item.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.listLike"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="pubstmt">
               <desc>publication statement ― Container for
          information regarding the publication or distribution of a
          bibliographic item, including the publisher's name and address, the
          date of publication, and other relevant details. When an item is
          unpublished, use only the &lt;unpub&gt;
          sub-element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:choice>
                     <rng:optional>
                        <rng:ref name="unpub"/>
                     </rng:optional>
                     <rng:zeroOrMore>
                        <rng:ref name="model.pubstmtPart_alternation"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="resp">
               <desc>responsibility ― A phrase describing the
          nature of a person's intellectual responsibility.</desc>
               <content>
                  <rng:text/>
               </content>
               <attList>
                  <attDef ident="authority" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="respstmt">
               <desc>responsibility statement ― Names one or
          more individuals, groups, or in rare cases, mechanical processes,
          responsible for creation or realization of the intellectual or
          artistic content.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="model.pubstmtPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="resp"/>
                        <rng:ref name="model.nameLike"/>
                        <rng:ref name="model.nameLike.agent_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="revisiondesc">
               <desc>revision description ― Container for
          information about alterations that have been made to an MEI file. It
          is recommended that changes be recorded in reverse chronological
          order, with the most recent alteration first.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="change"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="samplingdecl">
               <desc>sampling declaration ― Contains a prose
          description of the rationale and methods used in sampling texts in the
          creation of a corpus or collection.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.encodingPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="segmentation">
               <desc>segmentation ― Describes the principles
          according to which the musical text has been segmented, for example
          into movements, sections, etc.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.editorialdeclPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="seriesstmt">
               <desc>series statement ― Groups information
          about the series, if any, to which a publication belongs. In this
          context, the title element records the series title, the respStmt
          element records the person or group responsible for the series, and
          the identifier element contains a series identifier. The list element
          should be used when it is necessary to enumerate the contents of the
          series. The seriesstmt is provided within seriesstmt for the
          description of a sub-series.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="title"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="respstmt"/>
                  </rng:optional>
                  <rng:zeroOrMore>
                     <rng:ref name="identifier"/>
                  </rng:zeroOrMore>
                  <rng:choice>
                     <rng:ref name="model.listLike"/>
                     <rng:zeroOrMore>
                        <rng:ref name="seriesstmt"/>
                     </rng:zeroOrMore>
                  </rng:choice>
               </content>
            </elementSpec>
            <elementSpec ident="source">
               <desc>source ― A bibliographic description of
          a source for the electronic file. Within source, the extent element
          may be used when only a portion of the source, pages 1-3 for example,
          are encoded. If extent is absent, then the entire source is presumed
          to have been encoded. Multiple physdesc sub-elements may be used to
          describe the physically separate parts of a single
          source.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="identifier"/>
                  </rng:zeroOrMore>
                  <rng:optional>
                     <rng:ref name="titlestmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="editionstmt"/>
                  </rng:optional>
                  <rng:ref name="pubstmt"/>
                  <rng:optional>
                     <rng:ref name="physdesc"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="seriesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="notesstmt"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="langusage"/>
                  </rng:optional>
                  <rng:optional>
                     <rng:ref name="classification"/>
                  </rng:optional>
               </content>
               <attList>
                  <attDef ident="data" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="sourcedesc">
               <desc>source description ― A container for the
          descriptions of the source(s) used in the creation of the electronic
          file. This element is recommended where the MEI file is a
          transcription of existing music, but is not required when the data is
          originally created in MEI form.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="source"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="stdvals">
               <desc>standard values ― Specifies the format
          used when standardized date or number values are
          supplied.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.editorialdeclPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="model.pLike"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="sysreq">
               <desc>system requirements ― System
          requirements for using the electronic item.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.availabilityPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="term">
               <desc>term ― Single keyword or phrase which
          describes the work. The classcode attribute may be used to link the
          term to a terminological source given in a classcode element. The term
          element may include other term elements in order to allow the creation
          of coordinated terms; i.e., terms created from a combination of other,
          independent terms.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="term"/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="classcode" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="titlestmt">
               <desc>title statement ― Container for title
          and responsibility meta-data.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:ref name="title"/>
                  </rng:oneOrMore>
                  <rng:optional>
                     <rng:ref name="respstmt"/>
                  </rng:optional>
               </content>
            </elementSpec>
            <elementSpec ident="treatmenthist">
               <desc>treatment history ― A record of the
          treatment the item has undergone (e.g., deacidification, restoration,
          etc.) Treatment history may also comprise details of the treatment
          process (e.g., chemical solutions used, techniques applied, etc.), the
          date the treatment was applied, etc.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="treatmentsched">
               <desc>treatment scheduled ― Scheduled
          treatment, e.g. deacidification, restoration, etc., for an
          item.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.physdescPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="unpub">
               <desc>unpublished ― Used to explicitly
          indicate that a bibliographic source is unpublished.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
            </elementSpec>
            <elementSpec ident="userestrict">
               <desc>usage restrictions ― Copyright statement
          in the filedesc, or (re-)publication rights in the source
          element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.bibl"/>
                  <memberOf key="model.availabilityPart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike.limited_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="cc">
               <desc>control change ― MIDI parameter/control
          change. The num attribute specifies parameter number, while val
          contains the parameter value. Each must fall in the range 0-127. <table>
                     <head>A sampling of controllers and their
              numbers</head>
                     <row>
                        <cell>0</cell>
                        <cell>Bank Select MSB</cell>
                     </row>
                     <row>
                        <cell>1</cell>
                        <cell>Modulation</cell>
                     </row>
                     <row>
                        <cell>2</cell>
                        <cell>Breath Control</cell>
                     </row>
                     <row>
                        <cell>5</cell>
                        <cell>Portamento Time</cell>
                     </row>
                     <row>
                        <cell>7</cell>
                        <cell>Main Volume</cell>
                     </row>
                     <row>
                        <cell>10</cell>
                        <cell>Pan</cell>
                     </row>
                     <row>
                        <cell>11</cell>
                        <cell>Expression</cell>
                     </row>
                     <row>
                        <cell>32</cell>
                        <cell>Bank Select LSB</cell>
                     </row>
                     <row>
                        <cell>64</cell>
                        <cell>Sustain Pedal (0=up, 127=down)</cell>
                     </row>
                     <row>
                        <cell>65</cell>
                        <cell>Portamento Pedal (0=off, 127=on)</cell>
                     </row>
                     <row>
                        <cell>91</cell>
                        <cell>Reverb</cell>
                     </row>
                     <row>
                        <cell>93</cell>
                        <cell>Chorus Depth</cell>
                     </row>
                     <row>
                        <cell>120</cell>
                        <cell>All Sounds Off (0)</cell>
                     </row>
                     <row>
                        <cell>121</cell>
                        <cell>Reset All Controllers (0)</cell>
                     </row>
                     <row>
                        <cell>123</cell>
                        <cell>All Notes Off (0)</cell>
                     </row>
                  </table>
               </desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="val" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="chan">
               <desc>channel ― MIDI channel
          assignment.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDICHANNEL"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="chanpr">
               <desc>channel pressure ― Channel
          pressure/after touch. The value of the num attribute must be in the
          range 0-127.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="cue">
               <desc>cue ― Cue point.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="hex">
               <desc>hex ― Arbitrary MIDI data in hexadecimal
          form.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="marker">
               <desc>marker ― MIDI marker
          meta-event.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="metatext">
               <desc>meta text ― MIDI text
          meta-event.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="midi">
               <desc>midi ― Container for elements that
          contain information useful when generating MIDI output. The n
          attribute can be used to differentiate between multiple MIDI data
          streams, e.g. quantized/unquantized, straight/swing, ornamented/as
          notated, etc.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.log.midi"/>
                  <memberOf key="att.vis.midi"/>
                  <memberOf key="att.ges.midi"/>
                  <memberOf key="att.anl.midi"/>
                  <memberOf key="model.midiLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="cc"/>
                        <rng:ref name="chan"/>
                        <rng:ref name="chanpr"/>
                        <rng:ref name="cue"/>
                        <rng:ref name="hex"/>
                        <rng:ref name="marker"/>
                        <rng:ref name="metatext"/>
                        <rng:ref name="noteoff"/>
                        <rng:ref name="noteon"/>
                        <rng:ref name="port"/>
                        <rng:ref name="prog"/>
                        <rng:ref name="seqnum"/>
                        <rng:ref name="trkname"/>
                        <rng:ref name="vel"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="noteoff">
               <desc>note-off ― MIDI note-off
          event.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="noteon">
               <desc>note-on ― MIDI note-on
          event.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="port">
               <desc>port ― MIDI port. The num attribute must
          be in the range 0-127.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="prog">
               <desc>program ― Program change/new instrument.
          The num attribute must be in the range 0-127.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="seqnum">
               <desc>sequence number ― The num attribute must
          be in the range 0-65535.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.INTEGERNONNEGATIVE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="trkname">
               <desc>track name ― MIDI track/sequence
          name.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:text/>
               </content>
            </elementSpec>
            <elementSpec ident="vel">
               <desc>velocity ― MIDI Note-on/off velocity.
          The num attribute must be in the range 1-127.</desc>
               <classes>
                  <memberOf key="att.common.anl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.midi.event"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="form" usage="req">
                     <valList type="closed">
                        <valItem ident="on"/>
                        <valItem ident="off"/>
                     </valList>
                  </attDef>
                  <attDef ident="num" usage="req">
                     <datatype>
                        <rng:ref name="data.MIDIVALUE"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="add">
               <desc>addition ― Marks an addition to the
          musical text. The add element contains material inserted by an author,
          scribe, annotator, or corrector. The resp attribute contains a ID
          reference to an element containing the editor or transcriber
          responsible for identifying the hand of the addition. The cert
          attribute signifies the degree of certainty ascribed to the
          identification of the hand of the addition. The hand attribute
          signifies the hand of the agent which made the
          addition.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="model.transcriptionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="choice">
               <desc>choice ― Groups a number of alternative
          encodings for the same point in a text. Because the children of a
          choice element all represent alternative ways of encoding the same
          sequence, it is natural to think of them as mutually exclusive.
          However, there may be cases where a full representation of a text
          requires the alternative encodings to be considered as parallel. Note
          also that choice elements may be recursively nested.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.editLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="choice"/>
                        <rng:ref name="model.choicePart_alternation"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="corr">
               <desc>correction ― Contains the correct form
          of an apparent erroneous passage. The resp attribute contains an ID
          reference to an element containing the name of the editor or
          transcriber responsible for suggesting the correction held as the
          content of the &lt;corr&gt; element. If the correction was
          made in the source, resp should be used to identify the hand of the
          corrector.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="model.transcriptionLike"/>
                  <memberOf key="model.choicePart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="damage">
               <desc>damage ― Contains an area of damage to
          the carrier. In the case of damage resulting from an identifiable
          cause, the agent attribute signifies the causative agent. The degree
          attribute signifies the degree of damage according to a convenient
          scale. A &lt;damage&gt; tag with this attribute should only be
          used where the text may be read with some confidence; data supplied
          from other sources should be tagged as &lt;supplied&gt;. The
          extent attribute indicates approximately how much text is in the
          damaged area, in notes, measures, inches, or any appropriate unit,
          where this cannot be deduced from the contents of the tag. For
          example, the damage may span structural divisions in the text so that
          the tag must then be empty of content. In the case of damage
          (deliberate defacement, etc.) assignable to an identifiable hand, the
          hand attribute signifies the hand responsible for the
          damage.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.transcriptionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="degree" usage="opt"/>
                  <attDef ident="extent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="del">
               <desc>deletion ― Contains information deleted,
          marked as deleted, or otherwise indicated as superfluous or spurious
          in the copy text by an author, scribe, annotator, or corrector. The
          resp attribute contains an ID reference to an element containing the
          name of the editor or transcriber responsible for identifying the hand
          of the deletion. The cert attribute signifies the degree of certainty
          ascribed to the identification of the hand of the deletion. The hand
          of the agent which made the deletion should be pointed to using the
          hand attribute. The rend attribute may be used to record the method
          used to make the deletion (overstrike, strike[through], etc.) or how
          the deleted matter should be displayed.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="model.transcriptionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="rend" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="gap">
               <desc>gap ― Indicates a point where material
          has been omitted in a transcription, whether as part of sampling
          practice or for editorial reasons described in the MEI header. When
          material is omitted because it is illegible or inaudible,
          &lt;unclear&gt; should be used instead. Similarly, use
          &lt;damage&gt; if the omission is due to damage and
          &lt;del&gt; if the omission is because the material is marked
          as deleted, or otherwise indicated as superfluous or spurious in the
          copy text by an author, scribe, annotator, or corrector. An indication
          of how much material has been omitted from the transcription may be
          recorded in the extent attribute. The unit attribute names the unit
          used for describing the extent of the gap. The reason attribute gives
          the reason for omission. Sample values include 'sampling',
          'irrelevant', 'cancelled'. The resp attribute contains an ID reference
          to an element containing the name of the editor, transcriber or
          encoder responsible for the decision not to provide any transcription
          of the material and hence the application of the &lt;gap&gt;
          tag.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="model.editLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <attList>
                  <attDef ident="extent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reason" usage="opt"/>
                  <attDef ident="unit" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="handshift">
               <desc>hand shift ― Marks the beginning of a
          passage written in a new hand, or of a change in the scribe, writing
          style, ink or character of the document hand. The character attribute
          describes characteristics of the hand, particularly those related to
          the quality of the writing, e.g., 'shaky', 'thick', regular'. A
          description of the tint or type of ink, e.g. 'brown' or the writing
          medium, e.g. 'pencil', may be placed in the medium attribute. The new
          hand may be identified using the new attribute, while the previous
          hand may be recorded in the old attribute. The resp attribute contains
          an ID reference to an element containing the name of the editor or
          transcriber responsible for identifying the change of
          hand.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.editLike"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_handshiftold" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:handshift[@old]">
                        <sch:let name="thisold" value="@old"/>
                        <sch:assert test="@old = preceding::hand[@xml:id=$thisold]/@xml:id">The
          value of @old must be the ID of a hand element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="check_handshiftnew" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:handshift[@new]">
                        <sch:let name="thisnew" value="@new"/>
                        <sch:assert test="@new = preceding::hand[@xml:id=$thisnew]/@xml:id">The
          value of @new must be the ID of a hand element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="character" usage="opt"/>
                  <attDef ident="medium" usage="opt"/>
                  <attDef ident="new" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="old" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="orig">
               <desc>original ― Contains a reading which is
          marked as following the original, rather than being normalized or
          corrected. This element will often be combined with a regularized form
          within a choice element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.transcriptionLike"/>
                  <memberOf key="model.choicePart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="reg">
               <desc>regularization ― Contains a reading
          which has been regularized or normalized in some sense. It is possible
          to identify the individual responsible for the regularization, and,
          using the choice and orig elements, to provide both original and
          regularized readings.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="model.transcriptionLike"/>
                  <memberOf key="model.choicePart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="restore">
               <desc>restore ― Indicates restoration of
          musical material to an earlier state by cancellation of an editorial
          or authorial marking or instruction. The desc (description) attribute
          gives a prose description of the means of restoration, 'stet' or
          'strike-down', for example. The cert attribute signifies the degree of
          certainty ascribed to the identification of the hand of the
          restoration. The type attribute may be used to indicate the action
          cancelled by the restoration. The resp attribute contains an ID
          reference to an element containing the name of the editor or
          transcriber responsible for identifying the hand of the restoration.
          The hand attribute signifies the hand of the agent which made the
          restoration.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.trans"/>
                  <memberOf key="att.typed"/>
                  <memberOf key="model.transcriptionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="desc" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="sic">
               <desc>sic ― Contains apparently incorrect or
          inaccurate musical material. A correction for the apparent error may
          be given in an accompanying child or sibling corr
          element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.transcriptionLike"/>
                  <memberOf key="model.choicePart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="subst">
               <desc>substitution ― Groups transcriptional
          elements when the combination is to be regarded as a single
          intervention in the text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.editLike"/>
               </classes>
               <content>
                  <rng:ref name="model.transcriptionLike_alternation"/>
                  <rng:oneOrMore>
                     <rng:ref name="model.transcriptionLike_alternation"/>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="supplied">
               <desc>supplied ― Contains musical material
          supplied by the transcriber or editor in place of text which cannot be
          read, either because of physical damage or loss in the original or
          because it is illegible for any reason. When the presumed loss of text
          arises from an identifiable cause, agent signifies the causative
          agent. When the presumed loss of text arises from action (partial
          deletion, etc.) assignable to an identifiable hand, the hand attribute
          signifies the hand responsible for the action. The reason attribute
          indicates why the text has to be supplied, e.g. 'overbinding', 'faded
          ink', 'lost folio', 'omitted in original', etc. The source attribute
          contains the source of the supplied text.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.transcriptionLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="reason" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="titlepage">
               <desc>title page ― Contains a transcription of
          the title page of a text. It may be used within the physdesc element
          when no other transcription is provided.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="att.lang"/>
                  <memberOf key="model.frontPart"/>
               </classes>
               <content>
                  <rng:oneOrMore>
                     <rng:choice>
                        <rng:ref name="model.textcomponentLike_alternation"/>
                        <rng:ref name="model.milestoneLike.text_alternation"/>
                     </rng:choice>
                  </rng:oneOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="unclear">
               <desc>unclear ― Contains musical material
          which cannot be transcribed with certainty because it is illegible or
          inaudible in the source. Where the difficulty in transcription arises
          from an identifiable cause, the agent attribute signifies the
          causative agent. The cert attribute signifies the degree of certainty
          ascribed to the transcription of the text contained within the
          &lt;unclear&gt; element. Where the difficulty in transcription
          arises from action (partial deletion, etc.) assignable to an
          identifiable hand, the hand attribute signifies the hand responsible
          for the action. The reason attribute indicates why the material is
          difficult to transcribe. The resp attribute indicates the individual
          responsible for the transcription of the word, phrase, or passage
          contained with the &lt;unclear&gt; element.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.edit"/>
                  <memberOf key="att.facsimile"/>
                  <memberOf key="model.transcriptionLike"/>
                  <memberOf key="model.choicePart"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:text/>
                        <rng:ref name="model.textphraseLike_alternation"/>
                        <rng:ref name="model.eventLike_alternation"/>
                        <rng:ref name="model.controleventLike_alternation"/>
                        <rng:ref name="model.lyricsLike"/>
                        <rng:ref name="model.midiLike"/>
                        <rng:ref name="model.editLike_alternation"/>
                        <rng:ref name="model.transcriptionLike_alternation"/>
                        <rng:ref name="model.eventLike.cmn.measureFilling_alternation"/>
                        <rng:ref name="model.noteModifierLike_alternation"/>
                        <rng:ref name="model.sectionLike"/>
                        <rng:ref name="model.measureLike"/>
                        <rng:ref name="model.staffLike"/>
                        <rng:ref name="model.layerLike"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="agent" usage="opt"/>
                  <attDef ident="hand" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="reason" usage="opt"/>
               </attList>
            </elementSpec>
            <elementSpec ident="facsimile">
               <desc>facsimile ― Contains a representation of
          some written source in the form of a set of images rather than as
          transcribed or encoded text. The source attribute may be used to link
          the collection of images with a particular source.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.facsimileLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:choice>
                        <rng:ref name="model.graphicLike"/>
                        <rng:ref name="surface"/>
                     </rng:choice>
                  </rng:zeroOrMore>
               </content>
               <constraintSpec ident="check_facsimilesource" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:facsimile[@source]">
                        <sch:let name="thissource" value="@source"/>
                        <sch:assert test="@source = preceding::source[@xml:id=$thissource]/@xml:id">The
          value of @source must be the ID of a source element.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="source" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="surface">
               <desc>surface ― Defines a written surface in
          terms of a rectangular coordinate space, optionally grouping one or
          more graphic representations of that space, and rectangular zones of
          interest within it.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.coordinated"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="figdesc"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="zone"/>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="startid" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="zone">
               <desc>zone ― Defines a rectangular area
          contained within a surface.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="att.coordinated"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="figdesc"/>
                  </rng:zeroOrMore>
                  <rng:zeroOrMore>
                     <rng:ref name="model.graphicLike"/>
                  </rng:zeroOrMore>
               </content>
            </elementSpec>
            <elementSpec ident="timeline">
               <desc>timeline ― Provides a set of ordered
          points in time to which musical elements can be linked in order to
          create a temporal alignment of those elements. The origin attribute
          designates the origin of the timeline, i.e., the time at which it
          begins. It must point to one of the when elements in its content.
          Units specifies the unit of time corresponding to the value of the
          interval attribute of the timeline or of its constituent points in
          time. The mediacontent attribute is provided in order to link the
          timeline to a particular external media file, such as an audio file.
          The medialength attribute specifies the length of the external media
          file in terms of the unit attribute.</desc>
               <classes>
                  <memberOf key="att.common"/>
                  <memberOf key="model.alignLike"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="when"/>
                  </rng:zeroOrMore>
               </content>
               <attList>
                  <attDef ident="mediacontent" usage="opt">
                     <datatype>
                        <rng:ref name="data.URI"/>
                     </datatype>
                  </attDef>
                  <attDef ident="medialength" usage="opt">
                     <datatype>
                        <rng:ref name="data.INTEGERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="origin" usage="req">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="unit" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="when">
               <desc>when ― Indicates a point in time either
          absolutely (using the absolute attribute), or relative to other
          elements in the same timeline element (using the interval and since
          attributes).</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:empty/>
               </content>
               <constraintSpec ident="check_whensince" scheme="isoschematron">
                  <constraint>
                     <sch:rule context="mei:when[@since]">
                        <sch:let name="thissince" value="@since"/>
                        <sch:assert test="@since = preceding-sibling::when[@xml:id=$thissince]/@xml:id">The value of @since must be the ID of a preceding sibling when
          element.</sch:assert>
                        <sch:assert test="@interval and @unit">If @since is present, @interval
          and @unit are also required.</sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="absolute" usage="opt"/>
                  <attDef ident="data" usage="opt">
                     <datatype>
                        <rng:data type="IDREFS"/>
                     </datatype>
                  </attDef>
                  <attDef ident="interval" usage="opt">
                     <datatype>
                        <rng:ref name="data.NUMBERPOSITIVE"/>
                     </datatype>
                  </attDef>
                  <attDef ident="since" usage="opt">
                     <datatype>
                        <rng:data type="IDREF"/>
                     </datatype>
                  </attDef>
                  <attDef ident="unit" usage="opt">
                     <datatype>
                        <rng:data type="NMTOKEN"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="mei">
               <desc>mei ― The document element for a single
        document, containing a header and data. The &lt;mei&gt; element
        defines a particular instance of a document encoded with the MEI schema.
        The name of this element should not be changed in order to assure an
        absolute minimum level of MEI compliance.</desc>
               <content>
                  <rng:ref name="meihead"/>
                  <rng:ref name="music"/>
               </content>
               <attList>
                  <attDef ident="xml:id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <datatype>
                        <rng:ref name="meiVersion"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="meicorpus">
               <desc>meicorpus ― The document element for a
        group of related MEI documents, each with its own complete header,
        contains a header for the group, and one or more &lt;mei&gt;
        elements. The group may be related in a number of ways, for example, by
        composer, by similar instrumentation, by holding institution, etc. This
        element's name should not be changed in order to assure an absolute
        minimum level of MEI compliance.</desc>
               <content>
                  <rng:ref name="meihead"/>
                  <rng:oneOrMore>
                     <rng:ref name="mei"/>
                  </rng:oneOrMore>
               </content>
               <attList>
                  <attDef ident="xml:id" usage="opt">
                     <datatype>
                        <rng:data type="ID"/>
                     </datatype>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <datatype>
                        <rng:ref name="meiVersion"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="meihead">
               <desc>meihead ― A wrapper for general
        bibliographic and descriptive information about the encoded file. This
        information is often essential in a machine-readable environment. Five
        sub-elements must be encoded in the following order:
        &lt;altmeiid&gt;(optional), &lt;filedesc&gt;(required),
        &lt;encodingdesc&gt;(optional),
        &lt;profiledesc;&gt;(optional), and
        &lt;revisiondesc&gt;(optional). These elements and their
        sub-elements provide: a unique identifier for the MEI file,
        bibliographic information about the MEI file and its sources,
        information about the encoding process, information about the creation
        of the work being encoded, and statements regarding significant
        revisions of the file.</desc>
               <classes>
                  <memberOf key="att.bibl"/>
                  <memberOf key="att.common"/>
                  <memberOf key="att.lang"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="altmeiid"/>
                  </rng:zeroOrMore>
                  <rng:ref name="filedesc"/>
                  <rng:ref name="model.headerPart_sequenceOptional"/>
                  <rng:optional>
                     <rng:ref name="revisiondesc"/>
                  </rng:optional>
               </content>
               <attList>
                  <attDef ident="type" usage="opt">
                     <valList type="closed">
                        <valItem ident="music"/>
                        <valItem ident="corpus"/>
                     </valList>
                  </attDef>
                  <attDef ident="version" usage="opt">
                     <datatype>
                        <rng:ref name="meiVersion"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
            <elementSpec ident="music">
               <desc>music ― Container for everything else in
        the document apart from the header.</desc>
               <classes>
                  <memberOf key="att.common"/>
               </classes>
               <content>
                  <rng:zeroOrMore>
                     <rng:ref name="model.facsimileLike"/>
                  </rng:zeroOrMore>
                  <rng:ref name="macro.musicPart"/>
               </content>
               <attList>
                  <attDef ident="version" usage="opt">
                     <datatype>
                        <rng:ref name="meiVersion"/>
                     </datatype>
                  </attDef>
               </attList>
            </elementSpec>
         </schemaSpec>
      </body>
   </text>
</TEI>