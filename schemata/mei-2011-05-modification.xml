<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="../../../trunk/schemaDevelopment/ODD/tei_odds.rng" type="xml"?>
<TEI xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Music Encoding Initiative Guidelines</title>
        <respStmt>
          <resp>Authored by</resp>
          <name xml:id="RV">Raffaele Viglianti</name>
          <name xml:id="PR">Perry Roland</name>
        </respStmt>
      </titleStmt>
      <publicationStmt>
        <p/>
      </publicationStmt>
      <sourceDesc>
        <p/>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <schemaSpec ident="mei" start="mei meiHead meiCorpus music" ns="http://www.music-encoding.org/ns/mei">
        <!-- Workdesc can be added to @start when it becomes necessary to create separate work descriptions that can be referred to. -->
        <moduleRef key="mei"/>
        <moduleRef key="MEI.shared"/>
        <moduleRef key="MEI.header"/>
        <moduleRef key="MEI.cmn"/>
        <moduleRef key="MEI.mensural"/>
        <moduleRef key="MEI.neumes"/>
        <moduleRef key="MEI.analysis"/>
        <moduleRef key="MEI.cmnOrnaments"/>
        <moduleRef key="MEI.corpus"/>
        <moduleRef key="MEI.critapp"/>
        <moduleRef key="MEI.edittrans"/>
        <moduleRef key="MEI.facsimile"/>
        <moduleRef key="MEI.figtable"/>
        <moduleRef key="MEI.harmony"/>
        <moduleRef key="MEI.linkalign"/>
        <moduleRef key="MEI.lyrics"/>
        <moduleRef key="MEI.midi"/>
        <moduleRef key="MEI.namesdates"/>
        <moduleRef key="MEI.performance"/>
        <moduleRef key="MEI.ptrref"/>
        <moduleRef key="MEI.tablature"/>
        <moduleRef key="MEI.text"/>
        <moduleRef key="MEI.usersymbols"/>

        <!-- FR 37 Resolve confusion between @authority, @dbkey, @analog attributes -->
        <!-- Split att.authorized into att.authorized (authority, authURI) and att.regularized (reg).  Add att.regularized
          to all current members of att.authorized or only to name? Also, date has a reg attr that could be switched out
          for membership in att.regularized. -->
        <classSpec type="atts" module="MEI.shared" ident="att.authorized" mode="replace">
          <desc>Attributes that describe the source of an controlled value</desc>
          <attList>
            <attDef ident="authority" usage="opt">
              <desc>a name or label associated with the controlled vocabulary from which the value is taken.</desc>
            </attDef>
            <attDef ident="authURI" usage="opt">
              <desc>the web-accessible location of the controlled vocabulary from which the value is taken.</desc>
              <datatype>
                <rng:ref name="data.URI"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>

        <classSpec type="atts" module="MEI.shared" ident="att.regularized" mode="add">
          <desc>Attributes that describe the source of an controlled value</desc>
          <attList>
            <attDef ident="reg" usage="opt">
              <desc>provides a regularized, authorized value.</desc>
            </attDef>
          </attList>
        </classSpec>

        <!-- FR 44: use anyURI instead of IDREF: TABLED FOR NOW! -->
        <!-- <macroSpec module="mei" type="dt" ident="data.PLIST" mode="replace">
          <desc>Participant list referencing method.</desc>
          <content>
          <rng:list>
          <rng:oneOrMore>
          <rng:data type="anyURI"/>
          </rng:oneOrMore>
          </rng:list>
          </content>
          </macroSpec> -->

        <!-- FR 48: remove entityref from att.link.external class -->
        <classSpec type="atts" module="MEI.shared" ident="att.link.external" mode="replace">
          <desc>Linking attributes for external referencing elements</desc>
          <attList>
            <!-- <attDef ident="entityref" usage="opt">
              <desc>uses a previously-declared entity to identify an external electronic object.</desc>
              <datatype>
                <rng:data type="ENTITY"/>
              </datatype>
            </attDef> -->
            <attDef ns="http://www.w3.org/1999/xlink" ident="href" usage="opt">
              <desc>allows the use of an previously-undeclared URI to identify an external electronic object.</desc>
              <datatype>
                <rng:ref name="data.URI"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>

        <!-- FR 61: add constraint for staffDef/lines.color -->
        <!-- FR 91: make staffDef member of att.declaring -->
        <!-- FR 96: limit @n on staff, staffDef, layer, layerDef to a single numeric value -->
        <elementSpec ident="staffDef" module="MEI.shared" mode="replace">
          <desc>staff definition â€• Container for staff meta-information.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.declaring"/>
            <memberOf key="att.staffDef.log"/>
            <memberOf key="att.staffDef.vis"/>
            <memberOf key="att.staffDef.ges"/>
            <memberOf key="att.staffDef.anl"/>
            <memberOf key="model.staffDefLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.labelLike"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="model.instrDefLike"/>
                <rng:ref name="model.layerDefLike"/>
                <rng:ref name="model.staffDefPart"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
          <constraintSpec ident="Check_staffDefn" scheme="isoschematron">
            <constraint>
              <sch:rule context="mei:staffDef">
                <sch:let name="thisstaff" value="@n"/>
                <sch:assert test="number(@n) = round(number(@n))">An n attribute with a single integer value must be present.</sch:assert>
                <sch:assert test="@lines or preceding::mei:staffDef[@n=$thisstaff
                  and @lines]">The first occurrence of a staff must declare
                  the number of staff lines.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="Check_clef_position_staffDef" scheme="isoschematron">
            <constraint>
              <sch:rule context="mei:staffDef[@clef.line and @lines]">
                <sch:assert test="number(@clef.line) &lt;= number(@lines)">The clef position must be less than or equal to the number of lines on the
                  staff.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="Check_clef_position_staffDef" scheme="isoschematron">
            <constraint>
              <sch:rule context="mei:staffDef[@clef.line and not(@lines)]">
                <sch:let name="thisstaff" value="@n"/>
                <sch:let name="stafflines" value="preceding::mei:staffDef[@n=$thisstaff and
                  @lines][1]/@lines"/>
                <sch:assert test="number(@clef.line) &lt;= number($stafflines)">The clef position must be less than or equal to the number of lines on the
                  staff.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="Check_tab_strings" scheme="isoschematron">
            <constraint>
              <sch:rule context="mei:staffDef[@tab.strings and @lines]">
                <sch:let name="countTokens" value="count(tokenize(normalize-space(@tab.strings), '\s'))"/>
                <sch:assert test="$countTokens = 1 or $countTokens = @lines">The tab.strings attribute must have the same number of values as there are staff
                  lines.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="Check_tab_strings" scheme="isoschematron">
            <constraint>
              <sch:rule context="mei:staffDef[@tab.strings and not(@lines)]">
                <sch:let name="countTokens" value="count(tokenize(normalize-space(@tab.strings), '\s'))"/>
                <sch:let name="thisStaff" value="@n"/>
                <sch:assert test="$countTokens = 1 or $countTokens = preceding::mei:staffDef[@n=$thisStaff and
                  @lines][1]/@lines">The
                  tab.strings attribute must have the same number of values as there are staff lines.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="Check_lines_color" scheme="isoschematron">
            <constraint>
              <sch:pattern>
                <sch:rule context="mei:staffDef[@lines.color and @lines]">
                  <sch:let name="countTokens" value="count(tokenize(normalize-space(@lines.color), '\s'))"/>
                  <sch:assert test="$countTokens = 1 or $countTokens = @lines">The lines.color attribute must have either 1) a single value or 2) the same
                    number of values as there are staff lines.</sch:assert>
                </sch:rule>
                <sch:rule context="mei:staffDef[@lines.color and not(@lines)]">
                  <sch:let name="countTokens" value="count(tokenize(normalize-space(@lines.color), '\s'))"/>
                  <sch:let name="thisStaff" value="@n"/>
                  <sch:assert test="$countTokens = 1 or $countTokens = preceding::mei:staffDef[@n=$thisStaff and
                  @lines][1]/@lines">The
                    lines.color attribute must have either 1) a single value or 2) the same number of values as there are staff lines.</sch:assert>
                </sch:rule>
              </sch:pattern>
            </constraint>
          </constraintSpec>
        </elementSpec>

        <!-- FR 70: add @complete on layer -->
        <!-- revise -->
        <classSpec type="atts" module="MEI.shared" ident="att.meterbar" mode="delete"/>
        <classSpec type="atts" module="MEI.shared" ident="att.meterconformance.bar" mode="add">
          <desc>Attributes that provide information about a measure's conformance to the prevailing meter.</desc>
          <attList>
            <attDef ident="metcon" usage="opt">
              <desc>indicates the relationship between the content of a measure and the prevailing meter</desc>
              <datatype>
                <rng:ref name="data.BOOLEAN"/>
              </datatype>
            </attDef>
            <attDef ident="control" usage="opt">
              <desc>indicates whether or not a bar line is "controlling"; that is, if it indicates a point of alignment across all the parts. Bar lines within a
                score are usually controlling; that is, they "line up". Bar lines within parts may or may not be controlling. When applied to &lt;measure&gt;,
                this attribute indicates the nature of the right barline but not the left.</desc>
              <datatype>
                <rng:ref name="data.BOOLEAN"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>

        <classSpec type="atts" module="MEI.shared" ident="att.barLine.log" mode="delete"/>
        <classSpec type="atts" module="MEI.shared" ident="att.barLine.log" mode="add">
          <desc>Logical domain attributes</desc>
          <classes>
            <memberOf key="att.meterconformance.bar"/>
          </classes>
          <attList>
            <attDef ident="rend" usage="opt">
              <desc>records the appearance and usually the function of the bar line.</desc>
              <datatype>
                <rng:ref name="data.BARRENDITION"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>

        <classSpec type="atts" module="MEI.shared" ident="att.meterconformance" mode="add">
          <desc>Attributes that provide information about a structure's conformance to the prevailing meter.</desc>
          <attList>
            <attDef ident="metcon">
              <desc>indicates the relationship between the content of a staff or layer and the prevailing meter</desc>
              <valList type="closed">
                <valItem ident="c">
                  <desc>conformant with the prevailing meter</desc>
                </valItem>
                <valItem ident="i">
                  <desc>incomplete; i.e., not enough beats</desc>
                </valItem>
                <valItem ident="o">
                  <desc>overfull; i.e., too many beats</desc>
                </valItem>
              </valList>
            </attDef>
          </attList>
        </classSpec>

        <classSpec type="atts" module="MEI.shared" ident="att.layer.log" mode="delete"/>
        <classSpec type="atts" module="MEI.shared" ident="att.layer.log" mode="add">
          <desc>Logical domain attributes</desc>
          <classes>
            <memberOf key="att.meterconformance"/>
          </classes>
        </classSpec>

        <classSpec type="atts" module="MEI.shared" ident="att.staff.log" mode="delete"/>
        <classSpec type="atts" module="MEI.shared" ident="att.staff.log" mode="add">
          <desc>Logical domain attributes</desc>
          <classes>
            <memberOf key="att.meterconformance"/>
          </classes>
        </classSpec>

        <!-- FR 72: add head to eventList -->
        <elementSpec ident="eventList" module="MEI.header" mode="replace">
          <desc>event list â€• Contains historical information given as a sequence of significant past events. &lt;eventList&gt; contains &lt;event&gt; elements
            that contain a brief description of the associated event, including dates and locations where the event took place. An &lt;eventList&gt; describes
            events associated with a work when it appears in the &lt;workDesc&gt; element or events associated with the custodial history of a given copy of a
            source for the encoding when it appears within the &lt;source&gt; or &lt;relatedItem&gt; elements. The type attribute may be used to distinguish
            between event lists with different functions, such as a list of events in the compositional process and a list of performance dates.</desc>
          <classes>
            <memberOf key="att.bibl"/>
            <memberOf key="att.common"/>
            <memberOf key="att.typed"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.headLike"/>
            </rng:optional>
            <rng:oneOrMore>
              <rng:ref name="event"/>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <!-- FR 73: add att.bibl class to annot -->
        <elementSpec ident="annot" module="MEI.shared" mode="replace">
          <desc>annotation â€• Provides a short statement explaining the text or indicating the basis for an assertion. It is used for both general comments and
            for an annotation of the musical text. &lt;annot&gt; provides a way to group participating *events* and/or *control events*, the notes that form a
            descending bass line or phrase marks, for example, and provide a label for or comment regarding the group. A list of event IDs may be given in the
            plist attribute. An editorial or analytical comment or observation, encoded elsewhere, such as in the front or back matter, in score text elements,
            or in an external document may be pointed to using the link.common, link.internal, or link.external attributes. Alternatively, the observation may
            be included directly within the &lt;annot&gt; element. The &lt;annot&gt; element, along with other elements with attributes from the
            att.link.external class, may also be used to link/synchronize elements within the MEI file to external media such as images or sound recordings. The
            ID of the MEI element(s) to be linked from should be encoded in the plist attribute while the link to the external media may be encoded in the href
            or entityref attributes or in the body of the annotation using &lt;extref&gt; or &lt;extptr&gt; elements. The starting point of the annotation may
            be indicated by either a tstamp, tstamp.ges, tstamp.real or startid attribute, while the ending point may be recorded by either a dur, dur.ges or
            endid attribute. The resp attribute records the editor(s) responsible for identifying or creating the annotation.</desc>
          <classes>
            <memberOf key="att.bibl"/>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
            <memberOf key="att.source"/>
            <memberOf key="att.typed"/>
            <memberOf key="att.annot.log"/>
            <memberOf key="att.annot.vis"/>
            <memberOf key="att.annot.ges"/>
            <memberOf key="att.annot.anl"/>
            <memberOf key="att.link.common"/>
            <memberOf key="att.link.internal"/>
            <memberOf key="att.link.external"/>
            <memberOf key="att.responsibility"/>
            <memberOf key="model.annotLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textcomponentLike"/>
                <rng:ref name="model.textphraseLike"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <!-- FR 75: add <lg> to content of <lg> -->
        <elementSpec ident="lg" module="MEI.text" mode="replace">
          <desc>line group â€• May be used for any section of text that is organized as a group of lines. This element is modelled on an element in the Text
            Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.declaring"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
            <memberOf key="att.xy"/>
            <memberOf key="model.lgLike"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.headLike"/>
            </rng:optional>
            <rng:choice>
              <rng:ref name="model.lLike"/>
              <rng:ref name="model.lgLike"/>
            </rng:choice>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="model.lLike"/>
                <rng:ref name="model.lgLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <!-- FR 76: add workDesc directly within header; replaces profileDesc -->
        <!-- remove profileDesc -->
        <macroSpec type="pe" ident="macro.profileDescPart" module="MEI.header" mode="delete"/>
        <elementSpec ident="profileDesc" module="MEI.header" mode="delete"/>

        <macroSpec ident="macro.workPart" module="MEI.header" mode="add">
          <desc>groups elements that may appear as part of the work element.</desc>
          <content>
            <rng:optional>
              <rng:ref name="history"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="langUsage"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="key"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="perfMedium"/>
            </rng:optional>
          </content>
        </macroSpec>

        <macroSpec type="pe" ident="macro.bibldescPart" module="MEI.header" mode="add">
          <desc>groups manifestation-specific elements that may appear as part of a bibliographic description.</desc>
          <content>
            <rng:optional>
              <rng:ref name="editionStmt"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="pubStmt"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="physDesc"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="seriestStmt"/>
            </rng:optional>
          </content>
        </macroSpec>

        <elementSpec ident="workDesc" module="MEI.header" mode="add">
          <desc>work description â€• A container for description of the work(s) used in the creation of the electronic file.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="model.headerPart"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:ref name="work"/>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="work" module="MEI.header" mode="add">
          <desc/>
          <classes>
            <memberOf key="att.datapointing"/>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.identifierLike"/>
            </rng:zeroOrMore>
            <rng:optional>
              <rng:ref name="titleStmt"/>
            </rng:optional>
            <rng:ref name="macro.workPart"/>
            <rng:optional>
              <rng:ref name="notesStmt"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="classification"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="castList"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="model.incipLike"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="contents"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:ref name="relatedItem"/>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="editionStmt" module="MEI.header" mode="replace">
          <desc>edition statement â€• Container for meta-data pertaining to a particular edition of the material being described. This element is modelled on an
            element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:ref name="model.editionLike"/>
              <rng:zeroOrMore>
                <rng:ref name="respStmt"/>
              </rng:zeroOrMore>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="pubStmt" module="MEI.header" mode="replace">
          <desc>publication statement â€• Container for information regarding the publication or distribution of a bibliographic item, including the publisher's
            name and address, the date of publication, and other relevant details. When an item is unpublished, use only the &lt;unpub&gt; sub-element. This
            element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:choice>
              <rng:optional>
                <rng:ref name="unpub"/>
              </rng:optional>
              <rng:zeroOrMore>
                <rng:ref name="model.pubStmtPart"/>
              </rng:zeroOrMore>
            </rng:choice>
          </content>
        </elementSpec>

        <elementSpec ident="physDesc" module="MEI.header" mode="replace">
          <desc>physical description â€• Container for information about the location, appearance, construction, or handling of physical materials, such as their
            dimension, quantity, color, style, and technique of creation. Dedicatory text and title page features may also be encoded here when they are not
            transcribed as part of the front or back matter; i.e., when they are considered to be meta-data rather than a transcription. This element is
            modelled on an element in Encoded Archival Description (EAD).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:ref name="model.physDescPart"/>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="seriestStmt" module="MEI.header" mode="replace">
          <desc>series statement â€• Groups information about the series, if any, to which a publication belongs. In this context, the title element records the
            series title, the respStmt element records the person or group responsible for the series, and the identifier element contains a series identifier.
            The content element should be used when it is necessary to enumerate the content of the series. The seriestStmt element is provided within seriestStmt for the
            description of a sub-series. This element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:ref name="model.titleLike"/>
            </rng:oneOrMore>
            <rng:zeroOrMore>
              <rng:ref name="respStmt"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:ref name="model.identifierLike"/>
            </rng:zeroOrMore>
            <rng:optional>
              <rng:ref name="contents"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:ref name="seriestStmt"/>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="source" module="MEI.header" mode="replace">
          <desc>source â€• A bibliographic description of a source used in the creation of the electronic file. Multiple physDesc sub-elements may be used to
            describe the physically separate parts of a single source. The data attribute may be used to reference one or more features that occur in this
            particular source. A URI for the related item should be placed in the &lt;identifier&gt; sub-element. This element is modelled on the sourceDesc
            element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.datapointing"/>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.identifierLike"/>
            </rng:zeroOrMore>
            <rng:optional>
              <rng:ref name="titleStmt"/>
            </rng:optional>
            <rng:ref name="macro.bibldescPart"/>
            <rng:optional>
              <rng:ref name="notesStmt"/>
            </rng:optional>
            <rng:ref name="macro.workPart"/>
            <rng:optional>
              <rng:ref name="classification"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="castList"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="model.incipLike"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="contents"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:ref name="relatedItem"/>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="relatedItem" module="MEI.header" mode="replace">
          <desc>related item â€• contains or references another bibliographic item which is related to the present one in some specified manner, for example as a
            constituent or alternative version of it. A URI for the related item should be placed in the &lt;identifier&gt; sub-element. This element is
            modelled on the relatedItem element in the Text Encoding Initiative (TEI) and MODS schemas.</desc>
          <classes>
            <memberOf key="att.datapointing"/>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.identifierLike"/>
            </rng:zeroOrMore>
            <rng:optional>
              <rng:ref name="titleStmt"/>
            </rng:optional>
            <rng:ref name="macro.bibldescPart"/>
            <rng:optional>
              <rng:ref name="notesStmt"/>
            </rng:optional>
            <rng:ref name="macro.workPart"/>
            <rng:optional>
              <rng:ref name="classification"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="castList"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="model.incipLike"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="contents"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:ref name="relatedItem"/>
            </rng:zeroOrMore>
          </content>
          <attList>
            <attDef ident="rel" usage="opt">
              <desc>describes the relationship between the &lt;relatedItem&gt; and the resource described in the parent element, i.e. &lt;source&gt; or
                &lt;relatedItem&gt;. "preceding" indicates a predecessor to the resource; "succeeding" applies to a successor to the resource; "original"
                indicates the original form of the resource; "host" provides info concerning an intellectual or physical constituent unit of the resource;
                "otherVersion" indicates a change in the intellectual content of the resource not significant enough to be a different work; "otherFormat"
                indicates a change in physical format of the resource; "isReferencedBy" applies to a citation or reference to published bibliographic
                descriptions, reviews, abstracts, or indexes of the content of the resource; "references" applies to a resource cited or referred to in the
                resource. These values are based on MODS version 3.4.</desc>
              <valList type="closed">
                <valItem ident="preceding"/>
                <valItem ident="succeeding"/>
                <valItem ident="original"/>
                <valItem ident="host"/>
                <valItem ident="constituent"/>
                <valItem ident="otherVersion"/>
                <valItem ident="otherFormat"/>
                <valItem ident="isReferencedBy"/>
                <valItem ident="references"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>

        <elementSpec ident="contents" module="MEI.header" mode="add">
          <desc>contents â€• description of the material contained within a resource. Use of this element should be determined by the complexity of the resource
            and whether or not the information is readily available. The description may consist of unstructured text or &lt;contentItem&gt; elements may be
            used to provide structured information. A link to an external table of contents may be supplied in lieu of or in addition to this element's child
            elements. If it is necesary to describe each of the components in detail, consider using &lt;relatedItem&gt; with the type="constituent" attribute
            instead of &lt;contents&gt;.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.link.external"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.headLike"/>
            </rng:optional>
            <rng:choice>
              <rng:text/>
              <rng:zeroOrMore>
                <rng:ref name="contentItem"/>
              </rng:zeroOrMore>
            </rng:choice>
            <!-- To make it possible to generate a DTD, <content> must read:
              <content>
                <rng:zeroOrMore>
                  <rng:choice>
                    <rng:text/>
                    <rng:ref name="contentItem"/>
                  </rng:choice>
                </rng:zeroOrMore>
              </content>
            -->
          </content>
          <exemplum>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <contents>A suitable tone ; Left hand colouring ; Rhythm and accent ; Tempo ; Flexibility ; Ornaments</contents>
            </egXML>
          </exemplum>
          <exemplum>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <contents>
                <contentItem>Sonata in D major, op. V, no. 1 / Corelli</contentItem>
                <contentItem>Sonata in G minor / Purcell (with Robert Donington, gamba)</contentItem>
                <contentItem>Forlane from Concert royal no. 3 / Couperin</contentItem>
              </contents>
            </egXML>
          </exemplum>
          <exemplum>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" xmlns:xlink="http://www.w3.org/1999/xlink">
              <contents xlink:href="http://www.contentProvider.org/toc/foo.html"/>
            </egXML>
          </exemplum>
        </elementSpec>

        <elementSpec ident="contentItem" module="MEI.header" mode="add">
          <desc>content item â€• Contains a single entry within a content description element.</desc>
          <classes>
            <memberOf key="att.bibl"/>
            <memberOf key="att.common"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textcomponentLike"/>
                <rng:ref name="model.textphraseLike"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
                <rng:ref name="model.incipLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="event" module="MEI.header" mode="replace">
          <desc>event â€• contains a description of an event, including the dates and locations of its occurrence and prominent participants. When a single date
            can be associated with the event, the attributes in the att.datable class may provide a more machine-processable alternative than date elements
            within the content of &lt;event&gt;. &lt;table&gt; and &lt;list&gt; elements are allowed within &lt;event&gt; in order to accommodate structured
            content.</desc>
          <classes>
            <memberOf key="att.bibl"/>
            <memberOf key="att.calendared"/>
            <memberOf key="att.common"/>
            <memberOf key="att.datable"/>
            <memberOf key="att.edit"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:choice>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:text/>
                  <rng:ref name="model.textphraseLike.limited"/>
                </rng:choice>
              </rng:zeroOrMore>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:ref name="model.tableLike"/>
                  <rng:ref name="model.listLike"/>
                </rng:choice>
              </rng:zeroOrMore>
            </rng:choice>
          </content>
        </elementSpec>

        <elementSpec ident="classification" module="MEI.header" mode="replace">
          <desc>classification â€• Groups information which describes the nature or topic of an entity. Although use of names and terms from locally controlled
            vocabularies is possible, terms used here should come from standard national or international vocabularies whenever they are available in order to
            enable searches in systems that include multiple MEI documents, or MEI documents and bibliographic records from many institutions.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.datapointing"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:choice>
                <rng:ref name="classCode"/>
                <rng:ref name="termList"/>
              </rng:choice>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="creation" module="MEI.header" mode="replace">
          <desc>creation â€• Non-bibliographic creation details for the work being encoded, in narrative form. Contains phrases describing the origin of the text,
            e.g. the date, place, and circumstances of its composition. This element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="date"/>
                <rng:ref name="geogName"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="langUsage" module="MEI.header" mode="replace">
          <desc>language usage â€• Langusage groups elements describing the languages, sublanguages, dialects, etc., represented within the encoded work. This
            element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.datapointing"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:ref name="language"/>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="history" module="MEI.header" mode="add">
          <desc>history â€• History provides a container for information about the creation and history of a resource.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.headLike"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="creation"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="eventList"/>
                <rng:ref name="p"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="key" module="MEI.header" mode="add">
          <desc>key â€• Key captures information about tonal center and mode. It is used exclusively within bibliographic descriptions. Do not confuse this
            element with &lt;keySig&gt;, which is used within the body of an MEI file to record this data.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.accidental.performed"/>
            <memberOf key="att.pitch"/>
          </classes>
          <content>
            <rng:text/>
          </content>
          <attList>
            <attDef ident="mode" usage="opt">
              <desc>indicates major, minor, or other tonality.</desc>
              <datatype>
                <rng:ref name="data.MODE"/>
              </datatype>
            </attDef>
          </attList>
        </elementSpec>

        <elementSpec ident="perfMedium" module="MEI.header" mode="add">
          <desc>performance medium â€• Indicates the number and character of the performing forces used in a musical composition. The function of instrumentalists
            or vocalists is represented by the choice of ensemble and performer child elements. Arrangements are coded for the medium of the work being
            described, not for the original medium.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.authorized"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="head"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="ensemble"/>
                <rng:ref name="performer"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="performer" module="MEI.header" mode="add">
          <desc>performer â€• Used when performing forces includes specific instrumental or vocal performers. If the performer plays more than one instrument in a
            composition, the first named instrument is given. If a principal instrument can be determined, the name or code for that instrument is given. For
            percussion music, whether for a single performer or more than one, the number of performers is given, rather than the number of instruments. For
            monologues, or works with narration, an indication of unspecified voice is given for the speaker or narrator.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:ref name="instrVoice"/>
            </rng:oneOrMore>
            <rng:optional>
              <rng:ref name="role"/>
            </rng:optional>
          </content>
        </elementSpec>

        <elementSpec ident="ensemble" module="MEI.header" mode="add">
          <desc>ensemble â€• Used when an ensemble, such as an orchestra, is included in the performing forces of a composition. It is recommended that name
            values (recorded in the reg attribute or in the element's content) be taken from a standardized list, such as the International Association of Music
            Libraries' Medium of performance Codes List or the MARC Instruments and Voices Code List.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
          </classes>
          <content>
            <rng:ref name="instrVoice"/>
            <rng:optional>
              <rng:ref name="role"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="performer"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="instrVoice" module="MEI.header" mode="add">
          <desc/>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.authorized"/>
            <memberOf key="att.regularized"/>
          </classes>
          <content>
            <rng:text/>
          </content>
          <attList>
            <attDef ident="count" usage="opt">
              <desc>indicates the number of parts or performers, e.g., in a composition for 2 flutes.</desc>
              <datatype>
                <rng:data type="positiveInteger"/>
              </datatype>
            </attDef>
            <attDef ident="solo" usage="opt">
              <desc>marks this instrument or vocal part as a soloist. Do not use this attribute for a solo instrument which is not accompanied.</desc>
              <datatype>
                <rng:ref name="data.BOOLEAN"/>
              </datatype>
            </attDef>
          </attList>
        </elementSpec>

        <elementSpec ident="castList" module="MEI.shared" mode="add">
          <desc>cast list â€• Contains a single cast list or dramatis personae.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.headLike"/>
            </rng:optional>
            <rng:oneOrMore>
              <rng:choice>
                <rng:ref name="castItem"/>
                <rng:ref name="castGrp"/>
              </rng:choice>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="castItem" module="MEI.shared" mode="add">
          <desc>cast list item â€• Contains a single entry within a cast list, describing either a single role or a list of non-speaking roles.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="role"/>
                <rng:ref name="roleDesc"/>
                <rng:ref name="actor"/>
              </rng:choice>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="castGrp" module="MEI.shared" mode="add">
          <desc>cast list group â€• Groups one or more individual castItem elements within a cast list.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:oneOrMore>
              <rng:choice>
                <rng:ref name="castItem"/>
                <rng:ref name="castGrp"/>
                <rng:ref name="roleDesc"/>
              </rng:choice>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="role" module="MEI.shared" mode="add">
          <desc>role â€• Name of a dramatic role, as given in a cast list.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike.limited"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="roleDesc" module="MEI.shared" mode="add">
          <desc>role description â€• Describes a character's role in a drama.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike.limited"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="actor" module="MEI.shared" mode="add">
          <desc>actor â€• Name of an actor appearing within a cast list.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike.limited"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>
        
        <!-- Revise description of meiHead -->
        <elementSpec ident="meiHead" module="MEI.header" mode="replace">
          <desc>mei header â€• A wrapper for general bibliographic and descriptive information about the encoded file. This information is often essential in a
            machine-readable environment. Five sub-elements must be encoded in the following order: &lt;altId&gt;(optional), &lt;fileDesc&gt;(required),
            &lt;encodingDesc&gt;(optional), &lt;workDesc;&gt;(optional), and &lt;revisionDesc&gt;(optional). These elements and their sub-elements provide: a
            unique identifier for the MEI file, bibliographic information about the MEI file and its sources, information about the encoding process,
            information about the creation of the work being encoded, and statements regarding significant revisions of the file. The xml:lang attribute may be
            used to indicate the language in which the metadata content of the header is provided. In order to encourage uniformity in the provision of metadata
            across document types, this element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.bibl"/>
            <memberOf key="att.common"/>
            <memberOf key="att.lang"/>
            <memberOf key="att.meiversion"/>
            <memberOf key="model.startLike.header"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="altId"/>
            </rng:zeroOrMore>
            <rng:ref name="fileDesc"/>
            <rng:ref name="model.headerPart_sequenceOptional"/>
            <rng:optional>
              <rng:ref name="revisionDesc"/>
            </rng:optional>
          </content>
          <attList>
            <attDef ident="type" usage="opt">
              <desc>specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.</desc>
              <valList type="closed">
                <valItem ident="music">
                  <desc>header is attached to a music document</desc>
                </valItem>
                <valItem ident="corpus">
                  <desc>header is attached to a corpus</desc>
                </valItem>
              </valList>
            </attDef>
          </attList>
        </elementSpec>

        <!-- FR 77: add att.edit and att.trans classes to subst -->
        <elementSpec ident="subst" module="MEI.edittrans" mode="replace">
          <desc>substitution â€• Groups transcriptional elements when the combination is to be regarded as a single intervention in the text. This element is
            modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.edit"/>
            <memberOf key="att.trans"/>
            <memberOf key="model.editLike"/>
          </classes>
          <content>
            <rng:ref name="model.transcriptionLike"/>
            <rng:oneOrMore>
              <rng:ref name="model.transcriptionLike"/>
            </rng:oneOrMore>
          </content>
        </elementSpec>

        <!-- FR 78: allow dur attribute (as ending timestamp) on tie -->
        <classSpec type="atts" module="MEI.cmn" ident="att.tie.log" mode="delete"/>
        <classSpec type="atts" module="MEI.cmn" ident="att.tie.log" mode="add">
          <desc>Logical domain attributes</desc>
          <classes>
            <memberOf key="att.controlevent"/>
            <memberOf key="att.startendid"/>
            <memberOf key="att.duration.timestamp"/>
          </classes>
        </classSpec>

        <!-- FR 79: allow music content in abbr and expan -->
        <!-- employ same model as sic -->
        <elementSpec ident="abbr" module="MEI.shared" mode="replace">
          <desc>abbreviation â€• A generic element for 1) a shortened form of a word, including an acronym or 2) a shorthand notation. The type attribute may be
            used to classify the abbreviation according to some convenient typology. Sample values include: suspension - the abbreviation provides the first
            letter(s) of the word or phrase, omitting the remainder; contraction - the abbreviation omits some letter(s) in the middle; brevigraph - the
            abbreviation comprises a special symbol or mark; superscription - the abbreviation includes writing above the line; acronym - the abbreviation
            comprises the initial letters of the words of a phrase; title - the abbreviation is for a title of address (Dr, Ms, Mr, ...); organization - the
            abbreviation is for the name of an organization; geographic - the abbreviation is for a geographic name. This tag is the mirror image of the
            &lt;expan&gt; tag; both allow the encoder to transcribe both an abbreviation and its expansion. In &lt;abbr&gt;, however, the original is
            transcribed as the content of the element and the expansion as an attribute value; &lt;expan&gt; reverses this. The choice between the two is up to
            the user. The &lt;abbr&gt; tag is not required; if appropriate, the encoder may transcribe abbreviations in the source text silently, without
            tagging them. If abbreviations are not transcribed directly but expanded silently, then the MEI header should so indicate. The cert attribute
            signifies the degree of certainty ascribed to the expansion of the abbreviation. The expan attribute gives an expansion of the abbreviation. The
            resp attribute contains an ID reference to an element containing the name of the editor or transcriber responsible for supplying the expansion of
            the abbreviation. This element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.edit"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
            <memberOf key="att.trans"/>
            <memberOf key="att.typed"/>
            <memberOf key="model.editorialLike"/>
            <memberOf key="model.choicePart"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike"/>
                <rng:ref name="model.eventLike"/>
                <rng:ref name="model.eventLike.neumes"/>
                <rng:ref name="model.controleventLike"/>
                <rng:ref name="model.lyricsLike"/>
                <rng:ref name="model.midiLike"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
                <rng:ref name="model.eventLike.measureFilling"/>
                <rng:ref name="model.noteModifierLike"/>
                <!-- <rng:ref name="model.sectionLike"/>
                <rng:ref name="model.measureLike"/>
                <rng:ref name="model.staffLike"/>
                <rng:ref name="model.layerLike"/> -->
                <rng:ref name="model.graphicprimitiveLike"/>
                <rng:ref name="model.fLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
          <attList>
            <attDef ident="expan" usage="opt">
              <desc>records the expansion of a text abbreviation.</desc>
            </attDef>
          </attList>
        </elementSpec>
        
        <elementSpec ident="expan" module="MEI.shared" mode="replace">
          <desc>expansion â€• Contains the expansion of an abbreviation. The type attribute may be used to classify the abbreviation according to some convenient
            typology. This element is the mirror image of &lt;abbr&gt;. Both allow the encoder to transcribe both an abbreviation and its expansion. In
            &lt;abbr&gt;, however, the original is transcribed as the content of the element and the expansion as an attribute value; &lt;expan&gt; reverses
            this. The choice between the two elements is up to the user. If appropriate, the encoder may expand abbreviations in the source text silently,
            without tagging them. If this is done, the MEI header should indicate this has been done. The abbr attribute gives the abbreviation in its
            unexpanded form. The cert attribute signifies the degree of certainty ascribed to the expansion of the abbreviation. The resp attribute contains an
            ID reference to an element containing the name of the editor or transcriber responsible for supplying the expansion of the abbreviation held as the
            content of the &lt;expan&gt; element. This element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.edit"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
            <memberOf key="att.trans"/>
            <memberOf key="att.typed"/>
            <memberOf key="model.editorialLike"/>
            <memberOf key="model.choicePart"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike"/>
                <rng:ref name="model.eventLike"/>
                <rng:ref name="model.eventLike.neumes"/>
                <rng:ref name="model.controleventLike"/>
                <rng:ref name="model.lyricsLike"/>
                <rng:ref name="model.midiLike"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
                <rng:ref name="model.eventLike.measureFilling"/>
                <rng:ref name="model.noteModifierLike"/>
                <rng:ref name="model.sectionLike"/>
                <rng:ref name="model.measureLike"/>
                <rng:ref name="model.staffLike"/>
                <rng:ref name="model.layerLike"/>
                <rng:ref name="model.graphicprimitiveLike"/>
                <rng:ref name="model.fLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
          <attList>
            <attDef ident="abbr" usage="opt">
              <desc>captures the unabbreviated form of the text.</desc>
            </attDef>
          </attList>
        </elementSpec>

        <!-- FR 80: make surface and zone members of att.datapointing -->
        <elementSpec ident="surface" module="MEI.facsimile" mode="replace">
          <desc>surface â€• Defines a written surface in terms of a rectangular coordinate space, optionally grouping one or more graphic representations of that
            space, and rectangular zones of interest within it. The startid attribute may be used to hold a reference to the first feature occurring on this
            surface. This element is modelled on an element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.coordinated"/>
            <memberOf key="att.datapointing"/>
            <memberOf key="att.declaring"/>
            <memberOf key="att.startid"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.figDescLike"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:ref name="model.graphicLike"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:ref name="zone"/>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <elementSpec ident="zone" module="MEI.facsimile" mode="replace">
          <desc>zone â€• Defines a rectangular area contained within a surface. This element is modelled on an element in the Text Encoding Initiative
            (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.coordinated"/>
            <memberOf key="att.datapointing"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.figDescLike"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:ref name="model.graphicLike"/>
            </rng:zeroOrMore>
          </content>
        </elementSpec>

        <!-- FR 84: "in-staff" ossia -->
        <classSpec type="atts" module="MEI.shared" ident="att.layer.anl" mode="replace">
          <desc>Analytical domain attributes</desc>
          <classes>
            <memberOf key="att.common.anl"/>
          </classes>
        </classSpec>

        <classSpec type="model" ident="model.ossiaLike" module="MEI.cmn" mode="replace">
          <desc>groups elements that function like ossia.</desc>
          <classes>
            <memberOf key="model.measurePart"/>
            <memberOf key="model.staffPart"/>
          </classes>
        </classSpec>

        <elementSpec ident="ossia" module="MEI.cmn" mode="replace">
          <desc>ossia â€• An alternate notational version *present in the source being transcribed*. The alternative material often provides a simpler, easier to
            perform option, while at other times the alternate material provides indications of performance practice, such as ornamentation.Often an ossia is
            rendered above the main staff on a reduced-size staff. Sometimes the alternate material occurs on the same staff as the primarly text, but in a
            separate layer. In this case, the alternative material is often rendered in small-sized notation.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.ossia.log"/>
            <memberOf key="att.ossia.vis"/>
            <memberOf key="att.ossia.ges"/>
            <memberOf key="att.ossia.anl"/>
            <memberOf key="model.ossiaLike"/>
          </classes>
          <content>
            <rng:choice>
              <rng:group>
                <rng:ref name="model.staffLike"/>
                <rng:oneOrMore>
                  <rng:ref name="model.staffLike"/>
                </rng:oneOrMore>
              </rng:group>
              <rng:group>
                <rng:ref name="model.layerLike"/>
                <rng:oneOrMore>
                  <rng:ref name="model.layerLike"/>
                </rng:oneOrMore>
              </rng:group>
            </rng:choice>
          </content>
          <constraintSpec ident="Check_ossia" scheme="isoschematron">
            <constraint>
              <sch:pattern>
                <sch:rule context="mei:measure/mei:ossia">
                  <sch:assert test="count(mei:*) = count(mei:staff)">Ossia may contain only measure elements in this context.</sch:assert>
                </sch:rule>
                <sch:rule context="mei:staff/mei:ossia">
                  <sch:assert test="count(mei:*) = count(mei:layer)">Ossia may contain only layer elements in this context.</sch:assert>
                </sch:rule>
              </sch:pattern>
            </constraint>
          </constraintSpec>
        </elementSpec>

        <!-- FR 96: limit @n on staff, staffDef, layer, layerDef to a single numeric value -->
        <elementSpec ident="layer" module="MEI.shared" mode="replace">
          <desc>layer â€• An independent stream of events on a staff. The term 'layer' in used instead of 'voice' in order to avoid confusion between 'voice' and
            'voice leading'. The n attribute is used to establish a connection back to the appropriate layerDef element.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.declaring"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.layer.log"/>
            <memberOf key="att.layer.vis"/>
            <memberOf key="att.layer.ges"/>
            <memberOf key="att.layer.anl"/>
            <memberOf key="model.layerLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="model.appLike"/>
                <rng:ref name="model.divLike"/>
                <rng:ref name="model.milestoneLike.music"/>
                <rng:ref name="model.scoreDefLike"/>
                <rng:ref name="model.staffDefLike"/>
                <rng:ref name="model.staffGrpLike"/>
                <rng:ref name="model.annotLike"/>
                <rng:ref name="model.graphicprimitiveLike"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
                <rng:ref name="model.layerPart"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
          <constraintSpec ident="Check_layern" scheme="isoschematron">
            <constraint>
              <sch:rule xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="mei:layer[@n]">
                <sch:assert test="number(@n) = round(number(@n))">The n attribute must be a single integer.</sch:assert>
              </sch:rule>              
            </constraint>
          </constraintSpec>
        </elementSpec>

        <!-- FR 85: allow xi:include -->
        <!-- FR 89: allow @n to contain more than one value -->
        <classSpec type="atts" module="MEI.shared" ident="att.common" mode="delete"/>
        <classSpec type="atts" module="MEI.shared" ident="att.common" mode="add">
          <desc>Common attributes</desc>
          <attList>
            <attDef ident="id" ns="http://www.w3.org/XML/1998/namespace" usage="opt">
              <desc>regularizes the naming of an element and thus facilitates building links between it and other resources. Each id attribute within a document
                must have a unique value.</desc>
              <datatype>
                <rng:data type="ID"/>
              </datatype>
            </attDef>
            <attDef ident="n" usage="opt">
              <desc>provides a label (name or number) for an element.</desc>
              <!-- <desc>provides a label (name or number) for an element. While its value need not be unique, it is required to be a single token.</desc>
              <datatype>
                <rng:data type="NMTOKEN"/>
              </datatype> -->
            </attDef>
            <attDef ident="base" ns="http://www.w3.org/XML/1998/namespace" usage="opt">
              <desc>provides a base URI reference with which applications can resolve relative URI references into absolute URI references.</desc>
              <datatype>
                <rng:data type="anyURI"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>
        <classSpec type="atts" module="MEI.shared" ident="att.lang" mode="replace">
          <desc>Language attributes common to text elements</desc>
          <attList>
            <attDef ident="lang" ns="http://www.w3.org/XML/1998/namespace" usage="opt">
              <desc>identifies the language of the element's content. The values for this attribute are language 'tags' as defined in BCP 47. All language tags
                that make use of private use subtags must be documented in a corresponding language element in the MEI header whose id attribute is the same as
                the language tag's value.</desc>
              <datatype>
                <rng:data type="language"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>

        <!-- FR 86: allow caption to follow fig and table content -->
        <elementSpec ident="fig" module="MEI.figtable" mode="replace">
          <desc>figure â€• groups elements representing or containing graphic information such as an illustration or figure. This element is modelled on the
            figure element in the Text Encoding Initiative (TEI).</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.link.common"/>
            <memberOf key="att.link.external"/>
            <memberOf key="att.xy"/>
            <memberOf key="model.figureLike"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.captionLike"/>
            </rng:optional>
            <rng:optional>
              <rng:ref name="figDesc"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:ref name="model.graphicLike"/>
            </rng:zeroOrMore>
            <rng:optional>
              <rng:ref name="model.captionLike"/>
            </rng:optional>
          </content>
        </elementSpec>

        <elementSpec ident="table" module="MEI.figtable" mode="replace">
          <desc>table â€• Visual layout in tabular form. This element is modelled on elements in Encoded Archival Description (EAD), Text Encoding Initiative
            (TEI), and HTML.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.lang"/>
            <memberOf key="att.xy"/>
            <memberOf key="model.tableLike"/>
          </classes>
          <content>
            <rng:optional>
              <rng:ref name="model.captionLike"/>
            </rng:optional>
            <rng:oneOrMore>
              <rng:ref name="tr"/>
            </rng:oneOrMore>
            <rng:optional>
              <rng:ref name="model.captionLike"/>
            </rng:optional>
          </content>
        </elementSpec>

        <!-- FR 87: make att.intervallicdesc more precise -->
        <macroSpec module="mei" type="dt" ident="data.INTERVAL.AMOUNT" mode="add">
          <desc>Either a token indicating direction of the interval but not its precise value or a decimal value in half steps. Decimal values are permitted to
            accommodate microtuning.</desc>
          <content>
            <rng:choice>
              <rng:data type="decimal"/>
              <rng:data type="token">
                <rng:param name="pattern">u|d|s</rng:param>
              </rng:data>
            </rng:choice>
          </content>
        </macroSpec>

        <classSpec type="atts" module="MEI.analysis" ident="att.intervallicdesc" mode="replace">
          <desc>Attributes that provide for description of intervallic content</desc>
          <classes>
            <memberOf key="att.intervalharmonic"/>
          </classes>
          <attList>
            <attDef ident="intm" usage="opt">
              <desc>encodes the melodic interval from the previous pitch. The value may be a general directional indication (u, d, s) or a precise numeric value
                in half steps.</desc>
              <datatype>
                <rng:ref name="data.INTERVAL.AMOUNT"/>
              </datatype>
            </attDef>
          </attList>
        </classSpec>

        <!-- FR 88: allow incipit in header -->

        <!-- This macro permits any element from the XSLT namespace.  Allowing XSLT in <incip> makes it possible to generate the incipit from the notational
          content of the MEI file. Does this violate the principal of explicit markup? -->
        <!-- <macroSpec ident="macro.XSLT">
          <desc/>
          <content>
            <rng:element>
              <rng:nsName ns="http://www.w3.org/1999/XSL/Transform"/>
              <rng:zeroOrMore>
                <rng:attribute>
                  <rng:anyName/>
                </rng:attribute>
              </rng:zeroOrMore>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:text/>
                  <rng:ref name="macro.XSLT"/>
                </rng:choice>
              </rng:zeroOrMore>
            </rng:element>
          </content>
        </macroSpec> -->

        <!-- create incipLike class -->
        <classSpec ident="model.incipLike" type="model" mode="add">
          <desc>groups elements used to represent a textual or musical incipit.</desc>
        </classSpec>

        <!-- create incip element -->
        <elementSpec ident="incip" module="MEI.shared" mode="add">
          <desc>incipit â€• The opening words or music of a composition. The &lt;p&gt; and &lt;lg&gt; elements are permitted in order to accommodate a text
            incipit, while &lt;score&gt; is available to provide an MEI-encoded musical incipit. An incipit encoded in another text format can be included in a
            CDATA section inside the &lt;incipCode&gt; element.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.typed"/>
            <memberOf key="model.incipLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="model.pLike"/>
                <rng:ref name="model.lgLike"/>
              </rng:choice>
            </rng:zeroOrMore>
            <rng:optional>
              <rng:choice>
                <rng:ref name="incipCode"/>
                <rng:ref name="model.scoreLike"/>
                <!-- <rng:ref name="macro.XSLT"/> -->
              </rng:choice>
            </rng:optional>
          </content>
        </elementSpec>

        <!-- incipCode element holds incipit encoded in a text format other than MEI -->
        <elementSpec ident="incipCode" module="MEI.header" mode="add">
          <desc>coded incipit â€• Incipit coded in a plain text format, such as Plaine &amp; Easie.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.bibl"/>
            <memberOf key="att.internetmedia"/>
          </classes>
          <content>
            <rng:text/>
          </content>
          <constraintSpec ident="Check_incipCode_form_mimetype" scheme="isoschematron">
            <constraint>
              <sch:rule context="mei:incipCode">
                <sch:assert test="@form or @mimetype">incipCode must have a form or mimetype attribute.</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <attList>
            <attDef ident="space" ns="http://www.w3.org/XML/1998/namespace" usage="opt">
              <desc>identifies the language of the element's content. The values for this attribute are language 'tags' as defined in BCP 47. All language tags
                that make use of private use subtags must be documented in a corresponding language element in the MEI header whose id attribute is the same as
                the language tag's value.</desc>
              <valList type="closed">
                <valItem ident="default">
                  <desc>allows the application to handle white space as necessary. Not including an xml:space attribute produces the same result as using the
                    default value.</desc>
                </valItem>
                <valItem ident="preserve">
                  <desc>instructs the application to maintain white space as is, suggesting that it might have meaning.</desc>
                </valItem>
              </valList>
            </attDef>
            <attDef ident="form" usage="opt">
              <desc>describes the notational form of the coded text</desc>
              <valList type="semi">
                <valItem ident="plaineAndEasie">
                  <desc>Plaine &amp; Easie Code</desc>
                </valItem>
                <valItem ident="humdrumKern">
                  <desc>Humdrum Kern format</desc>
                </valItem>
              </valList>
            </attDef>
          </attList>
        </elementSpec>        
        
        <!-- FR 90: make label member of att.typed -->
        <elementSpec ident="label" module="MEI.shared" mode="replace">
          <desc>label â€• A text string that identifies a staff or staff group.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.source"/>
            <memberOf key="att.typed"/>
            <memberOf key="model.labelLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike.limited"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
        </elementSpec>
        
        <!-- FR 92: make layerDef member of att.labels and att.declaring -->
        <!-- FR 96: limit @n on staff, staffDef, layer, layerDef to a single numeric value -->
        <elementSpec ident="layerDef" module="MEI.shared" mode="replace">
          <desc>layer definition â€• Container for layer meta-information.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.declaring"/>
            <memberOf key="att.labels"/>
            <memberOf key="att.layerDef.log"/>
            <memberOf key="att.layerDef.vis"/>
            <memberOf key="att.layerDef.ges"/>
            <memberOf key="att.layerDef.anl"/>
            <memberOf key="model.layerDefLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:ref name="model.labelLike"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:ref name="model.instrDefLike"/>
            </rng:zeroOrMore>
          </content>
          <constraintSpec ident="Check_layerDefn" scheme="isoschematron">
            <constraint>
              <sch:rule xmlns:rng="http://relaxng.org/ns/structure/1.0"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns="http://www.tei-c.org/ns/1.0"
                context="mei:layerDef">
                <sch:assert test="number(@n) = round(number(@n))">An n attribute with a single integer value must be present.</sch:assert>
              </sch:rule>              
            </constraint>
          </constraintSpec>
        </elementSpec>
        
        <!-- FR 96: limit @n on staff, staffDef, layer, layerDef to a single numeric value -->
        <elementSpec ident="staff" module="MEI.shared" mode="replace">
          <desc>staff â€• A group of equidistant horizontal lines on which notes are placed in order to represent pitch. In MEI, however, &lt;staff&gt; is a
            grouping element for individual 'strands' of notes, rests, etc. that may or may not be rendered on staff lines; that is, diastematic and
            nondiastematic signs. The n attribute functions as a connection back to the appropriate staffDef element where logical and visual information about
            the staff is recorded. If the n attribute is omitted, encoding order is presumed to match the staff order. Of course, if data is supplied for only a
            subset of staves found in a printed source, the n attribute must be supplied.</desc>
          <classes>
            <memberOf key="att.common"/>
            <memberOf key="att.declaring"/>
            <memberOf key="att.facsimile"/>
            <memberOf key="att.staff.log"/>
            <memberOf key="att.staff.vis"/>
            <memberOf key="att.staff.ges"/>
            <memberOf key="att.staff.anl"/>
            <memberOf key="model.staffLike"/>
          </classes>
          <content>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:ref name="model.appLike"/>
                <rng:ref name="model.divLike"/>
                <rng:ref name="model.milestoneLike.music"/>
                <rng:ref name="model.scoreDefLike"/>
                <rng:ref name="model.staffDefLike"/>
                <rng:ref name="model.staffGrpLike"/>
                <rng:ref name="model.annotLike"/>
                <rng:ref name="model.graphicprimitiveLike"/>
                <rng:ref name="model.editLike"/>
                <rng:ref name="model.transcriptionLike"/>
                <rng:ref name="model.staffPart"/>
              </rng:choice>
            </rng:zeroOrMore>
          </content>
          <constraintSpec ident="Check_staffn" scheme="isoschematron">
            <constraint>
                <sch:rule xmlns:rng="http://relaxng.org/ns/structure/1.0"
                  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                  xmlns="http://www.tei-c.org/ns/1.0"
                  context="mei:staff[@n]">
                  <sch:assert test="number(@n) = round(number(@n))">The n attribute must be a single integer.</sch:assert>
                </sch:rule>              
            </constraint>
          </constraintSpec>
        </elementSpec>

      </schemaSpec>
    </body>
  </text>
</TEI>
